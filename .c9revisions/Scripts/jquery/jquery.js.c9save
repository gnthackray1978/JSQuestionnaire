{"ts":1357250011529,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*!\n* jQuery JavaScript Library v1.7.2\n* http://jquery.com/\n*\n* Copyright 2011, John Resig\n* Dual licensed under the MIT or GPL Version 2 licenses.\n* http://jquery.org/license\n*\n* Includes Sizzle.js\n* http://sizzlejs.com/\n* Copyright 2011, The Dojo Foundation\n* Released under the MIT, BSD, and GPL Licenses.\n*\n* Date: Wed Mar 21 12:46:34 2012 -0700\n*/\n(function (window, undefined) {\n\n    // Use the correct document accordingly with window argument (sandbox)\n    var document = window.document,\n\tnavigator = window.navigator,\n\tlocation = window.location;\n    var jQuery = (function () {\n\n        // Define a local copy of jQuery\n        var jQuery = function (selector, context) {\n            // The jQuery object is actually just the init constructor 'enhanced'\n            return new jQuery.fn.init(selector, context, rootjQuery);\n        },\n\n        // Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n        // Map over the $ in case of overwrite\n\t_$ = window.$,\n\n        // A central reference to the root jQuery(document)\n\trootjQuery,\n\n        // A simple way to check for HTML strings or ID strings\n        // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\tquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,\n\n        // Check if a string has a non-whitespace character in it\n\trnotwhite = /\\S/,\n\n        // Used for trimming whitespace\n\ttrimLeft = /^\\s+/,\n\ttrimRight = /\\s+$/,\n\n        // Match a standalone tag\n\trsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/,\n\n        // JSON RegExp\n\trvalidchars = /^[\\],:{}\\s]*$/,\n\trvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\n\trvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\n\trvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\n\n        // Useragent RegExp\n\trwebkit = /(webkit)[ \\/]([\\w.]+)/,\n\tropera = /(opera)(?:.*version)?[ \\/]([\\w.]+)/,\n\trmsie = /(msie) ([\\w.]+)/,\n\trmozilla = /(mozilla)(?:.*? rv:([\\w.]+))?/,\n\n        // Matches dashed string for camelizing\n\trdashAlpha = /-([a-z]|[0-9])/ig,\n\trmsPrefix = /^-ms-/,\n\n        // Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function (all, letter) {\n\t    return (letter + \"\").toUpperCase();\n\t},\n\n        // Keep a UserAgent string for use with jQuery.browser\n\tuserAgent = navigator.userAgent,\n\n        // For matching the engine and version of the browser\n\tbrowserMatch,\n\n        // The deferred used on DOM ready\n\treadyList,\n\n        // The ready event handler\n\tDOMContentLoaded,\n\n        // Save a reference to some core methods\n\ttoString = Object.prototype.toString,\n\thasOwn = Object.prototype.hasOwnProperty,\n\tpush = Array.prototype.push,\n\tslice = Array.prototype.slice,\n\ttrim = String.prototype.trim,\n\tindexOf = Array.prototype.indexOf,\n\n        // [[Class]] -> type pairs\n\tclass2type = {};\n\n        jQuery.fn = jQuery.prototype = {\n            constructor: jQuery,\n            init: function (selector, context, rootjQuery) {\n                var match, elem, ret, doc;\n\n                // Handle $(\"\"), $(null), or $(undefined)\n                if (!selector) {\n                    return this;\n                }\n\n                // Handle $(DOMElement)\n                if (selector.nodeType) {\n                    this.context = this[0] = selector;\n                    this.length = 1;\n                    return this;\n                }\n\n                // The body element only exists once, optimize finding it\n                if (selector === \"body\" && !context && document.body) {\n                    this.context = document;\n                    this[0] = document.body;\n                    this.selector = selector;\n                    this.length = 1;\n                    return this;\n                }\n\n                // Handle HTML strings\n                if (typeof selector === \"string\") {\n                    // Are we dealing with HTML string or an ID?\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\n                        // Assume that strings that start and end with <> are HTML and skip the regex check\n                        match = [null, selector, null];\n\n                    } else {\n                        match = quickExpr.exec(selector);\n                    }\n\n                    // Verify a match, and that no context was specified for #id\n                    if (match && (match[1] || !context)) {\n\n                        // HANDLE: $(html) -> $(array)\n                        if (match[1]) {\n                            context = context instanceof jQuery ? context[0] : context;\n                            doc = (context ? context.ownerDocument || context : document);\n\n                            // If a single string is passed in and it's a single tag\n                            // just do a createElement and skip the rest\n                            ret = rsingleTag.exec(selector);\n\n                            if (ret) {\n                                if (jQuery.isPlainObject(context)) {\n                                    selector = [document.createElement(ret[1])];\n                                    jQuery.fn.attr.call(selector, context, true);\n\n                                } else {\n                                    selector = [doc.createElement(ret[1])];\n                                }\n\n                            } else {\n                                ret = jQuery.buildFragment([match[1]], [doc]);\n                                selector = (ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment).childNodes;\n                            }\n\n                            return jQuery.merge(this, selector);\n\n                            // HANDLE: $(\"#id\")\n                        } else {\n                            elem = document.getElementById(match[2]);\n\n                            // Check parentNode to catch when Blackberry 4.6 returns\n                            // nodes that are no longer in the document #6963\n                            if (elem && elem.parentNode) {\n                                // Handle the case where IE and Opera return items\n                                // by name instead of ID\n                                if (elem.id !== match[2]) {\n                                    return rootjQuery.find(selector);\n                                }\n\n                                // Otherwise, we inject the element directly into the jQuery object\n                                this.length = 1;\n                                this[0] = elem;\n                            }\n\n                            this.context = document;\n                            this.selector = selector;\n                            return this;\n                        }\n\n                        // HANDLE: $(expr, $(...))\n                    } else if (!context || context.jquery) {\n                        return (context || rootjQuery).find(selector);\n\n                        // HANDLE: $(expr, context)\n                        // (which is just equivalent to: $(context).find(expr)\n                    } else {\n                        return this.constructor(context).find(selector);\n                    }\n\n                    // HANDLE: $(function)\n                    // Shortcut for document ready\n                } else if (jQuery.isFunction(selector)) {\n                    return rootjQuery.ready(selector);\n                }\n\n                if (selector.selector !== undefined) {\n                    this.selector = selector.selector;\n                    this.context = selector.context;\n                }\n\n                return jQuery.makeArray(selector, this);\n            },\n\n            // Start with an empty selector\n            selector: \"\",\n\n            // The current version of jQuery being used\n            jquery: \"1.7.2\",\n\n            // The default length of a jQuery object is 0\n            length: 0,\n\n            // The number of elements contained in the matched element set\n            size: function () {\n                return this.length;\n            },\n\n            toArray: function () {\n                return slice.call(this, 0);\n            },\n\n            // Get the Nth element in the matched element set OR\n            // Get the whole matched element set as a clean array\n            get: function (num) {\n                return num == null ?\n\n                // Return a 'clean' array\n\t\t\tthis.toArray() :\n\n                // Return just the object\n\t\t\t(num < 0 ? this[this.length + num] : this[num]);\n            },\n\n            // Take an array of elements and push it onto the stack\n            // (returning the new matched element set)\n            pushStack: function (elems, name, selector) {\n                // Build a new jQuery matched element set\n                var ret = this.constructor();\n\n                if (jQuery.isArray(elems)) {\n                    push.apply(ret, elems);\n\n                } else {\n                    jQuery.merge(ret, elems);\n                }\n\n                // Add the old object onto the stack (as a reference)\n                ret.prevObject = this;\n\n                ret.context = this.context;\n\n                if (name === \"find\") {\n                    ret.selector = this.selector + (this.selector ? \" \" : \"\") + selector;\n                } else if (name) {\n                    ret.selector = this.selector + \".\" + name + \"(\" + selector + \")\";\n                }\n\n                // Return the newly-formed element set\n                return ret;\n            },\n\n            // Execute a callback for every element in the matched set.\n            // (You can seed the arguments with an array of args, but this is\n            // only used internally.)\n            each: function (callback, args) {\n                return jQuery.each(this, callback, args);\n            },\n\n            ready: function (fn) {\n                // Attach the listeners\n                jQuery.bindReady();\n\n                // Add the callback\n                readyList.add(fn);\n\n                return this;\n            },\n\n            eq: function (i) {\n                i = +i;\n                return i === -1 ?\n\t\t\tthis.slice(i) :\n\t\t\tthis.slice(i, i + 1);\n            },\n\n            first: function () {\n                return this.eq(0);\n            },\n\n            last: function () {\n                return this.eq(-1);\n            },\n\n            slice: function () {\n                return this.pushStack(slice.apply(this, arguments),\n\t\t\t\"slice\", slice.call(arguments).join(\",\"));\n            },\n\n            map: function (callback) {\n                return this.pushStack(jQuery.map(this, function (elem, i) {\n                    return callback.call(elem, i, elem);\n                }));\n            },\n\n            end: function () {\n                return this.prevObject || this.constructor(null);\n            },\n\n            // For internal use only.\n            // Behaves like an Array's method, not like a jQuery method.\n            push: push,\n            sort: [].sort,\n            splice: [].splice\n        };\n\n        // Give the init function the jQuery prototype for later instantiation\n        jQuery.fn.init.prototype = jQuery.fn;\n\n        jQuery.extend = jQuery.fn.extend = function () {\n            var options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n            // Handle a deep copy situation\n            if (typeof target === \"boolean\") {\n                deep = target;\n                target = arguments[1] || {};\n                // skip the boolean and the target\n                i = 2;\n            }\n\n            // Handle case when target is a string or something (possible in deep copy)\n            if (typeof target !== \"object\" && !jQuery.isFunction(target)) {\n                target = {};\n            }\n\n            // extend jQuery itself if only one argument is passed\n            if (length === i) {\n                target = this;\n                --i;\n            }\n\n            for (; i < length; i++) {\n                // Only deal with non-null/undefined values\n                if ((options = arguments[i]) != null) {\n                    // Extend the base object\n                    for (name in options) {\n                        src = target[name];\n                        copy = options[name];\n\n                        // Prevent never-ending loop\n                        if (target === copy) {\n                            continue;\n                        }\n\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {\n                            if (copyIsArray) {\n                                copyIsArray = false;\n                                clone = src && jQuery.isArray(src) ? src : [];\n\n                            } else {\n                                clone = src && jQuery.isPlainObject(src) ? src : {};\n                            }\n\n                            // Never move original objects, clone them\n                            target[name] = jQuery.extend(deep, clone, copy);\n\n                            // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n                            target[name] = copy;\n                        }\n                    }\n                }\n            }\n\n            // Return the modified object\n            return target;\n        };\n\n        jQuery.extend({\n            noConflict: function (deep) {\n                if (window.$ === jQuery) {\n                    window.$ = _$;\n                }\n\n                if (deep && window.jQuery === jQuery) {\n                    window.jQuery = _jQuery;\n                }\n\n                return jQuery;\n            },\n\n            // Is the DOM ready to be used? Set to true once it occurs.\n            isReady: false,\n\n            // A counter to track how many items to wait for before\n            // the ready event fires. See #6781\n            readyWait: 1,\n\n            // Hold (or release) the ready event\n            holdReady: function (hold) {\n                if (hold) {\n                    jQuery.readyWait++;\n                } else {\n                    jQuery.ready(true);\n                }\n            },\n\n            // Handle when the DOM is ready\n            ready: function (wait) {\n                // Either a released hold or an DOMready/load event and not yet ready\n                if ((wait === true && ! --jQuery.readyWait) || (wait !== true && !jQuery.isReady)) {\n                    // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n                    if (!document.body) {\n                        return setTimeout(jQuery.ready, 1);\n                    }\n\n                    // Remember that the DOM is ready\n                    jQuery.isReady = true;\n\n                    // If a normal DOM Ready event fired, decrement, and wait if need be\n                    if (wait !== true && --jQuery.readyWait > 0) {\n                        return;\n                    }\n\n                    // If there are functions bound, to execute\n                    readyList.fireWith(document, [jQuery]);\n\n                    // Trigger any bound ready events\n                    if (jQuery.fn.trigger) {\n                        jQuery(document).trigger(\"ready\").off(\"ready\");\n                    }\n                }\n            },\n\n            bindReady: function () {\n                if (readyList) {\n                    return;\n                }\n\n                readyList = jQuery.Callbacks(\"once memory\");\n\n                // Catch cases where $(document).ready() is called after the\n                // browser event has already occurred.\n                if (document.readyState === \"complete\") {\n                    // Handle it asynchronously to allow scripts the opportunity to delay ready\n                    return setTimeout(jQuery.ready, 1);\n                }\n\n                // Mozilla, Opera and webkit nightlies currently support this event\n                if (document.addEventListener) {\n                    // Use the handy event callback\n                    document.addEventListener(\"DOMContentLoaded\", DOMContentLoaded, false);\n\n                    // A fallback to window.onload, that will always work\n                    window.addEventListener(\"load\", jQuery.ready, false);\n\n                    // If IE event model is used\n                } else if (document.attachEvent) {\n                    // ensure firing before onload,\n                    // maybe late but safe also for iframes\n                    document.attachEvent(\"onreadystatechange\", DOMContentLoaded);\n\n                    // A fallback to window.onload, that will always work\n                    window.attachEvent(\"onload\", jQuery.ready);\n\n                    // If IE and not a frame\n                    // continually check to see if the document is ready\n                    var toplevel = false;\n\n                    try {\n                        toplevel = window.frameElement == null;\n                    } catch (e) { }\n\n                    if (document.documentElement.doScroll && toplevel) {\n                        doScrollCheck();\n                    }\n                }\n            },\n\n            // See test/unit/core.js for details concerning isFunction.\n            // Since version 1.3, DOM methods and functions like alert\n            // aren't supported. They return false on IE (#2968).\n            isFunction: function (obj) {\n                return jQuery.type(obj) === \"function\";\n            },\n\n            isArray: Array.isArray || function (obj) {\n                return jQuery.type(obj) === \"array\";\n            },\n\n            isWindow: function (obj) {\n                return obj != null && obj == obj.window;\n            },\n\n            isNumeric: function (obj) {\n                return !isNaN(parseFloat(obj)) && isFinite(obj);\n            },\n\n            type: function (obj) {\n                return obj == null ?\n\t\t\tString(obj) :\n\t\t\tclass2type[toString.call(obj)] || \"object\";\n            },\n\n            isPlainObject: function (obj) {\n                // Must be an Object.\n                // Because of IE, we also have to check the presence of the constructor property.\n                // Make sure that DOM nodes and window objects don't pass through, as well\n                if (!obj || jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow(obj)) {\n                    return false;\n                }\n\n                try {\n                    // Not own constructor property must be Object\n                    if (obj.constructor &&\n\t\t\t\t!hasOwn.call(obj, \"constructor\") &&\n\t\t\t\t!hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n                        return false;\n                    }\n                } catch (e) {\n                    // IE8,9 Will throw exceptions on certain host objects #9897\n                    return false;\n                }\n\n                // Own properties are enumerated firstly, so to speed up,\n                // if last one is own, then all properties are own.\n\n                var key;\n                for (key in obj) { }\n\n                return key === undefined || hasOwn.call(obj, key);\n            },\n\n            isEmptyObject: function (obj) {\n                for (var name in obj) {\n                    return false;\n                }\n                return true;\n            },\n\n            error: function (msg) {\n                throw new Error(msg);\n            },\n\n            parseJSON: function (data) {\n                if (typeof data !== \"string\" || !data) {\n                    return null;\n                }\n\n                // Make sure leading/trailing whitespace is removed (IE can't handle it)\n                data = jQuery.trim(data);\n\n                // Attempt to parse using the native JSON parser first\n                if (window.JSON && window.JSON.parse) {\n                    return window.JSON.parse(data);\n                }\n\n                // Make sure the incoming data is actual JSON\n                // Logic borrowed from http://json.org/json2.js\n                if (rvalidchars.test(data.replace(rvalidescape, \"@\")\n\t\t\t.replace(rvalidtokens, \"]\")\n\t\t\t.replace(rvalidbraces, \"\"))) {\n\n                    return (new Function(\"return \" + data))();\n\n                }\n                jQuery.error(\"Invalid JSON: \" + data);\n            },\n\n            // Cross-browser xml parsing\n            parseXML: function (data) {\n                if (typeof data !== \"string\" || !data) {\n                    return null;\n                }\n                var xml, tmp;\n                try {\n                    if (window.DOMParser) { // Standard\n                        tmp = new DOMParser();\n                        xml = tmp.parseFromString(data, \"text/xml\");\n                    } else { // IE\n                        xml = new ActiveXObject(\"Microsoft.XMLDOM\");\n                        xml.async = \"false\";\n                        xml.loadXML(data);\n                    }\n                } catch (e) {\n                    xml = undefined;\n                }\n                if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\n                    jQuery.error(\"Invalid XML: \" + data);\n                }\n                return xml;\n            },\n\n            noop: function () { },\n\n            // Evaluates a script in a global context\n            // Workarounds based on findings by Jim Driscoll\n            // http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n            globalEval: function (data) {\n                if (data && rnotwhite.test(data)) {\n                    // We use execScript on Internet Explorer\n                    // We use an anonymous function so that context is window\n                    // rather than jQuery in Firefox\n                    (window.execScript || function (data) {\n                        window[\"eval\"].call(window, data);\n                    })(data);\n                }\n            },\n\n            // Convert dashed to camelCase; used by the css and data modules\n            // Microsoft forgot to hump their vendor prefix (#9572)\n            camelCase: function (string) {\n                return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n            },\n\n            nodeName: function (elem, name) {\n                return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();\n            },\n\n            // args is for internal usage only\n            each: function (object, callback, args) {\n                var name, i = 0,\n\t\t\tlength = object.length,\n\t\t\tisObj = length === undefined || jQuery.isFunction(object);\n\n                if (args) {\n                    if (isObj) {\n                        for (name in object) {\n                            if (callback.apply(object[name], args) === false) {\n                                break;\n                            }\n                        }\n                    } else {\n                        for (; i < length; ) {\n                            if (callback.apply(object[i++], args) === false) {\n                                break;\n                            }\n                        }\n                    }\n\n                    // A special, fast, case for the most common use of each\n                } else {\n                    if (isObj) {\n                        for (name in object) {\n                            if (callback.call(object[name], name, object[name]) === false) {\n                                break;\n                            }\n                        }\n                    } else {\n                        for (; i < length; ) {\n                            if (callback.call(object[i], i, object[i++]) === false) {\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                return object;\n            },\n\n            // Use native String.trim function wherever possible\n            trim: trim ?\n\t\tfunction (text) {\n\t\t    return text == null ?\n\t\t\t\t\"\" :\n\t\t\t\ttrim.call(text);\n\t\t} :\n\n            // Otherwise use our own trimming functionality\n\t\tfunction (text) {\n\t\t    return text == null ?\n\t\t\t\t\"\" :\n\t\t\t\ttext.toString().replace(trimLeft, \"\").replace(trimRight, \"\");\n\t\t},\n\n            // results is for internal usage only\n            makeArray: function (array, results) {\n                var ret = results || [];\n\n                if (array != null) {\n                    // The window, strings (and functions) also have 'length'\n                    // Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930\n                    var type = jQuery.type(array);\n\n                    if (array.length == null || type === \"string\" || type === \"function\" || type === \"regexp\" || jQuery.isWindow(array)) {\n                        push.call(ret, array);\n                    } else {\n                        jQuery.merge(ret, array);\n                    }\n                }\n\n                return ret;\n            },\n\n            inArray: function (elem, array, i) {\n                var len;\n\n                if (array) {\n                    if (indexOf) {\n                        return indexOf.call(array, elem, i);\n                    }\n\n                    len = array.length;\n                    i = i ? i < 0 ? Math.max(0, len + i) : i : 0;\n\n                    for (; i < len; i++) {\n                        // Skip accessing in sparse arrays\n                        if (i in array && array[i] === elem) {\n                            return i;\n                        }\n                    }\n                }\n\n                return -1;\n            },\n\n            merge: function (first, second) {\n                var i = first.length,\n\t\t\tj = 0;\n\n                if (typeof second.length === \"number\") {\n                    for (var l = second.length; j < l; j++) {\n                        first[i++] = second[j];\n                    }\n\n                } else {\n                    while (second[j] !== undefined) {\n                        first[i++] = second[j++];\n                    }\n                }\n\n                first.length = i;\n\n                return first;\n            },\n\n            grep: function (elems, callback, inv) {\n                var ret = [], retVal;\n                inv = !!inv;\n\n                // Go through the array, only saving the items\n                // that pass the validator function\n                for (var i = 0, length = elems.length; i < length; i++) {\n                    retVal = !!callback(elems[i], i);\n                    if (inv !== retVal) {\n                        ret.push(elems[i]);\n                    }\n                }\n\n                return ret;\n            },\n\n            // arg is for internal usage only\n            map: function (elems, callback, arg) {\n                var value, key, ret = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n                // jquery objects are treated as arrays\n\t\t\tisArray = elems instanceof jQuery || length !== undefined && typeof length === \"number\" && ((length > 0 && elems[0] && elems[length - 1]) || length === 0 || jQuery.isArray(elems));\n\n                // Go through the array, translating each of the items to their\n                if (isArray) {\n                    for (; i < length; i++) {\n                        value = callback(elems[i], i, arg);\n\n                        if (value != null) {\n                            ret[ret.length] = value;\n                        }\n                    }\n\n                    // Go through every key on the object,\n                } else {\n                    for (key in elems) {\n                        value = callback(elems[key], key, arg);\n\n                        if (value != null) {\n                            ret[ret.length] = value;\n                        }\n                    }\n                }\n\n                // Flatten any nested arrays\n                return ret.concat.apply([], ret);\n            },\n\n            // A global GUID counter for objects\n            guid: 1,\n\n            // Bind a function to a context, optionally partially applying any\n            // arguments.\n            proxy: function (fn, context) {\n                if (typeof context === \"string\") {\n                    var tmp = fn[context];\n                    context = fn;\n                    fn = tmp;\n                }\n\n                // Quick check to determine if target is callable, in the spec\n                // this throws a TypeError, but we will just return undefined.\n                if (!jQuery.isFunction(fn)) {\n                    return undefined;\n                }\n\n                // Simulated bind\n                var args = slice.call(arguments, 2),\n\t\t\tproxy = function () {\n\t\t\t    return fn.apply(context, args.concat(slice.call(arguments)));\n\t\t\t};\n\n                // Set the guid of unique handler to the same of original handler, so it can be removed\n                proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;\n\n                return proxy;\n            },\n\n            // Mutifunctional method to get and set values to a collection\n            // The value/s can optionally be executed if it's a function\n            access: function (elems, fn, key, value, chainable, emptyGet, pass) {\n                var exec,\n\t\t\tbulk = key == null,\n\t\t\ti = 0,\n\t\t\tlength = elems.length;\n\n                // Sets many values\n                if (key && typeof key === \"object\") {\n                    for (i in key) {\n                        jQuery.access(elems, fn, i, key[i], 1, emptyGet, value);\n                    }\n                    chainable = 1;\n\n                    // Sets one value\n                } else if (value !== undefined) {\n                    // Optionally, function values get executed if exec is true\n                    exec = pass === undefined && jQuery.isFunction(value);\n\n                    if (bulk) {\n                        // Bulk operations only iterate when executing function values\n                        if (exec) {\n                            exec = fn;\n                            fn = function (elem, key, value) {\n                                return exec.call(jQuery(elem), value);\n                            };\n\n                            // Otherwise they run against the entire set\n                        } else {\n                            fn.call(elems, value);\n                            fn = null;\n                        }\n                    }\n\n                    if (fn) {\n                        for (; i < length; i++) {\n                            fn(elems[i], key, exec ? value.call(elems[i], i, fn(elems[i], key)) : value, pass);\n                        }\n                    }\n\n                    chainable = 1;\n                }\n\n                return chainable ?\n\t\t\telems :\n\n                // Gets\n\t\t\tbulk ?\n\t\t\t\tfn.call(elems) :\n\t\t\t\tlength ? fn(elems[0], key) : emptyGet;\n            },\n\n            now: function () {\n                return (new Date()).getTime();\n            },\n\n            // Use of jQuery.browser is frowned upon.\n            // More details: http://docs.jquery.com/Utilities/jQuery.browser\n            uaMatch: function (ua) {\n                ua = ua.toLowerCase();\n\n                var match = rwebkit.exec(ua) ||\n\t\t\tropera.exec(ua) ||\n\t\t\trmsie.exec(ua) ||\n\t\t\tua.indexOf(\"compatible\") < 0 && rmozilla.exec(ua) ||\n\t\t\t[];\n\n                return { browser: match[1] || \"\", version: match[2] || \"0\" };\n            },\n\n            sub: function () {\n                function jQuerySub(selector, context) {\n                    return new jQuerySub.fn.init(selector, context);\n                }\n                jQuery.extend(true, jQuerySub, this);\n                jQuerySub.superclass = this;\n                jQuerySub.fn = jQuerySub.prototype = this();\n                jQuerySub.fn.constructor = jQuerySub;\n                jQuerySub.sub = this.sub;\n                jQuerySub.fn.init = function init(selector, context) {\n                    if (context && context instanceof jQuery && !(context instanceof jQuerySub)) {\n                        context = jQuerySub(context);\n                    }\n\n                    return jQuery.fn.init.call(this, selector, context, rootjQuerySub);\n                };\n                jQuerySub.fn.init.prototype = jQuerySub.fn;\n                var rootjQuerySub = jQuerySub(document);\n                return jQuerySub;\n            },\n\n            browser: {}\n        });\n\n        // Populate the class2type map\n        jQuery.each(\"Boolean Number String Function Array Date RegExp Object\".split(\" \"), function (i, name) {\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n        });\n\n        browserMatch = jQuery.uaMatch(userAgent);\n        if (browserMatch.browser) {\n            jQuery.browser[browserMatch.browser] = true;\n            jQuery.browser.version = browserMatch.version;\n        }\n\n        // Deprecated, use jQuery.browser.webkit instead\n        if (jQuery.browser.webkit) {\n            jQuery.browser.safari = true;\n        }\n\n        // IE doesn't match non-breaking spaces with \\s\n        if (rnotwhite.test(\"\\xA0\")) {\n            trimLeft = /^[\\s\\xA0]+/;\n            trimRight = /[\\s\\xA0]+$/;\n        }\n\n        // All jQuery objects should point back to these\n        rootjQuery = jQuery(document);\n\n        // Cleanup functions for the document ready method\n        if (document.addEventListener) {\n            DOMContentLoaded = function () {\n                document.removeEventListener(\"DOMContentLoaded\", DOMContentLoaded, false);\n                jQuery.ready();\n            };\n\n        } else if (document.attachEvent) {\n            DOMContentLoaded = function () {\n                // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n                if (document.readyState === \"complete\") {\n                    document.detachEvent(\"onreadystatechange\", DOMContentLoaded);\n                    jQuery.ready();\n                }\n            };\n        }\n\n        // The DOM ready check for Internet Explorer\n        function doScrollCheck() {\n            if (jQuery.isReady) {\n                return;\n            }\n\n            try {\n                // If IE is used, use the trick by Diego Perini\n                // http://javascript.nwbox.com/IEContentLoaded/\n                document.documentElement.doScroll(\"left\");\n            } catch (e) {\n                setTimeout(doScrollCheck, 1);\n                return;\n            }\n\n            // and execute any waiting functions\n            jQuery.ready();\n        }\n\n        return jQuery;\n\n    })();\n\n\n    // String to Object flags format cache\n    var flagsCache = {};\n\n    // Convert String-formatted flags into Object-formatted ones and store in cache\n    function createFlags(flags) {\n        var object = flagsCache[flags] = {},\n\t\ti, length;\n        flags = flags.split(/\\s+/);\n        for (i = 0, length = flags.length; i < length; i++) {\n            object[flags[i]] = true;\n        }\n        return object;\n    }\n\n    /*\n    * Create a callback list using the following parameters:\n    *\n    *\tflags:\tan optional list of space-separated flags that will change how\n    *\t\t\tthe callback list behaves\n    *\n    * By default a callback list will act like an event callback list and can be\n    * \"fired\" multiple times.\n    *\n    * Possible flags:\n    *\n    *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n    *\n    *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n    *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n    *\t\t\t\t\tvalues (like a Deferred)\n    *\n    *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n    *\n    *\tstopOnFalse:\tinterrupt callings when a callback returns false\n    *\n    */\n    jQuery.Callbacks = function (flags) {\n\n        // Convert flags from String-formatted to Object-formatted\n        // (we check in cache first)\n        flags = flags ? (flagsCache[flags] || createFlags(flags)) : {};\n\n        var // Actual callback list\n\t\tlist = [],\n        // Stack of fire calls for repeatable lists\n\t\tstack = [],\n        // Last fire value (for non-forgettable lists)\n\t\tmemory,\n        // Flag to know if list was already fired\n\t\tfired,\n        // Flag to know if list is currently firing\n\t\tfiring,\n        // First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n        // End of the loop when firing\n\t\tfiringLength,\n        // Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n        // Add one or several callbacks to the list\n\t\tadd = function (args) {\n\t\t    var i,\n\t\t\t\tlength,\n\t\t\t\telem,\n\t\t\t\ttype,\n\t\t\t\tactual;\n\t\t    for (i = 0, length = args.length; i < length; i++) {\n\t\t        elem = args[i];\n\t\t        type = jQuery.type(elem);\n\t\t        if (type === \"array\") {\n\t\t            // Inspect recursively\n\t\t            add(elem);\n\t\t        } else if (type === \"function\") {\n\t\t            // Add if not in unique mode and callback is not in\n\t\t            if (!flags.unique || !self.has(elem)) {\n\t\t                list.push(elem);\n\t\t            }\n\t\t        }\n\t\t    }\n\t\t},\n        // Fire callbacks\n\t\tfire = function (context, args) {\n\t\t    args = args || [];\n\t\t    memory = !flags.memory || [context, args];\n\t\t    fired = true;\n\t\t    firing = true;\n\t\t    firingIndex = firingStart || 0;\n\t\t    firingStart = 0;\n\t\t    firingLength = list.length;\n\t\t    for (; list && firingIndex < firingLength; firingIndex++) {\n\t\t        if (list[firingIndex].apply(context, args) === false && flags.stopOnFalse) {\n\t\t            memory = true; // Mark as halted\n\t\t            break;\n\t\t        }\n\t\t    }\n\t\t    firing = false;\n\t\t    if (list) {\n\t\t        if (!flags.once) {\n\t\t            if (stack && stack.length) {\n\t\t                memory = stack.shift();\n\t\t                self.fireWith(memory[0], memory[1]);\n\t\t            }\n\t\t        } else if (memory === true) {\n\t\t            self.disable();\n\t\t        } else {\n\t\t            list = [];\n\t\t        }\n\t\t    }\n\t\t},\n        // Actual Callbacks object\n\t\tself = {\n\t\t    // Add a callback or a collection of callbacks to the list\n\t\t    add: function () {\n\t\t        if (list) {\n\t\t            var length = list.length;\n\t\t            add(arguments);\n\t\t            // Do we need to add the callbacks to the\n\t\t            // current firing batch?\n\t\t            if (firing) {\n\t\t                firingLength = list.length;\n\t\t                // With memory, if we're not firing then\n\t\t                // we should call right away, unless previous\n\t\t                // firing was halted (stopOnFalse)\n\t\t            } else if (memory && memory !== true) {\n\t\t                firingStart = length;\n\t\t                fire(memory[0], memory[1]);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    },\n\t\t    // Remove a callback from the list\n\t\t    remove: function () {\n\t\t        if (list) {\n\t\t            var args = arguments,\n\t\t\t\t\t\targIndex = 0,\n\t\t\t\t\t\targLength = args.length;\n\t\t            for (; argIndex < argLength; argIndex++) {\n\t\t                for (var i = 0; i < list.length; i++) {\n\t\t                    if (args[argIndex] === list[i]) {\n\t\t                        // Handle firingIndex and firingLength\n\t\t                        if (firing) {\n\t\t                            if (i <= firingLength) {\n\t\t                                firingLength--;\n\t\t                                if (i <= firingIndex) {\n\t\t                                    firingIndex--;\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                        // Remove the element\n\t\t                        list.splice(i--, 1);\n\t\t                        // If we have some unicity property then\n\t\t                        // we only need to do this once\n\t\t                        if (flags.unique) {\n\t\t                            break;\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    },\n\t\t    // Control if a given callback is in the list\n\t\t    has: function (fn) {\n\t\t        if (list) {\n\t\t            var i = 0,\n\t\t\t\t\t\tlength = list.length;\n\t\t            for (; i < length; i++) {\n\t\t                if (fn === list[i]) {\n\t\t                    return true;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return false;\n\t\t    },\n\t\t    // Remove all callbacks from the list\n\t\t    empty: function () {\n\t\t        list = [];\n\t\t        return this;\n\t\t    },\n\t\t    // Have the list do nothing anymore\n\t\t    disable: function () {\n\t\t        list = stack = memory = undefined;\n\t\t        return this;\n\t\t    },\n\t\t    // Is it disabled?\n\t\t    disabled: function () {\n\t\t        return !list;\n\t\t    },\n\t\t    // Lock the list in its current state\n\t\t    lock: function () {\n\t\t        stack = undefined;\n\t\t        if (!memory || memory === true) {\n\t\t            self.disable();\n\t\t        }\n\t\t        return this;\n\t\t    },\n\t\t    // Is it locked?\n\t\t    locked: function () {\n\t\t        return !stack;\n\t\t    },\n\t\t    // Call all callbacks with the given context and arguments\n\t\t    fireWith: function (context, args) {\n\t\t        if (stack) {\n\t\t            if (firing) {\n\t\t                if (!flags.once) {\n\t\t                    stack.push([context, args]);\n\t\t                }\n\t\t            } else if (!(flags.once && memory)) {\n\t\t                fire(context, args);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    },\n\t\t    // Call all the callbacks with the given arguments\n\t\t    fire: function () {\n\t\t        self.fireWith(this, arguments);\n\t\t        return this;\n\t\t    },\n\t\t    // To know if the callbacks have already been called at least once\n\t\t    fired: function () {\n\t\t        return !!fired;\n\t\t    }\n\t\t};\n\n        return self;\n    };\n\n\n\n\n    var // Static reference to slice\n\tsliceDeferred = [].slice;\n\n    jQuery.extend({\n\n        Deferred: function (func) {\n            var doneList = jQuery.Callbacks(\"once memory\"),\n\t\t\tfailList = jQuery.Callbacks(\"once memory\"),\n\t\t\tprogressList = jQuery.Callbacks(\"memory\"),\n\t\t\tstate = \"pending\",\n\t\t\tlists = {\n\t\t\t    resolve: doneList,\n\t\t\t    reject: failList,\n\t\t\t    notify: progressList\n\t\t\t},\n\t\t\tpromise = {\n\t\t\t    done: doneList.add,\n\t\t\t    fail: failList.add,\n\t\t\t    progress: progressList.add,\n\n\t\t\t    state: function () {\n\t\t\t        return state;\n\t\t\t    },\n\n\t\t\t    // Deprecated\n\t\t\t    isResolved: doneList.fired,\n\t\t\t    isRejected: failList.fired,\n\n\t\t\t    then: function (doneCallbacks, failCallbacks, progressCallbacks) {\n\t\t\t        deferred.done(doneCallbacks).fail(failCallbacks).progress(progressCallbacks);\n\t\t\t        return this;\n\t\t\t    },\n\t\t\t    always: function () {\n\t\t\t        deferred.done.apply(deferred, arguments).fail.apply(deferred, arguments);\n\t\t\t        return this;\n\t\t\t    },\n\t\t\t    pipe: function (fnDone, fnFail, fnProgress) {\n\t\t\t        return jQuery.Deferred(function (newDefer) {\n\t\t\t            jQuery.each({\n\t\t\t                done: [fnDone, \"resolve\"],\n\t\t\t                fail: [fnFail, \"reject\"],\n\t\t\t                progress: [fnProgress, \"notify\"]\n\t\t\t            }, function (handler, data) {\n\t\t\t                var fn = data[0],\n\t\t\t\t\t\t\t\taction = data[1],\n\t\t\t\t\t\t\t\treturned;\n\t\t\t                if (jQuery.isFunction(fn)) {\n\t\t\t                    deferred[handler](function () {\n\t\t\t                        returned = fn.apply(this, arguments);\n\t\t\t                        if (returned && jQuery.isFunction(returned.promise)) {\n\t\t\t                            returned.promise().then(newDefer.resolve, newDefer.reject, newDefer.notify);\n\t\t\t                        } else {\n\t\t\t                            newDefer[action + \"With\"](this === deferred ? newDefer : this, [returned]);\n\t\t\t                        }\n\t\t\t                    });\n\t\t\t                } else {\n\t\t\t                    deferred[handler](newDefer[action]);\n\t\t\t                }\n\t\t\t            });\n\t\t\t        }).promise();\n\t\t\t    },\n\t\t\t    // Get a promise for this deferred\n\t\t\t    // If obj is provided, the promise aspect is added to the object\n\t\t\t    promise: function (obj) {\n\t\t\t        if (obj == null) {\n\t\t\t            obj = promise;\n\t\t\t        } else {\n\t\t\t            for (var key in promise) {\n\t\t\t                obj[key] = promise[key];\n\t\t\t            }\n\t\t\t        }\n\t\t\t        return obj;\n\t\t\t    }\n\t\t\t},\n\t\t\tdeferred = promise.promise({}),\n\t\t\tkey;\n\n            for (key in lists) {\n                deferred[key] = lists[key].fire;\n                deferred[key + \"With\"] = lists[key].fireWith;\n            }\n\n            // Handle state\n            deferred.done(function () {\n                state = \"resolved\";\n            }, failList.disable, progressList.lock).fail(function () {\n                state = \"rejected\";\n            }, doneList.disable, progressList.lock);\n\n            // Call given func if any\n            if (func) {\n                func.call(deferred, deferred);\n            }\n\n            // All done!\n            return deferred;\n        },\n\n        // Deferred helper\n        when: function (firstParam) {\n            var args = sliceDeferred.call(arguments, 0),\n\t\t\ti = 0,\n\t\t\tlength = args.length,\n\t\t\tpValues = new Array(length),\n\t\t\tcount = length,\n\t\t\tpCount = length,\n\t\t\tdeferred = length <= 1 && firstParam && jQuery.isFunction(firstParam.promise) ?\n\t\t\t\tfirstParam :\n\t\t\t\tjQuery.Deferred(),\n\t\t\tpromise = deferred.promise();\n            function resolveFunc(i) {\n                return function (value) {\n                    args[i] = arguments.length > 1 ? sliceDeferred.call(arguments, 0) : value;\n                    if (!(--count)) {\n                        deferred.resolveWith(deferred, args);\n                    }\n                };\n            }\n            function progressFunc(i) {\n                return function (value) {\n                    pValues[i] = arguments.length > 1 ? sliceDeferred.call(arguments, 0) : value;\n                    deferred.notifyWith(promise, pValues);\n                };\n            }\n            if (length > 1) {\n                for (; i < length; i++) {\n                    if (args[i] && args[i].promise && jQuery.isFunction(args[i].promise)) {\n                        args[i].promise().then(resolveFunc(i), deferred.reject, progressFunc(i));\n                    } else {\n                        --count;\n                    }\n                }\n                if (!count) {\n                    deferred.resolveWith(deferred, args);\n                }\n            } else if (deferred !== firstParam) {\n                deferred.resolveWith(deferred, length ? [firstParam] : []);\n            }\n            return promise;\n        }\n    });\n\n\n\n\n    jQuery.support = (function () {\n\n        var support,\n\t\tall,\n\t\ta,\n\t\tselect,\n\t\topt,\n\t\tinput,\n\t\tfragment,\n\t\ttds,\n\t\tevents,\n\t\teventName,\n\t\ti,\n\t\tisSupported,\n\t\tdiv = document.createElement(\"div\"),\n\t\tdocumentElement = document.documentElement;\n\n        // Preliminary tests\n        div.setAttribute(\"className\", \"t\");\n        div.innerHTML = \"   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>\";\n\n        all = div.getElementsByTagName(\"*\");\n        a = div.getElementsByTagName(\"a\")[0];\n\n        // Can't get basic test support\n        if (!all || !all.length || !a) {\n            return {};\n        }\n\n        // First batch of supports tests\n        select = document.createElement(\"select\");\n        opt = select.appendChild(document.createElement(\"option\"));\n        input = div.getElementsByTagName(\"input\")[0];\n\n        support = {\n            // IE strips leading whitespace when .innerHTML is used\n            leadingWhitespace: (div.firstChild.nodeType === 3),\n\n            // Make sure that tbody elements aren't automatically inserted\n            // IE will insert them into empty tables\n            tbody: !div.getElementsByTagName(\"tbody\").length,\n\n            // Make sure that link elements get serialized correctly by innerHTML\n            // This requires a wrapper element in IE\n            htmlSerialize: !!div.getElementsByTagName(\"link\").length,\n\n            // Get the style information from getAttribute\n            // (IE uses .cssText instead)\n            style: /top/.test(a.getAttribute(\"style\")),\n\n            // Make sure that URLs aren't manipulated\n            // (IE normalizes it by default)\n            hrefNormalized: (a.getAttribute(\"href\") === \"/a\"),\n\n            // Make sure that element opacity exists\n            // (IE uses filter instead)\n            // Use a regex to work around a WebKit issue. See #5145\n            opacity: /^0.55/.test(a.style.opacity),\n\n            // Verify style float existence\n            // (IE uses styleFloat instead of cssFloat)\n            cssFloat: !!a.style.cssFloat,\n\n            // Make sure that if no value is specified for a checkbox\n            // that it defaults to \"on\".\n            // (WebKit defaults to \"\" instead)\n            checkOn: (input.value === \"on\"),\n\n            // Make sure that a selected-by-default option has a working selected property.\n            // (WebKit defaults to false instead of true, IE too, if it's in an optgroup)\n            optSelected: opt.selected,\n\n            // Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)\n            getSetAttribute: div.className !== \"t\",\n\n            // Tests for enctype support on a form(#6743)\n            enctype: !!document.createElement(\"form\").enctype,\n\n            // Makes sure cloning an html5 element does not cause problems\n            // Where outerHTML is undefined, this still works\n            html5Clone: document.createElement(\"nav\").cloneNode(true).outerHTML !== \"<:nav></:nav>\",\n\n            // Will be defined later\n            submitBubbles: true,\n            changeBubbles: true,\n            focusinBubbles: false,\n            deleteExpando: true,\n            noCloneEvent: true,\n            inlineBlockNeedsLayout: false,\n            shrinkWrapBlocks: false,\n            reliableMarginRight: true,\n            pixelMargin: true\n        };\n\n        // jQuery.boxModel DEPRECATED in 1.3, use jQuery.support.boxModel instead\n        jQuery.boxModel = support.boxModel = (document.compatMode === \"CSS1Compat\");\n\n        // Make sure checked status is properly cloned\n        input.checked = true;\n        support.noCloneChecked = input.cloneNode(true).checked;\n\n        // Make sure that the options inside disabled selects aren't marked as disabled\n        // (WebKit marks them as disabled)\n        select.disabled = true;\n        support.optDisabled = !opt.disabled;\n\n        // Test to see if it's possible to delete an expando from an element\n        // Fails in Internet Explorer\n        try {\n            delete div.test;\n        } catch (e) {\n            support.deleteExpando = false;\n        }\n\n        if (!div.addEventListener && div.attachEvent && div.fireEvent) {\n            div.attachEvent(\"onclick\", function () {\n                // Cloning a node shouldn't copy over any\n                // bound event handlers (IE does this)\n                support.noCloneEvent = false;\n            });\n            div.cloneNode(true).fireEvent(\"onclick\");\n        }\n\n        // Check if a radio maintains its value\n        // after being appended to the DOM\n        input = document.createElement(\"input\");\n        input.value = \"t\";\n        input.setAttribute(\"type\", \"radio\");\n        support.radioValue = input.value === \"t\";\n\n        input.setAttribute(\"checked\", \"checked\");\n\n        // #11217 - WebKit loses check when the name is after the checked attribute\n        input.setAttribute(\"name\", \"t\");\n\n        div.appendChild(input);\n        fragment = document.createDocumentFragment();\n        fragment.appendChild(div.lastChild);\n\n        // WebKit doesn't clone checked state correctly in fragments\n        support.checkClone = fragment.cloneNode(true).cloneNode(true).lastChild.checked;\n\n        // Check if a disconnected checkbox will retain its checked\n        // value of true after appended to the DOM (IE6/7)\n        support.appendChecked = input.checked;\n\n        fragment.removeChild(input);\n        fragment.appendChild(div);\n\n        // Technique from Juriy Zaytsev\n        // http://perfectionkills.com/detecting-event-support-without-browser-sniffing/\n        // We only care about the case where non-standard event systems\n        // are used, namely in IE. Short-circuiting here helps us to\n        // avoid an eval call (in setAttribute) which can cause CSP\n        // to go haywire. See: https://developer.mozilla.org/en/Security/CSP\n        if (div.attachEvent) {\n            for (i in {\n                submit: 1,\n                change: 1,\n                focusin: 1\n            }) {\n                eventName = \"on\" + i;\n                isSupported = (eventName in div);\n                if (!isSupported) {\n                    div.setAttribute(eventName, \"return;\");\n                    isSupported = (typeof div[eventName] === \"function\");\n                }\n                support[i + \"Bubbles\"] = isSupported;\n            }\n        }\n\n        fragment.removeChild(div);\n\n        // Null elements to avoid leaks in IE\n        fragment = select = opt = div = input = null;\n\n        // Run tests that need a body at doc ready\n        jQuery(function () {\n            var container, outer, inner, table, td, offsetSupport,\n\t\t\tmarginDiv, conMarginTop, style, html, positionTopLeftWidthHeight,\n\t\t\tpaddingMarginBorderVisibility, paddingMarginBorder,\n\t\t\tbody = document.getElementsByTagName(\"body\")[0];\n\n            if (!body) {\n                // Return for frameset docs that don't have a body\n                return;\n            }\n\n            conMarginTop = 1;\n            paddingMarginBorder = \"padding:0;margin:0;border:\";\n            positionTopLeftWidthHeight = \"position:absolute;top:0;left:0;width:1px;height:1px;\";\n            paddingMarginBorderVisibility = paddingMarginBorder + \"0;visibility:hidden;\";\n            style = \"style='\" + positionTopLeftWidthHeight + paddingMarginBorder + \"5px solid #000;\";\n            html = \"<div \" + style + \"display:block;'><div style='\" + paddingMarginBorder + \"0;display:block;overflow:hidden;'></div></div>\" +\n\t\t\t\"<table \" + style + \"' cellpadding='0' cellspacing='0'>\" +\n\t\t\t\"<tr><td></td></tr></table>\";\n\n            container = document.createElement(\"div\");\n            container.style.cssText = paddingMarginBorderVisibility + \"width:0;height:0;position:static;top:0;margin-top:\" + conMarginTop + \"px\";\n            body.insertBefore(container, body.firstChild);\n\n            // Construct the test element\n            div = document.createElement(\"div\");\n            container.appendChild(div);\n\n            // Check if table cells still have offsetWidth/Height when they are set\n            // to display:none and there are still other visible table cells in a\n            // table row; if so, offsetWidth/Height are not reliable for use when\n            // determining if an element has been hidden directly using\n            // display:none (it is still safe to use offsets if a parent element is\n            // hidden; don safety goggles and see bug #4512 for more information).\n            // (only IE 8 fails this test)\n            div.innerHTML = \"<table><tr><td style='\" + paddingMarginBorder + \"0;display:none'></td><td>t</td></tr></table>\";\n            tds = div.getElementsByTagName(\"td\");\n            isSupported = (tds[0].offsetHeight === 0);\n\n            tds[0].style.display = \"\";\n            tds[1].style.display = \"none\";\n\n            // Check if empty table cells still have offsetWidth/Height\n            // (IE <= 8 fail this test)\n            support.reliableHiddenOffsets = isSupported && (tds[0].offsetHeight === 0);\n\n            // Check if div with explicit width and no margin-right incorrectly\n            // gets computed margin-right based on width of container. For more\n            // info see bug #3333\n            // Fails in WebKit before Feb 2011 nightlies\n            // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n            if (window.getComputedStyle) {\n                div.innerHTML = \"\";\n                marginDiv = document.createElement(\"div\");\n                marginDiv.style.width = \"0\";\n                marginDiv.style.marginRight = \"0\";\n                div.style.width = \"2px\";\n                div.appendChild(marginDiv);\n                support.reliableMarginRight =\n\t\t\t\t(parseInt((window.getComputedStyle(marginDiv, null) || { marginRight: 0 }).marginRight, 10) || 0) === 0;\n            }\n\n            if (typeof div.style.zoom !== \"undefined\") {\n                // Check if natively block-level elements act like inline-block\n                // elements when setting their display to 'inline' and giving\n                // them layout\n                // (IE < 8 does this)\n                div.innerHTML = \"\";\n                div.style.width = div.style.padding = \"1px\";\n                div.style.border = 0;\n                div.style.overflow = \"hidden\";\n                div.style.display = \"inline\";\n                div.style.zoom = 1;\n                support.inlineBlockNeedsLayout = (div.offsetWidth === 3);\n\n                // Check if elements with layout shrink-wrap their children\n                // (IE 6 does this)\n                div.style.display = \"block\";\n                div.style.overflow = \"visible\";\n                div.innerHTML = \"<div style='width:5px;'></div>\";\n                support.shrinkWrapBlocks = (div.offsetWidth !== 3);\n            }\n\n            div.style.cssText = positionTopLeftWidthHeight + paddingMarginBorderVisibility;\n            div.innerHTML = html;\n\n            outer = div.firstChild;\n            inner = outer.firstChild;\n            td = outer.nextSibling.firstChild.firstChild;\n\n            offsetSupport = {\n                doesNotAddBorder: (inner.offsetTop !== 5),\n                doesAddBorderForTableAndCells: (td.offsetTop === 5)\n            };\n\n            inner.style.position = \"fixed\";\n            inner.style.top = \"20px\";\n\n            // safari subtracts parent border width here which is 5px\n            offsetSupport.fixedPosition = (inner.offsetTop === 20 || inner.offsetTop === 15);\n            inner.style.position = inner.style.top = \"\";\n\n            outer.style.overflow = \"hidden\";\n            outer.style.position = \"relative\";\n\n            offsetSupport.subtractsBorderForOverflowNotVisible = (inner.offsetTop === -5);\n            offsetSupport.doesNotIncludeMarginInBodyOffset = (body.offsetTop !== conMarginTop);\n\n            if (window.getComputedStyle) {\n                div.style.marginTop = \"1%\";\n                support.pixelMargin = (window.getComputedStyle(div, null) || { marginTop: 0 }).marginTop !== \"1%\";\n            }\n\n            if (typeof container.style.zoom !== \"undefined\") {\n                container.style.zoom = 1;\n            }\n\n            body.removeChild(container);\n            marginDiv = div = container = null;\n\n            jQuery.extend(support, offsetSupport);\n        });\n\n        return support;\n    })();\n\n\n\n\n    var rbrace = /^(?:\\{.*\\}|\\[.*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\n    jQuery.extend({\n        cache: {},\n\n        // Please use with caution\n        uuid: 0,\n\n        // Unique for each copy of jQuery on the page\n        // Non-digits removed to match rinlinejQuery\n        expando: \"jQuery\" + (jQuery.fn.jquery + Math.random()).replace(/\\D/g, \"\"),\n\n        // The following elements throw uncatchable exceptions if you\n        // attempt to add expando properties to them.\n        noData: {\n            \"embed\": true,\n            // Ban all objects except for Flash (which handle expandos)\n            \"object\": \"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",\n            \"applet\": true\n        },\n\n        hasData: function (elem) {\n            elem = elem.nodeType ? jQuery.cache[elem[jQuery.expando]] : elem[jQuery.expando];\n            return !!elem && !isEmptyDataObject(elem);\n        },\n\n        data: function (elem, name, data, pvt /* Internal Use Only */) {\n            if (!jQuery.acceptData(elem)) {\n                return;\n            }\n\n            var privateCache, thisCache, ret,\n\t\t\tinternalKey = jQuery.expando,\n\t\t\tgetByName = typeof name === \"string\",\n\n            // We have to handle DOM nodes and JS objects differently because IE6-7\n            // can't GC object references properly across the DOM-JS boundary\n\t\t\tisNode = elem.nodeType,\n\n            // Only DOM nodes need the global jQuery cache; JS object data is\n            // attached directly to the object so GC can occur automatically\n\t\t\tcache = isNode ? jQuery.cache : elem,\n\n            // Only defining an ID for JS objects if its cache already exists allows\n            // the code to shortcut on the same path as a DOM node with no cache\n\t\t\tid = isNode ? elem[internalKey] : elem[internalKey] && internalKey,\n\t\t\tisEvents = name === \"events\";\n\n            // Avoid doing any more work than we need to when trying to get data on an\n            // object that has no data at all\n            if ((!id || !cache[id] || (!isEvents && !pvt && !cache[id].data)) && getByName && data === undefined) {\n                return;\n            }\n\n            if (!id) {\n                // Only DOM nodes need a new unique ID for each element since their data\n                // ends up in the global cache\n                if (isNode) {\n                    elem[internalKey] = id = ++jQuery.uuid;\n                } else {\n                    id = internalKey;\n                }\n            }\n\n            if (!cache[id]) {\n                cache[id] = {};\n\n                // Avoids exposing jQuery metadata on plain JS objects when the object\n                // is serialized using JSON.stringify\n                if (!isNode) {\n                    cache[id].toJSON = jQuery.noop;\n                }\n            }\n\n            // An object can be passed to jQuery.data instead of a key/value pair; this gets\n            // shallow copied over onto the existing cache\n            if (typeof name === \"object\" || typeof name === \"function\") {\n                if (pvt) {\n                    cache[id] = jQuery.extend(cache[id], name);\n                } else {\n                    cache[id].data = jQuery.extend(cache[id].data, name);\n                }\n            }\n\n            privateCache = thisCache = cache[id];\n\n            // jQuery data() is stored in a separate object inside the object's internal data\n            // cache in order to avoid key collisions between internal data and user-defined\n            // data.\n            if (!pvt) {\n                if (!thisCache.data) {\n                    thisCache.data = {};\n                }\n\n                thisCache = thisCache.data;\n            }\n\n            if (data !== undefined) {\n                thisCache[jQuery.camelCase(name)] = data;\n            }\n\n            // Users should not attempt to inspect the internal events object using jQuery.data,\n            // it is undocumented and subject to change. But does anyone listen? No.\n            if (isEvents && !thisCache[name]) {\n                return privateCache.events;\n            }\n\n            // Check for both converted-to-camel and non-converted data property names\n            // If a data property was specified\n            if (getByName) {\n\n                // First Try to find as-is property data\n                ret = thisCache[name];\n\n                // Test for null|undefined property data\n                if (ret == null) {\n\n                    // Try to find the camelCased property\n                    ret = thisCache[jQuery.camelCase(name)];\n                }\n            } else {\n                ret = thisCache;\n            }\n\n            return ret;\n        },\n\n        removeData: function (elem, name, pvt /* Internal Use Only */) {\n            if (!jQuery.acceptData(elem)) {\n                return;\n            }\n\n            var thisCache, i, l,\n\n            // Reference to internal data cache key\n\t\t\tinternalKey = jQuery.expando,\n\n\t\t\tisNode = elem.nodeType,\n\n            // See jQuery.data for more information\n\t\t\tcache = isNode ? jQuery.cache : elem,\n\n            // See jQuery.data for more information\n\t\t\tid = isNode ? elem[internalKey] : internalKey;\n\n            // If there is already no cache entry for this object, there is no\n            // purpose in continuing\n            if (!cache[id]) {\n                return;\n            }\n\n            if (name) {\n\n                thisCache = pvt ? cache[id] : cache[id].data;\n\n                if (thisCache) {\n\n                    // Support array or space separated string names for data keys\n                    if (!jQuery.isArray(name)) {\n\n                        // try the string as a key before any manipulation\n                        if (name in thisCache) {\n                            name = [name];\n                        } else {\n\n                            // split the camel cased version by spaces unless a key with the spaces exists\n                            name = jQuery.camelCase(name);\n                            if (name in thisCache) {\n                                name = [name];\n                            } else {\n                                name = name.split(\" \");\n                            }\n                        }\n                    }\n\n                    for (i = 0, l = name.length; i < l; i++) {\n                        delete thisCache[name[i]];\n                    }\n\n                    // If there is no data left in the cache, we want to continue\n                    // and let the cache object itself get destroyed\n                    if (!(pvt ? isEmptyDataObject : jQuery.isEmptyObject)(thisCache)) {\n                        return;\n                    }\n                }\n            }\n\n            // See jQuery.data for more information\n            if (!pvt) {\n                delete cache[id].data;\n\n                // Don't destroy the parent cache unless the internal data object\n                // had been the only thing left in it\n                if (!isEmptyDataObject(cache[id])) {\n                    return;\n                }\n            }\n\n            // Browsers that fail expando deletion also refuse to delete expandos on\n            // the window, but it will allow it on all other JS objects; other browsers\n            // don't care\n            // Ensure that `cache` is not a window object #10080\n            if (jQuery.support.deleteExpando || !cache.setInterval) {\n                delete cache[id];\n            } else {\n                cache[id] = null;\n            }\n\n            // We destroyed the cache and need to eliminate the expando on the node to avoid\n            // false lookups in the cache for entries that no longer exist\n            if (isNode) {\n                // IE does not allow us to delete expando properties from nodes,\n                // nor does it have a removeAttribute function on Document nodes;\n                // we must handle all of these cases\n                if (jQuery.support.deleteExpando) {\n                    delete elem[internalKey];\n                } else if (elem.removeAttribute) {\n                    elem.removeAttribute(internalKey);\n                } else {\n                    elem[internalKey] = null;\n                }\n            }\n        },\n\n        // For internal use only.\n        _data: function (elem, name, data) {\n            return jQuery.data(elem, name, data, true);\n        },\n\n        // A method for determining if a DOM node can handle the data expando\n        acceptData: function (elem) {\n            if (elem.nodeName) {\n                var match = jQuery.noData[elem.nodeName.toLowerCase()];\n\n                if (match) {\n                    return !(match === true || elem.getAttribute(\"classid\") !== match);\n                }\n            }\n\n            return true;\n        }\n    });\n\n    jQuery.fn.extend({\n        data: function (key, value) {\n            var parts, part, attr, name, l,\n\t\t\telem = this[0],\n\t\t\ti = 0,\n\t\t\tdata = null;\n\n            // Gets all values\n            if (key === undefined) {\n                if (this.length) {\n                    data = jQuery.data(elem);\n\n                    if (elem.nodeType === 1 && !jQuery._data(elem, \"parsedAttrs\")) {\n                        attr = elem.attributes;\n                        for (l = attr.length; i < l; i++) {\n                            name = attr[i].name;\n\n                            if (name.indexOf(\"data-\") === 0) {\n                                name = jQuery.camelCase(name.substring(5));\n\n                                dataAttr(elem, name, data[name]);\n                            }\n                        }\n                        jQuery._data(elem, \"parsedAttrs\", true);\n                    }\n                }\n\n                return data;\n            }\n\n            // Sets multiple values\n            if (typeof key === \"object\") {\n                return this.each(function () {\n                    jQuery.data(this, key);\n                });\n            }\n\n            parts = key.split(\".\", 2);\n            parts[1] = parts[1] ? \".\" + parts[1] : \"\";\n            part = parts[1] + \"!\";\n\n            return jQuery.access(this, function (value) {\n\n                if (value === undefined) {\n                    data = this.triggerHandler(\"getData\" + part, [parts[0]]);\n\n                    // Try to fetch any internally stored data first\n                    if (data === undefined && elem) {\n                        data = jQuery.data(elem, key);\n                        data = dataAttr(elem, key, data);\n                    }\n\n                    return data === undefined && parts[1] ?\n\t\t\t\t\tthis.data(parts[0]) :\n\t\t\t\t\tdata;\n                }\n\n                parts[1] = value;\n                this.each(function () {\n                    var self = jQuery(this);\n\n                    self.triggerHandler(\"setData\" + part, parts);\n                    jQuery.data(this, key, value);\n                    self.triggerHandler(\"changeData\" + part, parts);\n                });\n            }, null, value, arguments.length > 1, null, false);\n        },\n\n        removeData: function (key) {\n            return this.each(function () {\n                jQuery.removeData(this, key);\n            });\n        }\n    });\n\n    function dataAttr(elem, key, data) {\n        // If nothing was found internally, try to fetch any\n        // data from the HTML5 data-* attribute\n        if (data === undefined && elem.nodeType === 1) {\n\n            var name = \"data-\" + key.replace(rmultiDash, \"-$1\").toLowerCase();\n\n            data = elem.getAttribute(name);\n\n            if (typeof data === \"string\") {\n                try {\n                    data = data === \"true\" ? true :\n\t\t\t\tdata === \"false\" ? false :\n\t\t\t\tdata === \"null\" ? null :\n\t\t\t\tjQuery.isNumeric(data) ? +data :\n\t\t\t\t\trbrace.test(data) ? jQuery.parseJSON(data) :\n\t\t\t\t\tdata;\n                } catch (e) { }\n\n                // Make sure we set the data so it isn't changed later\n                jQuery.data(elem, key, data);\n\n            } else {\n                data = undefined;\n            }\n        }\n\n        return data;\n    }\n\n    // checks a cache object for emptiness\n    function isEmptyDataObject(obj) {\n        for (var name in obj) {\n\n            // if the public data object is empty, the private is still empty\n            if (name === \"data\" && jQuery.isEmptyObject(obj[name])) {\n                continue;\n            }\n            if (name !== \"toJSON\") {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n\n\n\n    function handleQueueMarkDefer(elem, type, src) {\n        var deferDataKey = type + \"defer\",\n\t\tqueueDataKey = type + \"queue\",\n\t\tmarkDataKey = type + \"mark\",\n\t\tdefer = jQuery._data(elem, deferDataKey);\n        if (defer &&\n\t\t(src === \"queue\" || !jQuery._data(elem, queueDataKey)) &&\n\t\t(src === \"mark\" || !jQuery._data(elem, markDataKey))) {\n            // Give room for hard-coded callbacks to fire first\n            // and eventually mark/queue something else on the element\n            setTimeout(function () {\n                if (!jQuery._data(elem, queueDataKey) &&\n\t\t\t\t!jQuery._data(elem, markDataKey)) {\n                    jQuery.removeData(elem, deferDataKey, true);\n                    defer.fire();\n                }\n            }, 0);\n        }\n    }\n\n    jQuery.extend({\n\n        _mark: function (elem, type) {\n            if (elem) {\n                type = (type || \"fx\") + \"mark\";\n                jQuery._data(elem, type, (jQuery._data(elem, type) || 0) + 1);\n            }\n        },\n\n        _unmark: function (force, elem, type) {\n            if (force !== true) {\n                type = elem;\n                elem = force;\n                force = false;\n            }\n            if (elem) {\n                type = type || \"fx\";\n                var key = type + \"mark\",\n\t\t\t\tcount = force ? 0 : ((jQuery._data(elem, key) || 1) - 1);\n                if (count) {\n                    jQuery._data(elem, key, count);\n                } else {\n                    jQuery.removeData(elem, key, true);\n                    handleQueueMarkDefer(elem, type, \"mark\");\n                }\n            }\n        },\n\n        queue: function (elem, type, data) {\n            var q;\n            if (elem) {\n                type = (type || \"fx\") + \"queue\";\n                q = jQuery._data(elem, type);\n\n                // Speed up dequeue by getting out quickly if this is just a lookup\n                if (data) {\n                    if (!q || jQuery.isArray(data)) {\n                        q = jQuery._data(elem, type, jQuery.makeArray(data));\n                    } else {\n                        q.push(data);\n                    }\n                }\n                return q || [];\n            }\n        },\n\n        dequeue: function (elem, type) {\n            type = type || \"fx\";\n\n            var queue = jQuery.queue(elem, type),\n\t\t\tfn = queue.shift(),\n\t\t\thooks = {};\n\n            // If the fx queue is dequeued, always remove the progress sentinel\n            if (fn === \"inprogress\") {\n                fn = queue.shift();\n            }\n\n            if (fn) {\n                // Add a progress sentinel to prevent the fx queue from being\n                // automatically dequeued\n                if (type === \"fx\") {\n                    queue.unshift(\"inprogress\");\n                }\n\n                jQuery._data(elem, type + \".run\", hooks);\n                fn.call(elem, function () {\n                    jQuery.dequeue(elem, type);\n                }, hooks);\n            }\n\n            if (!queue.length) {\n                jQuery.removeData(elem, type + \"queue \" + type + \".run\", true);\n                handleQueueMarkDefer(elem, type, \"queue\");\n            }\n        }\n    });\n\n    jQuery.fn.extend({\n        queue: function (type, data) {\n            var setter = 2;\n\n            if (typeof type !== \"string\") {\n                data = type;\n                type = \"fx\";\n                setter--;\n            }\n\n            if (arguments.length < setter) {\n                return jQuery.queue(this[0], type);\n            }\n\n            return data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function () {\n\t\t\t    var queue = jQuery.queue(this, type, data);\n\n\t\t\t    if (type === \"fx\" && queue[0] !== \"inprogress\") {\n\t\t\t        jQuery.dequeue(this, type);\n\t\t\t    }\n\t\t\t});\n        },\n        dequeue: function (type) {\n            return this.each(function () {\n                jQuery.dequeue(this, type);\n            });\n        },\n        // Based off of the plugin by Clint Helfers, with permission.\n        // http://blindsignals.com/index.php/2009/07/jquery-delay/\n        delay: function (time, type) {\n            time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n            type = type || \"fx\";\n\n            return this.queue(type, function (next, hooks) {\n                var timeout = setTimeout(next, time);\n                hooks.stop = function () {\n                    clearTimeout(timeout);\n                };\n            });\n        },\n        clearQueue: function (type) {\n            return this.queue(type || \"fx\", []);\n        },\n        // Get a promise resolved when queues of a certain type\n        // are emptied (fx is the type by default)\n        promise: function (type, object) {\n            if (typeof type !== \"string\") {\n                object = type;\n                type = undefined;\n            }\n            type = type || \"fx\";\n            var defer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = elements.length,\n\t\t\tcount = 1,\n\t\t\tdeferDataKey = type + \"defer\",\n\t\t\tqueueDataKey = type + \"queue\",\n\t\t\tmarkDataKey = type + \"mark\",\n\t\t\ttmp;\n            function resolve() {\n                if (!(--count)) {\n                    defer.resolveWith(elements, [elements]);\n                }\n            }\n            while (i--) {\n                if ((tmp = jQuery.data(elements[i], deferDataKey, undefined, true) ||\n\t\t\t\t\t(jQuery.data(elements[i], queueDataKey, undefined, true) ||\n\t\t\t\t\t\tjQuery.data(elements[i], markDataKey, undefined, true)) &&\n\t\t\t\t\tjQuery.data(elements[i], deferDataKey, jQuery.Callbacks(\"once memory\"), true))) {\n                    count++;\n                    tmp.add(resolve);\n                }\n            }\n            resolve();\n            return defer.promise(object);\n        }\n    });\n\n\n\n\n    var rclass = /[\\n\\t\\r]/g,\n\trspace = /\\s+/,\n\trreturn = /\\r/g,\n\trtype = /^(?:button|input)$/i,\n\trfocusable = /^(?:button|input|object|select|textarea)$/i,\n\trclickable = /^a(?:rea)?$/i,\n\trboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,\n\tgetSetAttribute = jQuery.support.getSetAttribute,\n\tnodeHook, boolHook, fixSpecified;\n\n    jQuery.fn.extend({\n        attr: function (name, value) {\n            return jQuery.access(this, jQuery.attr, name, value, arguments.length > 1);\n        },\n\n        removeAttr: function (name) {\n            return this.each(function () {\n                jQuery.removeAttr(this, name);\n            });\n        },\n\n        prop: function (name, value) {\n            return jQuery.access(this, jQuery.prop, name, value, arguments.length > 1);\n        },\n\n        removeProp: function (name) {\n            name = jQuery.propFix[name] || name;\n            return this.each(function () {\n                // try/catch handles cases where IE balks (such as removing a property on window)\n                try {\n                    this[name] = undefined;\n                    delete this[name];\n                } catch (e) { }\n            });\n        },\n\n        addClass: function (value) {\n            var classNames, i, l, elem,\n\t\t\tsetClass, c, cl;\n\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).addClass(value.call(this, j, this.className));\n                });\n            }\n\n            if (value && typeof value === \"string\") {\n                classNames = value.split(rspace);\n\n                for (i = 0, l = this.length; i < l; i++) {\n                    elem = this[i];\n\n                    if (elem.nodeType === 1) {\n                        if (!elem.className && classNames.length === 1) {\n                            elem.className = value;\n\n                        } else {\n                            setClass = \" \" + elem.className + \" \";\n\n                            for (c = 0, cl = classNames.length; c < cl; c++) {\n                                if (! ~setClass.indexOf(\" \" + classNames[c] + \" \")) {\n                                    setClass += classNames[c] + \" \";\n                                }\n                            }\n                            elem.className = jQuery.trim(setClass);\n                        }\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        removeClass: function (value) {\n            var classNames, i, l, elem, className, c, cl;\n\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).removeClass(value.call(this, j, this.className));\n                });\n            }\n\n            if ((value && typeof value === \"string\") || value === undefined) {\n                classNames = (value || \"\").split(rspace);\n\n                for (i = 0, l = this.length; i < l; i++) {\n                    elem = this[i];\n\n                    if (elem.nodeType === 1 && elem.className) {\n                        if (value) {\n                            className = (\" \" + elem.className + \" \").replace(rclass, \" \");\n                            for (c = 0, cl = classNames.length; c < cl; c++) {\n                                className = className.replace(\" \" + classNames[c] + \" \", \" \");\n                            }\n                            elem.className = jQuery.trim(className);\n\n                        } else {\n                            elem.className = \"\";\n                        }\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        toggleClass: function (value, stateVal) {\n            var type = typeof value,\n\t\t\tisBool = typeof stateVal === \"boolean\";\n\n            if (jQuery.isFunction(value)) {\n                return this.each(function (i) {\n                    jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);\n                });\n            }\n\n            return this.each(function () {\n                if (type === \"string\") {\n                    // toggle individual class names\n                    var className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery(this),\n\t\t\t\t\tstate = stateVal,\n\t\t\t\t\tclassNames = value.split(rspace);\n\n                    while ((className = classNames[i++])) {\n                        // check each className given, space seperated list\n                        state = isBool ? state : !self.hasClass(className);\n                        self[state ? \"addClass\" : \"removeClass\"](className);\n                    }\n\n                } else if (type === \"undefined\" || type === \"boolean\") {\n                    if (this.className) {\n                        // store className if set\n                        jQuery._data(this, \"__className__\", this.className);\n                    }\n\n                    // toggle whole className\n                    this.className = this.className || value === false ? \"\" : jQuery._data(this, \"__className__\") || \"\";\n                }\n            });\n        },\n\n        hasClass: function (selector) {\n            var className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n            for (; i < l; i++) {\n                if (this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf(className) > -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        val: function (value) {\n            var hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n            if (!arguments.length) {\n                if (elem) {\n                    hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n                    if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n                        return ret;\n                    }\n\n                    ret = elem.value;\n\n                    return typeof ret === \"string\" ?\n                    // handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n                    // handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n                }\n\n                return;\n            }\n\n            isFunction = jQuery.isFunction(value);\n\n            return this.each(function (i) {\n                var self = jQuery(this), val;\n\n                if (this.nodeType !== 1) {\n                    return;\n                }\n\n                if (isFunction) {\n                    val = value.call(this, i, self.val());\n                } else {\n                    val = value;\n                }\n\n                // Treat null/undefined as \"\"; convert numbers to string\n                if (val == null) {\n                    val = \"\";\n                } else if (typeof val === \"number\") {\n                    val += \"\";\n                } else if (jQuery.isArray(val)) {\n                    val = jQuery.map(val, function (value) {\n                        return value == null ? \"\" : value + \"\";\n                    });\n                }\n\n                hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n\n                // If set returns undefined, fall back to normal setting\n                if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n                    this.value = val;\n                }\n            });\n        }\n    });\n\n    jQuery.extend({\n        valHooks: {\n            option: {\n                get: function (elem) {\n                    // attributes.value is undefined in Blackberry 4.7 but\n                    // uses .value. See #6932\n                    var val = elem.attributes.value;\n                    return !val || val.specified ? elem.value : elem.text;\n                }\n            },\n            select: {\n                get: function (elem) {\n                    var value, i, max, option,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tvalues = [],\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tone = elem.type === \"select-one\";\n\n                    // Nothing was selected\n                    if (index < 0) {\n                        return null;\n                    }\n\n                    // Loop through all the selected options\n                    i = one ? index : 0;\n                    max = one ? index + 1 : options.length;\n                    for (; i < max; i++) {\n                        option = options[i];\n\n                        // Don't return options that are disabled or in a disabled optgroup\n                        if (option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null) &&\n\t\t\t\t\t\t\t(!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, \"optgroup\"))) {\n\n                            // Get the specific value for the option\n                            value = jQuery(option).val();\n\n                            // We don't need an array for one selects\n                            if (one) {\n                                return value;\n                            }\n\n                            // Multi-Selects return an array\n                            values.push(value);\n                        }\n                    }\n\n                    // Fixes Bug #2551 -- select.val() broken in IE after form.reset()\n                    if (one && !values.length && options.length) {\n                        return jQuery(options[index]).val();\n                    }\n\n                    return values;\n                },\n\n                set: function (elem, value) {\n                    var values = jQuery.makeArray(value);\n\n                    jQuery(elem).find(\"option\").each(function () {\n                        this.selected = jQuery.inArray(jQuery(this).val(), values) >= 0;\n                    });\n\n                    if (!values.length) {\n                        elem.selectedIndex = -1;\n                    }\n                    return values;\n                }\n            }\n        },\n\n        attrFn: {\n            val: true,\n            css: true,\n            html: true,\n            text: true,\n            data: true,\n            width: true,\n            height: true,\n            offset: true\n        },\n\n        attr: function (elem, name, value, pass) {\n            var ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n            // don't get/set attributes on text, comment and attribute nodes\n            if (!elem || nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n\n            if (pass && name in jQuery.attrFn) {\n                return jQuery(elem)[name](value);\n            }\n\n            // Fallback to prop when attributes are not supported\n            if (typeof elem.getAttribute === \"undefined\") {\n                return jQuery.prop(elem, name, value);\n            }\n\n            notxml = nType !== 1 || !jQuery.isXMLDoc(elem);\n\n            // All attributes are lowercase\n            // Grab necessary hook if one is defined\n            if (notxml) {\n                name = name.toLowerCase();\n                hooks = jQuery.attrHooks[name] || (rboolean.test(name) ? boolHook : nodeHook);\n            }\n\n            if (value !== undefined) {\n\n                if (value === null) {\n                    jQuery.removeAttr(elem, name);\n                    return;\n\n                } else if (hooks && \"set\" in hooks && notxml && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n\n                } else {\n                    elem.setAttribute(name, \"\" + value);\n                    return value;\n                }\n\n            } else if (hooks && \"get\" in hooks && notxml && (ret = hooks.get(elem, name)) !== null) {\n                return ret;\n\n            } else {\n\n                ret = elem.getAttribute(name);\n\n                // Non-existent attributes return null, we normalize to undefined\n                return ret === null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n            }\n        },\n\n        removeAttr: function (elem, value) {\n            var propName, attrNames, name, l, isBool,\n\t\t\ti = 0;\n\n            if (value && elem.nodeType === 1) {\n                attrNames = value.toLowerCase().split(rspace);\n                l = attrNames.length;\n\n                for (; i < l; i++) {\n                    name = attrNames[i];\n\n                    if (name) {\n                        propName = jQuery.propFix[name] || name;\n                        isBool = rboolean.test(name);\n\n                        // See #9699 for explanation of this approach (setting first, then removal)\n                        // Do not do this for boolean attributes (see #10870)\n                        if (!isBool) {\n                            jQuery.attr(elem, name, \"\");\n                        }\n                        elem.removeAttribute(getSetAttribute ? name : propName);\n\n                        // Set corresponding property to false for boolean attributes\n                        if (isBool && propName in elem) {\n                            elem[propName] = false;\n                        }\n                    }\n                }\n            }\n        },\n\n        attrHooks: {\n            type: {\n                set: function (elem, value) {\n                    // We can't allow the type property to be changed (since it causes problems in IE)\n                    if (rtype.test(elem.nodeName) && elem.parentNode) {\n                        jQuery.error(\"type property can't be changed\");\n                    } else if (!jQuery.support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\")) {\n                        // Setting the type on a radio button after the value resets the value in IE6-9\n                        // Reset value to it's default in case type is set after value\n                        // This is for element creation\n                        var val = elem.value;\n                        elem.setAttribute(\"type\", value);\n                        if (val) {\n                            elem.value = val;\n                        }\n                        return value;\n                    }\n                }\n            },\n            // Use the value property for back compat\n            // Use the nodeHook for button elements in IE6/7 (#1954)\n            value: {\n                get: function (elem, name) {\n                    if (nodeHook && jQuery.nodeName(elem, \"button\")) {\n                        return nodeHook.get(elem, name);\n                    }\n                    return name in elem ?\n\t\t\t\t\telem.value :\n\t\t\t\t\tnull;\n                },\n                set: function (elem, value, name) {\n                    if (nodeHook && jQuery.nodeName(elem, \"button\")) {\n                        return nodeHook.set(elem, value, name);\n                    }\n                    // Does not return so that setAttribute is also used\n                    elem.value = value;\n                }\n            }\n        },\n\n        propFix: {\n            tabindex: \"tabIndex\",\n            readonly: \"readOnly\",\n            \"for\": \"htmlFor\",\n            \"class\": \"className\",\n            maxlength: \"maxLength\",\n            cellspacing: \"cellSpacing\",\n            cellpadding: \"cellPadding\",\n            rowspan: \"rowSpan\",\n            colspan: \"colSpan\",\n            usemap: \"useMap\",\n            frameborder: \"frameBorder\",\n            contenteditable: \"contentEditable\"\n        },\n\n        prop: function (elem, name, value) {\n            var ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n            // don't get/set properties on text, comment and attribute nodes\n            if (!elem || nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n\n            notxml = nType !== 1 || !jQuery.isXMLDoc(elem);\n\n            if (notxml) {\n                // Fix name and attach hooks\n                name = jQuery.propFix[name] || name;\n                hooks = jQuery.propHooks[name];\n            }\n\n            if (value !== undefined) {\n                if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n\n                } else {\n                    return (elem[name] = value);\n                }\n\n            } else {\n                if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n                    return ret;\n\n                } else {\n                    return elem[name];\n                }\n            }\n        },\n\n        propHooks: {\n            tabIndex: {\n                get: function (elem) {\n                    // elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n                    // http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n                    var attributeNode = elem.getAttributeNode(\"tabindex\");\n\n                    return attributeNode && attributeNode.specified ?\n\t\t\t\t\tparseInt(attributeNode.value, 10) :\n\t\t\t\t\trfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ?\n\t\t\t\t\t\t0 :\n\t\t\t\t\t\tundefined;\n                }\n            }\n        }\n    });\n\n    // Add the tabIndex propHook to attrHooks for back-compat (different case is intentional)\n    jQuery.attrHooks.tabindex = jQuery.propHooks.tabIndex;\n\n    // Hook for boolean attributes\n    boolHook = {\n        get: function (elem, name) {\n            // Align boolean attributes with corresponding properties\n            // Fall back to attribute presence where some booleans are not supported\n            var attrNode,\n\t\t\tproperty = jQuery.prop(elem, name);\n            return property === true || typeof property !== \"boolean\" && (attrNode = elem.getAttributeNode(name)) && attrNode.nodeValue !== false ?\n\t\t\tname.toLowerCase() :\n\t\t\tundefined;\n        },\n        set: function (elem, value, name) {\n            var propName;\n            if (value === false) {\n                // Remove boolean attributes when set to false\n                jQuery.removeAttr(elem, name);\n            } else {\n                // value is true since we know at this point it's type boolean and not false\n                // Set boolean attributes to the same name and set the DOM property\n                propName = jQuery.propFix[name] || name;\n                if (propName in elem) {\n                    // Only set the IDL specifically if it already exists on the element\n                    elem[propName] = true;\n                }\n\n                elem.setAttribute(name, name.toLowerCase());\n            }\n            return name;\n        }\n    };\n\n    // IE6/7 do not support getting/setting some attributes with get/setAttribute\n    if (!getSetAttribute) {\n\n        fixSpecified = {\n            name: true,\n            id: true,\n            coords: true\n        };\n\n        // Use this for any attribute in IE6/7\n        // This fixes almost every IE6/7 issue\n        nodeHook = jQuery.valHooks.button = {\n            get: function (elem, name) {\n                var ret;\n                ret = elem.getAttributeNode(name);\n                return ret && (fixSpecified[name] ? ret.nodeValue !== \"\" : ret.specified) ?\n\t\t\t\tret.nodeValue :\n\t\t\t\tundefined;\n            },\n            set: function (elem, value, name) {\n                // Set the existing or create a new attribute node\n                var ret = elem.getAttributeNode(name);\n                if (!ret) {\n                    ret = document.createAttribute(name);\n                    elem.setAttributeNode(ret);\n                }\n                return (ret.nodeValue = value + \"\");\n            }\n        };\n\n        // Apply the nodeHook to tabindex\n        jQuery.attrHooks.tabindex.set = nodeHook.set;\n\n        // Set width and height to auto instead of 0 on empty string( Bug #8150 )\n        // This is for removals\n        jQuery.each([\"width\", \"height\"], function (i, name) {\n            jQuery.attrHooks[name] = jQuery.extend(jQuery.attrHooks[name], {\n                set: function (elem, value) {\n                    if (value === \"\") {\n                        elem.setAttribute(name, \"auto\");\n                        return value;\n                    }\n                }\n            });\n        });\n\n        // Set contenteditable to false on removals(#10429)\n        // Setting to empty string throws an error as an invalid value\n        jQuery.attrHooks.contenteditable = {\n            get: nodeHook.get,\n            set: function (elem, value, name) {\n                if (value === \"\") {\n                    value = \"false\";\n                }\n                nodeHook.set(elem, value, name);\n            }\n        };\n    }\n\n\n    // Some attributes require a special call on IE\n    if (!jQuery.support.hrefNormalized) {\n        jQuery.each([\"href\", \"src\", \"width\", \"height\"], function (i, name) {\n            jQuery.attrHooks[name] = jQuery.extend(jQuery.attrHooks[name], {\n                get: function (elem) {\n                    var ret = elem.getAttribute(name, 2);\n                    return ret === null ? undefined : ret;\n                }\n            });\n        });\n    }\n\n    if (!jQuery.support.style) {\n        jQuery.attrHooks.style = {\n            get: function (elem) {\n                // Return undefined in the case of empty string\n                // Normalize to lowercase since IE uppercases css property names\n                return elem.style.cssText.toLowerCase() || undefined;\n            },\n            set: function (elem, value) {\n                return (elem.style.cssText = \"\" + value);\n            }\n        };\n    }\n\n    // Safari mis-reports the default selected property of an option\n    // Accessing the parent's selectedIndex property fixes it\n    if (!jQuery.support.optSelected) {\n        jQuery.propHooks.selected = jQuery.extend(jQuery.propHooks.selected, {\n            get: function (elem) {\n                var parent = elem.parentNode;\n\n                if (parent) {\n                    parent.selectedIndex;\n\n                    // Make sure that it also works with optgroups, see #5701\n                    if (parent.parentNode) {\n                        parent.parentNode.selectedIndex;\n                    }\n                }\n                return null;\n            }\n        });\n    }\n\n    // IE6/7 call enctype encoding\n    if (!jQuery.support.enctype) {\n        jQuery.propFix.enctype = \"encoding\";\n    }\n\n    // Radios and checkboxes getter/setter\n    if (!jQuery.support.checkOn) {\n        jQuery.each([\"radio\", \"checkbox\"], function () {\n            jQuery.valHooks[this] = {\n                get: function (elem) {\n                    // Handle the case where in Webkit \"\" is returned instead of \"on\" if a value isn't specified\n                    return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n                }\n            };\n        });\n    }\n    jQuery.each([\"radio\", \"checkbox\"], function () {\n        jQuery.valHooks[this] = jQuery.extend(jQuery.valHooks[this], {\n            set: function (elem, value) {\n                if (jQuery.isArray(value)) {\n                    return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0);\n                }\n            }\n        });\n    });\n\n\n\n\n    var rformElems = /^(?:textarea|input|select)$/i,\n\trtypenamespace = /^([^\\.]*)?(?:\\.(.+))?$/,\n\trhoverHack = /(?:^|\\s)hover(\\.\\S+)?\\b/,\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trquickIs = /^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$/,\n\tquickParse = function (selector) {\n\t    var quick = rquickIs.exec(selector);\n\t    if (quick) {\n\t        //   0  1    2   3\n\t        // [ _, tag, id, class ]\n\t        quick[1] = (quick[1] || \"\").toLowerCase();\n\t        quick[3] = quick[3] && new RegExp(\"(?:^|\\\\s)\" + quick[3] + \"(?:\\\\s|$)\");\n\t    }\n\t    return quick;\n\t},\n\tquickIs = function (elem, m) {\n\t    var attrs = elem.attributes || {};\n\t    return (\n\t\t\t(!m[1] || elem.nodeName.toLowerCase() === m[1]) &&\n\t\t\t(!m[2] || (attrs.id || {}).value === m[2]) &&\n\t\t\t(!m[3] || m[3].test((attrs[\"class\"] || {}).value))\n\t\t);\n\t},\n\thoverHack = function (events) {\n\t    return jQuery.event.special.hover ? events : events.replace(rhoverHack, \"mouseenter$1 mouseleave$1\");\n\t};\n\n    /*\n    * Helper functions for managing events -- not part of the public interface.\n    * Props to Dean Edwards' addEvent library for many of the ideas.\n    */\n    jQuery.event = {\n\n        add: function (elem, types, handler, data, selector) {\n\n            var elemData, eventHandle, events,\n\t\t\tt, tns, type, namespaces, handleObj,\n\t\t\thandleObjIn, quick, handlers, special;\n\n            // Don't attach events to noData or text/comment nodes (allow plain objects tho)\n            if (elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data(elem))) {\n                return;\n            }\n\n            // Caller can pass in an object of custom data in lieu of the handler\n            if (handler.handler) {\n                handleObjIn = handler;\n                handler = handleObjIn.handler;\n                selector = handleObjIn.selector;\n            }\n\n            // Make sure that the handler has a unique ID, used to find/remove it later\n            if (!handler.guid) {\n                handler.guid = jQuery.guid++;\n            }\n\n            // Init the element's event structure and main handler, if this is the first\n            events = elemData.events;\n            if (!events) {\n                elemData.events = events = {};\n            }\n            eventHandle = elemData.handle;\n            if (!eventHandle) {\n                elemData.handle = eventHandle = function (e) {\n                    // Discard the second event of a jQuery.event.trigger() and\n                    // when an event is called after a page has unloaded\n                    return typeof jQuery !== \"undefined\" && (!e || jQuery.event.triggered !== e.type) ?\n\t\t\t\t\tjQuery.event.dispatch.apply(eventHandle.elem, arguments) :\n\t\t\t\t\tundefined;\n                };\n                // Add elem as a property of the handle fn to prevent a memory leak with IE non-native events\n                eventHandle.elem = elem;\n            }\n\n            // Handle multiple events separated by a space\n            // jQuery(...).bind(\"mouseover mouseout\", fn);\n            types = jQuery.trim(hoverHack(types)).split(\" \");\n            for (t = 0; t < types.length; t++) {\n\n                tns = rtypenamespace.exec(types[t]) || [];\n                type = tns[1];\n                namespaces = (tns[2] || \"\").split(\".\").sort();\n\n                // If event changes its type, use the special event handlers for the changed type\n                special = jQuery.event.special[type] || {};\n\n                // If selector defined, determine special event api type, otherwise given type\n                type = (selector ? special.delegateType : special.bindType) || type;\n\n                // Update special based on newly reset type\n                special = jQuery.event.special[type] || {};\n\n                // handleObj is passed to all event handlers\n                handleObj = jQuery.extend({\n                    type: type,\n                    origType: tns[1],\n                    data: data,\n                    handler: handler,\n                    guid: handler.guid,\n                    selector: selector,\n                    quick: selector && quickParse(selector),\n                    namespace: namespaces.join(\".\")\n                }, handleObjIn);\n\n                // Init the event handler queue if we're the first\n                handlers = events[type];\n                if (!handlers) {\n                    handlers = events[type] = [];\n                    handlers.delegateCount = 0;\n\n                    // Only use addEventListener/attachEvent if the special events handler returns false\n                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n                        // Bind the global event handler to the element\n                        if (elem.addEventListener) {\n                            elem.addEventListener(type, eventHandle, false);\n\n                        } else if (elem.attachEvent) {\n                            elem.attachEvent(\"on\" + type, eventHandle);\n                        }\n                    }\n                }\n\n                if (special.add) {\n                    special.add.call(elem, handleObj);\n\n                    if (!handleObj.handler.guid) {\n                        handleObj.handler.guid = handler.guid;\n                    }\n                }\n\n                // Add to the element's handler list, delegates in front\n                if (selector) {\n                    handlers.splice(handlers.delegateCount++, 0, handleObj);\n                } else {\n                    handlers.push(handleObj);\n                }\n\n                // Keep track of which events have ever been used, for event optimization\n                jQuery.event.global[type] = true;\n            }\n\n            // Nullify elem to prevent memory leaks in IE\n            elem = null;\n        },\n\n        global: {},\n\n        // Detach an event or set of events from an element\n        remove: function (elem, types, handler, selector, mappedTypes) {\n\n            var elemData = jQuery.hasData(elem) && jQuery._data(elem),\n\t\t\tt, tns, type, origType, namespaces, origCount,\n\t\t\tj, events, special, handle, eventType, handleObj;\n\n            if (!elemData || !(events = elemData.events)) {\n                return;\n            }\n\n            // Once for each type.namespace in types; type may be omitted\n            types = jQuery.trim(hoverHack(types || \"\")).split(\" \");\n            for (t = 0; t < types.length; t++) {\n                tns = rtypenamespace.exec(types[t]) || [];\n                type = origType = tns[1];\n                namespaces = tns[2];\n\n                // Unbind all events (on this namespace, if provided) for the element\n                if (!type) {\n                    for (type in events) {\n                        jQuery.event.remove(elem, type + types[t], handler, selector, true);\n                    }\n                    continue;\n                }\n\n                special = jQuery.event.special[type] || {};\n                type = (selector ? special.delegateType : special.bindType) || type;\n                eventType = events[type] || [];\n                origCount = eventType.length;\n                namespaces = namespaces ? new RegExp(\"(^|\\\\.)\" + namespaces.split(\".\").sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\") : null;\n\n                // Remove matching events\n                for (j = 0; j < eventType.length; j++) {\n                    handleObj = eventType[j];\n\n                    if ((mappedTypes || origType === handleObj.origType) &&\n\t\t\t\t\t (!handler || handler.guid === handleObj.guid) &&\n\t\t\t\t\t (!namespaces || namespaces.test(handleObj.namespace)) &&\n\t\t\t\t\t (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n                        eventType.splice(j--, 1);\n\n                        if (handleObj.selector) {\n                            eventType.delegateCount--;\n                        }\n                        if (special.remove) {\n                            special.remove.call(elem, handleObj);\n                        }\n                    }\n                }\n\n                // Remove generic event handler if we removed something and no more handlers exist\n                // (avoids potential for endless recursion during removal of special event handlers)\n                if (eventType.length === 0 && origCount !== eventType.length) {\n                    if (!special.teardown || special.teardown.call(elem, namespaces) === false) {\n                        jQuery.removeEvent(elem, type, elemData.handle);\n                    }\n\n                    delete events[type];\n                }\n            }\n\n            // Remove the expando if it's no longer used\n            if (jQuery.isEmptyObject(events)) {\n                handle = elemData.handle;\n                if (handle) {\n                    handle.elem = null;\n                }\n\n                // removeData also checks for emptiness and clears the expando if empty\n                // so use it instead of delete\n                jQuery.removeData(elem, [\"events\", \"handle\"], true);\n            }\n        },\n\n        // Events that are safe to short-circuit if no handlers are attached.\n        // Native DOM events should not be added, they may have inline handlers.\n        customEvent: {\n            \"getData\": true,\n            \"setData\": true,\n            \"changeData\": true\n        },\n\n        trigger: function (event, data, elem, onlyHandlers) {\n            // Don't do events on text and comment nodes\n            if (elem && (elem.nodeType === 3 || elem.nodeType === 8)) {\n                return;\n            }\n\n            // Event object or event type\n            var type = event.type || event,\n\t\t\tnamespaces = [],\n\t\t\tcache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType;\n\n            // focus/blur morphs to focusin/out; ensure we're not firing them right now\n            if (rfocusMorph.test(type + jQuery.event.triggered)) {\n                return;\n            }\n\n            if (type.indexOf(\"!\") >= 0) {\n                // Exclusive events trigger only for the exact event (no namespaces)\n                type = type.slice(0, -1);\n                exclusive = true;\n            }\n\n            if (type.indexOf(\".\") >= 0) {\n                // Namespaced trigger; create a regexp to match event type in handle()\n                namespaces = type.split(\".\");\n                type = namespaces.shift();\n                namespaces.sort();\n            }\n\n            if ((!elem || jQuery.event.customEvent[type]) && !jQuery.event.global[type]) {\n                // No jQuery handlers for this event type, and it can't have inline handlers\n                return;\n            }\n\n            // Caller can pass in an Event, Object, or just an event type string\n            event = typeof event === \"object\" ?\n            // jQuery.Event object\n\t\t\tevent[jQuery.expando] ? event :\n            // Object literal\n\t\t\tnew jQuery.Event(type, event) :\n            // Just the event type (string)\n\t\t\tnew jQuery.Event(type);\n\n            event.type = type;\n            event.isTrigger = true;\n            event.exclusive = exclusive;\n            event.namespace = namespaces.join(\".\");\n            event.namespace_re = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\") : null;\n            ontype = type.indexOf(\":\") < 0 ? \"on\" + type : \"\";\n\n            // Handle a global trigger\n            if (!elem) {\n\n                // TODO: Stop taunting the data cache; remove global events and always attach to document\n                cache = jQuery.cache;\n                for (i in cache) {\n                    if (cache[i].events && cache[i].events[type]) {\n                        jQuery.event.trigger(event, data, cache[i].handle.elem, true);\n                    }\n                }\n                return;\n            }\n\n            // Clean up the event in case it is being reused\n            event.result = undefined;\n            if (!event.target) {\n                event.target = elem;\n            }\n\n            // Clone any incoming data and prepend the event, creating the handler arg list\n            data = data != null ? jQuery.makeArray(data) : [];\n            data.unshift(event);\n\n            // Allow special events to draw outside the lines\n            special = jQuery.event.special[type] || {};\n            if (special.trigger && special.trigger.apply(elem, data) === false) {\n                return;\n            }\n\n            // Determine event propagation path in advance, per W3C events spec (#9951)\n            // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n            eventPath = [[elem, special.bindType || type]];\n            if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\n\n                bubbleType = special.delegateType || type;\n                cur = rfocusMorph.test(bubbleType + type) ? elem : elem.parentNode;\n                old = null;\n                for (; cur; cur = cur.parentNode) {\n                    eventPath.push([cur, bubbleType]);\n                    old = cur;\n                }\n\n                // Only add window if we got to document (e.g., not plain obj or detached DOM)\n                if (old && old === elem.ownerDocument) {\n                    eventPath.push([old.defaultView || old.parentWindow || window, bubbleType]);\n                }\n            }\n\n            // Fire handlers on the event path\n            for (i = 0; i < eventPath.length && !event.isPropagationStopped(); i++) {\n\n                cur = eventPath[i][0];\n                event.type = eventPath[i][1];\n\n                handle = (jQuery._data(cur, \"events\") || {})[event.type] && jQuery._data(cur, \"handle\");\n                if (handle) {\n                    handle.apply(cur, data);\n                }\n                // Note that this is a bare JS function and not a jQuery handler\n                handle = ontype && cur[ontype];\n                if (handle && jQuery.acceptData(cur) && handle.apply(cur, data) === false) {\n                    event.preventDefault();\n                }\n            }\n            event.type = type;\n\n            // If nobody prevented the default action, do it now\n            if (!onlyHandlers && !event.isDefaultPrevented()) {\n\n                if ((!special._default || special._default.apply(elem.ownerDocument, data) === false) &&\n\t\t\t\t!(type === \"click\" && jQuery.nodeName(elem, \"a\")) && jQuery.acceptData(elem)) {\n\n                    // Call a native DOM method on the target with the same name name as the event.\n                    // Can't use an .isFunction() check here because IE6/7 fails that test.\n                    // Don't do default actions on window, that's where global variables be (#6170)\n                    // IE<9 dies on focus/blur to hidden element (#1486)\n                    if (ontype && elem[type] && ((type !== \"focus\" && type !== \"blur\") || event.target.offsetWidth !== 0) && !jQuery.isWindow(elem)) {\n\n                        // Don't re-trigger an onFOO event when we call its FOO() method\n                        old = elem[ontype];\n\n                        if (old) {\n                            elem[ontype] = null;\n                        }\n\n                        // Prevent re-triggering of the same event, since we already bubbled it above\n                        jQuery.event.triggered = type;\n                        elem[type]();\n                        jQuery.event.triggered = undefined;\n\n                        if (old) {\n                            elem[ontype] = old;\n                        }\n                    }\n                }\n            }\n\n            return event.result;\n        },\n\n        dispatch: function (event) {\n\n            // Make a writable jQuery.Event from the native event object\n            event = jQuery.event.fix(event || window.event);\n\n            var handlers = ((jQuery._data(this, \"events\") || {})[event.type] || []),\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\targs = [].slice.call(arguments, 0),\n\t\t\trun_all = !event.exclusive && !event.namespace,\n\t\t\tspecial = jQuery.event.special[event.type] || {},\n\t\t\thandlerQueue = [],\n\t\t\ti, j, cur, jqcur, ret, selMatch, matched, matches, handleObj, sel, related;\n\n            // Use the fix-ed jQuery.Event rather than the (read-only) native event\n            args[0] = event;\n            event.delegateTarget = this;\n\n            // Call the preDispatch hook for the mapped type, and let it bail if desired\n            if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n                return;\n            }\n\n            // Determine handlers that should run if there are delegated events\n            // Avoid non-left-click bubbling in Firefox (#3861)\n            if (delegateCount && !(event.button && event.type === \"click\")) {\n\n                // Pregenerate a single jQuery object for reuse with .is()\n                jqcur = jQuery(this);\n                jqcur.context = this.ownerDocument || this;\n\n                for (cur = event.target; cur != this; cur = cur.parentNode || this) {\n\n                    // Don't process events on disabled elements (#6911, #8165)\n                    if (cur.disabled !== true) {\n                        selMatch = {};\n                        matches = [];\n                        jqcur[0] = cur;\n                        for (i = 0; i < delegateCount; i++) {\n                            handleObj = handlers[i];\n                            sel = handleObj.selector;\n\n                            if (selMatch[sel] === undefined) {\n                                selMatch[sel] = (\n\t\t\t\t\t\t\t\thandleObj.quick ? quickIs(cur, handleObj.quick) : jqcur.is(sel)\n\t\t\t\t\t\t\t);\n                            }\n                            if (selMatch[sel]) {\n                                matches.push(handleObj);\n                            }\n                        }\n                        if (matches.length) {\n                            handlerQueue.push({ elem: cur, matches: matches });\n                        }\n                    }\n                }\n            }\n\n            // Add the remaining (directly-bound) handlers\n            if (handlers.length > delegateCount) {\n                handlerQueue.push({ elem: this, matches: handlers.slice(delegateCount) });\n            }\n\n            // Run delegates first; they may want to stop propagation beneath us\n            for (i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++) {\n                matched = handlerQueue[i];\n                event.currentTarget = matched.elem;\n\n                for (j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++) {\n                    handleObj = matched.matches[j];\n\n                    // Triggered event must either 1) be non-exclusive and have no namespace, or\n                    // 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\n                    if (run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test(handleObj.namespace)) {\n\n                        event.data = handleObj.data;\n                        event.handleObj = handleObj;\n\n                        ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler)\n\t\t\t\t\t\t\t.apply(matched.elem, args);\n\n                        if (ret !== undefined) {\n                            event.result = ret;\n                            if (ret === false) {\n                                event.preventDefault();\n                                event.stopPropagation();\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Call the postDispatch hook for the mapped type\n            if (special.postDispatch) {\n                special.postDispatch.call(this, event);\n            }\n\n            return event.result;\n        },\n\n        // Includes some event props shared by KeyEvent and MouseEvent\n        // *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***\n        props: \"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n        fixHooks: {},\n\n        keyHooks: {\n            props: \"char charCode key keyCode\".split(\" \"),\n            filter: function (event, original) {\n\n                // Add which for key events\n                if (event.which == null) {\n                    event.which = original.charCode != null ? original.charCode : original.keyCode;\n                }\n\n                return event;\n            }\n        },\n\n        mouseHooks: {\n            props: \"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n            filter: function (event, original) {\n                var eventDoc, doc, body,\n\t\t\t\tbutton = original.button,\n\t\t\t\tfromElement = original.fromElement;\n\n                // Calculate pageX/Y if missing and clientX/Y available\n                if (event.pageX == null && original.clientX != null) {\n                    eventDoc = event.target.ownerDocument || document;\n                    doc = eventDoc.documentElement;\n                    body = eventDoc.body;\n\n                    event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n                    event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n                }\n\n                // Add relatedTarget, if necessary\n                if (!event.relatedTarget && fromElement) {\n                    event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;\n                }\n\n                // Add which for click: 1 === left; 2 === middle; 3 === right\n                // Note: button is not normalized, so don't use it\n                if (!event.which && button !== undefined) {\n                    event.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n                }\n\n                return event;\n            }\n        },\n\n        fix: function (event) {\n            if (event[jQuery.expando]) {\n                return event;\n            }\n\n            // Create a writable copy of the event object and normalize some properties\n            var i, prop,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = jQuery.event.fixHooks[event.type] || {},\n\t\t\tcopy = fixHook.props ? this.props.concat(fixHook.props) : this.props;\n\n            event = jQuery.Event(originalEvent);\n\n            for (i = copy.length; i; ) {\n                prop = copy[--i];\n                event[prop] = originalEvent[prop];\n            }\n\n            // Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)\n            if (!event.target) {\n                event.target = originalEvent.srcElement || document;\n            }\n\n            // Target should not be a text node (#504, Safari)\n            if (event.target.nodeType === 3) {\n                event.target = event.target.parentNode;\n            }\n\n            // For mouse/key events; add metaKey if it's not there (#3368, IE6/7/8)\n            if (event.metaKey === undefined) {\n                event.metaKey = event.ctrlKey;\n            }\n\n            return fixHook.filter ? fixHook.filter(event, originalEvent) : event;\n        },\n\n        special: {\n            ready: {\n                // Make sure the ready event is setup\n                setup: jQuery.bindReady\n            },\n\n            load: {\n                // Prevent triggered image.load events from bubbling to window.load\n                noBubble: true\n            },\n\n            focus: {\n                delegateType: \"focusin\"\n            },\n            blur: {\n                delegateType: \"focusout\"\n            },\n\n            beforeunload: {\n                setup: function (data, namespaces, eventHandle) {\n                    // We only want to do this special case on windows\n                    if (jQuery.isWindow(this)) {\n                        this.onbeforeunload = eventHandle;\n                    }\n                },\n\n                teardown: function (namespaces, eventHandle) {\n                    if (this.onbeforeunload === eventHandle) {\n                        this.onbeforeunload = null;\n                    }\n                }\n            }\n        },\n\n        simulate: function (type, elem, event, bubble) {\n            // Piggyback on a donor event to simulate a different one.\n            // Fake originalEvent to avoid donor's stopPropagation, but if the\n            // simulated event prevents default then we do the same on the donor.\n            var e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{ type: type,\n\t\t\t    isSimulated: true,\n\t\t\t    originalEvent: {}\n\t\t\t}\n\t\t);\n            if (bubble) {\n                jQuery.event.trigger(e, null, elem);\n            } else {\n                jQuery.event.dispatch.call(elem, e);\n            }\n            if (e.isDefaultPrevented()) {\n                event.preventDefault();\n            }\n        }\n    };\n\n    // Some plugins are using, but it's undocumented/deprecated and will be removed.\n    // The 1.7 special event interface should provide all the hooks needed now.\n    jQuery.event.handle = jQuery.event.dispatch;\n\n    jQuery.removeEvent = document.removeEventListener ?\n\tfunction (elem, type, handle) {\n\t    if (elem.removeEventListener) {\n\t        elem.removeEventListener(type, handle, false);\n\t    }\n\t} :\n\tfunction (elem, type, handle) {\n\t    if (elem.detachEvent) {\n\t        elem.detachEvent(\"on\" + type, handle);\n\t    }\n\t};\n\n    jQuery.Event = function (src, props) {\n        // Allow instantiation without the 'new' keyword\n        if (!(this instanceof jQuery.Event)) {\n            return new jQuery.Event(src, props);\n        }\n\n        // Event object\n        if (src && src.type) {\n            this.originalEvent = src;\n            this.type = src.type;\n\n            // Events bubbling up the document may have been marked as prevented\n            // by a handler lower down the tree; reflect the correct value.\n            this.isDefaultPrevented = (src.defaultPrevented || src.returnValue === false ||\n\t\t\tsrc.getPreventDefault && src.getPreventDefault()) ? returnTrue : returnFalse;\n\n            // Event type\n        } else {\n            this.type = src;\n        }\n\n        // Put explicitly provided properties onto the event object\n        if (props) {\n            jQuery.extend(this, props);\n        }\n\n        // Create a timestamp if incoming event doesn't have one\n        this.timeStamp = src && src.timeStamp || jQuery.now();\n\n        // Mark it as fixed\n        this[jQuery.expando] = true;\n    };\n\n    function returnFalse() {\n        return false;\n    }\n    function returnTrue() {\n        return true;\n    }\n\n    // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n    // http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n    jQuery.Event.prototype = {\n        preventDefault: function () {\n            this.isDefaultPrevented = returnTrue;\n\n            var e = this.originalEvent;\n            if (!e) {\n                return;\n            }\n\n            // if preventDefault exists run it on the original event\n            if (e.preventDefault) {\n                e.preventDefault();\n\n                // otherwise set the returnValue property of the original event to false (IE)\n            } else {\n                e.returnValue = false;\n            }\n        },\n        stopPropagation: function () {\n            this.isPropagationStopped = returnTrue;\n\n            var e = this.originalEvent;\n            if (!e) {\n                return;\n            }\n            // if stopPropagation exists run it on the original event\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n            // otherwise set the cancelBubble property of the original event to true (IE)\n            e.cancelBubble = true;\n        },\n        stopImmediatePropagation: function () {\n            this.isImmediatePropagationStopped = returnTrue;\n            this.stopPropagation();\n        },\n        isDefaultPrevented: returnFalse,\n        isPropagationStopped: returnFalse,\n        isImmediatePropagationStopped: returnFalse\n    };\n\n    // Create mouseenter/leave events using mouseover/out and event-time checks\n    jQuery.each({\n        mouseenter: \"mouseover\",\n        mouseleave: \"mouseout\"\n    }, function (orig, fix) {\n        jQuery.event.special[orig] = {\n            delegateType: fix,\n            bindType: fix,\n\n            handle: function (event) {\n                var target = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj,\n\t\t\t\tselector = handleObj.selector,\n\t\t\t\tret;\n\n                // For mousenter/leave call the handler if related is outside the target.\n                // NB: No relatedTarget if the mouse left/entered the browser window\n                if (!related || (related !== target && !jQuery.contains(target, related))) {\n                    event.type = handleObj.origType;\n                    ret = handleObj.handler.apply(this, arguments);\n                    event.type = fix;\n                }\n                return ret;\n            }\n        };\n    });\n\n    // IE submit delegation\n    if (!jQuery.support.submitBubbles) {\n\n        jQuery.event.special.submit = {\n            setup: function () {\n                // Only need this for delegated form submit events\n                if (jQuery.nodeName(this, \"form\")) {\n                    return false;\n                }\n\n                // Lazy-add a submit handler when a descendant form may potentially be submitted\n                jQuery.event.add(this, \"click._submit keypress._submit\", function (e) {\n                    // Node name check avoids a VML-related crash in IE (#9807)\n                    var elem = e.target,\n\t\t\t\t\tform = jQuery.nodeName(elem, \"input\") || jQuery.nodeName(elem, \"button\") ? elem.form : undefined;\n                    if (form && !form._submit_attached) {\n                        jQuery.event.add(form, \"submit._submit\", function (event) {\n                            event._submit_bubble = true;\n                        });\n                        form._submit_attached = true;\n                    }\n                });\n                // return undefined since we don't need an event listener\n            },\n\n            postDispatch: function (event) {\n                // If form was submitted by the user, bubble the event up the tree\n                if (event._submit_bubble) {\n                    delete event._submit_bubble;\n                    if (this.parentNode && !event.isTrigger) {\n                        jQuery.event.simulate(\"submit\", this.parentNode, event, true);\n                    }\n                }\n            },\n\n            teardown: function () {\n                // Only need this for delegated form submit events\n                if (jQuery.nodeName(this, \"form\")) {\n                    return false;\n                }\n\n                // Remove delegated handlers; cleanData eventually reaps submit handlers attached above\n                jQuery.event.remove(this, \"._submit\");\n            }\n        };\n    }\n\n    // IE change delegation and checkbox/radio fix\n    if (!jQuery.support.changeBubbles) {\n\n        jQuery.event.special.change = {\n\n            setup: function () {\n\n                if (rformElems.test(this.nodeName)) {\n                    // IE doesn't fire change on a check/radio until blur; trigger it on click\n                    // after a propertychange. Eat the blur-change in special.change.handle.\n                    // This still fires onchange a second time for check/radio after blur.\n                    if (this.type === \"checkbox\" || this.type === \"radio\") {\n                        jQuery.event.add(this, \"propertychange._change\", function (event) {\n                            if (event.originalEvent.propertyName === \"checked\") {\n                                this._just_changed = true;\n                            }\n                        });\n                        jQuery.event.add(this, \"click._change\", function (event) {\n                            if (this._just_changed && !event.isTrigger) {\n                                this._just_changed = false;\n                                jQuery.event.simulate(\"change\", this, event, true);\n                            }\n                        });\n                    }\n                    return false;\n                }\n                // Delegated event; lazy-add a change handler on descendant inputs\n                jQuery.event.add(this, \"beforeactivate._change\", function (e) {\n                    var elem = e.target;\n\n                    if (rformElems.test(elem.nodeName) && !elem._change_attached) {\n                        jQuery.event.add(elem, \"change._change\", function (event) {\n                            if (this.parentNode && !event.isSimulated && !event.isTrigger) {\n                                jQuery.event.simulate(\"change\", this.parentNode, event, true);\n                            }\n                        });\n                        elem._change_attached = true;\n                    }\n                });\n            },\n\n            handle: function (event) {\n                var elem = event.target;\n\n                // Swallow native change events from checkbox/radio, we already triggered them above\n                if (this !== elem || event.isSimulated || event.isTrigger || (elem.type !== \"radio\" && elem.type !== \"checkbox\")) {\n                    return event.handleObj.handler.apply(this, arguments);\n                }\n            },\n\n            teardown: function () {\n                jQuery.event.remove(this, \"._change\");\n\n                return rformElems.test(this.nodeName);\n            }\n        };\n    }\n\n    // Create \"bubbling\" focus and blur events\n    if (!jQuery.support.focusinBubbles) {\n        jQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function (orig, fix) {\n\n            // Attach a single capturing handler while someone wants focusin/focusout\n            var attaches = 0,\n\t\t\thandler = function (event) {\n\t\t\t    jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), true);\n\t\t\t};\n\n            jQuery.event.special[fix] = {\n                setup: function () {\n                    if (attaches++ === 0) {\n                        document.addEventListener(orig, handler, true);\n                    }\n                },\n                teardown: function () {\n                    if (--attaches === 0) {\n                        document.removeEventListener(orig, handler, true);\n                    }\n                }\n            };\n        });\n    }\n\n    jQuery.fn.extend({\n\n        on: function (types, selector, data, fn, /*INTERNAL*/one) {\n            var origFn, type;\n\n            // Types can be a map of types/handlers\n            if (typeof types === \"object\") {\n                // ( types-Object, selector, data )\n                if (typeof selector !== \"string\") { // && selector != null\n                    // ( types-Object, data )\n                    data = data || selector;\n                    selector = undefined;\n                }\n                for (type in types) {\n                    this.on(type, selector, data, types[type], one);\n                }\n                return this;\n            }\n\n            if (data == null && fn == null) {\n                // ( types, fn )\n                fn = selector;\n                data = selector = undefined;\n            } else if (fn == null) {\n                if (typeof selector === \"string\") {\n                    // ( types, selector, fn )\n                    fn = data;\n                    data = undefined;\n                } else {\n                    // ( types, data, fn )\n                    fn = data;\n                    data = selector;\n                    selector = undefined;\n                }\n            }\n            if (fn === false) {\n                fn = returnFalse;\n            } else if (!fn) {\n                return this;\n            }\n\n            if (one === 1) {\n                origFn = fn;\n                fn = function (event) {\n                    // Can use an empty set, since event contains the info\n                    jQuery().off(event);\n                    return origFn.apply(this, arguments);\n                };\n                // Use same guid so caller can remove using origFn\n                fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n            }\n            return this.each(function () {\n                jQuery.event.add(this, types, fn, data, selector);\n            });\n        },\n        one: function (types, selector, data, fn) {\n            return this.on(types, selector, data, fn, 1);\n        },\n        off: function (types, selector, fn) {\n            if (types && types.preventDefault && types.handleObj) {\n                // ( event )  dispatched jQuery.Event\n                var handleObj = types.handleObj;\n                jQuery(types.delegateTarget).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n                return this;\n            }\n            if (typeof types === \"object\") {\n                // ( types-object [, selector] )\n                for (var type in types) {\n                    this.off(type, selector, types[type]);\n                }\n                return this;\n            }\n            if (selector === false || typeof selector === \"function\") {\n                // ( types [, fn] )\n                fn = selector;\n                selector = undefined;\n            }\n            if (fn === false) {\n                fn = returnFalse;\n            }\n            return this.each(function () {\n                jQuery.event.remove(this, types, fn, selector);\n            });\n        },\n\n        bind: function (types, data, fn) {\n            return this.on(types, null, data, fn);\n        },\n        unbind: function (types, fn) {\n            return this.off(types, null, fn);\n        },\n\n        live: function (types, data, fn) {\n            jQuery(this.context).on(types, this.selector, data, fn);\n            return this;\n        },\n        die: function (types, fn) {\n            jQuery(this.context).off(types, this.selector || \"**\", fn);\n            return this;\n        },\n\n        delegate: function (selector, types, data, fn) {\n            return this.on(types, selector, data, fn);\n        },\n        undelegate: function (selector, types, fn) {\n            // ( namespace ) or ( selector, types [, fn] )\n            return arguments.length == 1 ? this.off(selector, \"**\") : this.off(types, selector, fn);\n        },\n\n        trigger: function (type, data) {\n            return this.each(function () {\n                jQuery.event.trigger(type, data, this);\n            });\n        },\n        triggerHandler: function (type, data) {\n            if (this[0]) {\n                return jQuery.event.trigger(type, data, this[0], true);\n            }\n        },\n\n        toggle: function (fn) {\n            // Save reference to arguments for access in closure\n            var args = arguments,\n\t\t\tguid = fn.guid || jQuery.guid++,\n\t\t\ti = 0,\n\t\t\ttoggler = function (event) {\n\t\t\t    // Figure out which function to execute\n\t\t\t    var lastToggle = (jQuery._data(this, \"lastToggle\" + fn.guid) || 0) % i;\n\t\t\t    jQuery._data(this, \"lastToggle\" + fn.guid, lastToggle + 1);\n\n\t\t\t    // Make sure that clicks stop\n\t\t\t    event.preventDefault();\n\n\t\t\t    // and execute the function\n\t\t\t    return args[lastToggle].apply(this, arguments) || false;\n\t\t\t};\n\n            // link all the functions, so any of them can unbind this click handler\n            toggler.guid = guid;\n            while (i < args.length) {\n                args[i++].guid = guid;\n            }\n\n            return this.click(toggler);\n        },\n\n        hover: function (fnOver, fnOut) {\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n        }\n    });\n\n    jQuery.each((\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function (i, name) {\n\n\t    // Handle event binding\n\t    jQuery.fn[name] = function (data, fn) {\n\t        if (fn == null) {\n\t            fn = data;\n\t            data = null;\n\t        }\n\n\t        return arguments.length > 0 ?\n\t\t\tthis.on(name, null, data, fn) :\n\t\t\tthis.trigger(name);\n\t    };\n\n\t    if (jQuery.attrFn) {\n\t        jQuery.attrFn[name] = true;\n\t    }\n\n\t    if (rkeyEvent.test(name)) {\n\t        jQuery.event.fixHooks[name] = jQuery.event.keyHooks;\n\t    }\n\n\t    if (rmouseEvent.test(name)) {\n\t        jQuery.event.fixHooks[name] = jQuery.event.mouseHooks;\n\t    }\n\t});\n\n\n\n    /*!\n    * Sizzle CSS Selector Engine\n    *  Copyright 2011, The Dojo Foundation\n    *  Released under the MIT, BSD, and GPL Licenses.\n    *  More information: http://sizzlejs.com/\n    */\n    (function () {\n\n        var chunker = /((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g,\n\texpando = \"sizcache\" + (Math.random() + '').replace('.', ''),\n\tdone = 0,\n\ttoString = Object.prototype.toString,\n\thasDuplicate = false,\n\tbaseHasDuplicate = true,\n\trBackslash = /\\\\/g,\n\trReturn = /\\r\\n/g,\n\trNonWord = /\\W/;\n\n        // Here we check if the JavaScript engine is using some sort of\n        // optimization where it does not always call our comparision\n        // function. If that is the case, discard the hasDuplicate value.\n        //   Thus far that includes Google Chrome.\n        [0, 0].sort(function () {\n            baseHasDuplicate = false;\n            return 0;\n        });\n\n        var Sizzle = function (selector, context, results, seed) {\n            results = results || [];\n            context = context || document;\n\n            var origContext = context;\n\n            if (context.nodeType !== 1 && context.nodeType !== 9) {\n                return [];\n            }\n\n            if (!selector || typeof selector !== \"string\") {\n                return results;\n            }\n\n            var m, set, checkSet, extra, ret, cur, pop, i,\n\t\tprune = true,\n\t\tcontextXML = Sizzle.isXML(context),\n\t\tparts = [],\n\t\tsoFar = selector;\n\n            // Reset the position of the chunker regexp (start from head)\n            do {\n                chunker.exec(\"\");\n                m = chunker.exec(soFar);\n\n                if (m) {\n                    soFar = m[3];\n\n                    parts.push(m[1]);\n\n                    if (m[2]) {\n                        extra = m[3];\n                        break;\n                    }\n                }\n            } while (m);\n\n            if (parts.length > 1 && origPOS.exec(selector)) {\n\n                if (parts.length === 2 && Expr.relative[parts[0]]) {\n                    set = posProcess(parts[0] + parts[1], context, seed);\n\n                } else {\n                    set = Expr.relative[parts[0]] ?\n\t\t\t\t[context] :\n\t\t\t\tSizzle(parts.shift(), context);\n\n                    while (parts.length) {\n                        selector = parts.shift();\n\n                        if (Expr.relative[selector]) {\n                            selector += parts.shift();\n                        }\n\n                        set = posProcess(selector, set, seed);\n                    }\n                }\n\n            } else {\n                // Take a shortcut and set the context if the root selector is an ID\n                // (but not if it'll be faster if the inner selector is an ID)\n                if (!seed && parts.length > 1 && context.nodeType === 9 && !contextXML &&\n\t\t\t\tExpr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1])) {\n\n                    ret = Sizzle.find(parts.shift(), context, contextXML);\n                    context = ret.expr ?\n\t\t\t\tSizzle.filter(ret.expr, ret.set)[0] :\n\t\t\t\tret.set[0];\n                }\n\n                if (context) {\n                    ret = seed ?\n\t\t\t\t{ expr: parts.pop(), set: makeArray(seed)} :\n\t\t\t\tSizzle.find(parts.pop(), parts.length === 1 && (parts[0] === \"~\" || parts[0] === \"+\") && context.parentNode ? context.parentNode : context, contextXML);\n\n                    set = ret.expr ?\n\t\t\t\tSizzle.filter(ret.expr, ret.set) :\n\t\t\t\tret.set;\n\n                    if (parts.length > 0) {\n                        checkSet = makeArray(set);\n\n                    } else {\n                        prune = false;\n                    }\n\n                    while (parts.length) {\n                        cur = parts.pop();\n                        pop = cur;\n\n                        if (!Expr.relative[cur]) {\n                            cur = \"\";\n                        } else {\n                            pop = parts.pop();\n                        }\n\n                        if (pop == null) {\n                            pop = context;\n                        }\n\n                        Expr.relative[cur](checkSet, pop, contextXML);\n                    }\n\n                } else {\n                    checkSet = parts = [];\n                }\n            }\n\n            if (!checkSet) {\n                checkSet = set;\n            }\n\n            if (!checkSet) {\n                Sizzle.error(cur || selector);\n            }\n\n            if (toString.call(checkSet) === \"[object Array]\") {\n                if (!prune) {\n                    results.push.apply(results, checkSet);\n\n                } else if (context && context.nodeType === 1) {\n                    for (i = 0; checkSet[i] != null; i++) {\n                        if (checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i]))) {\n                            results.push(set[i]);\n                        }\n                    }\n\n                } else {\n                    for (i = 0; checkSet[i] != null; i++) {\n                        if (checkSet[i] && checkSet[i].nodeType === 1) {\n                            results.push(set[i]);\n                        }\n                    }\n                }\n\n            } else {\n                makeArray(checkSet, results);\n            }\n\n            if (extra) {\n                Sizzle(extra, origContext, results, seed);\n                Sizzle.uniqueSort(results);\n            }\n\n            return results;\n        };\n\n        Sizzle.uniqueSort = function (results) {\n            if (sortOrder) {\n                hasDuplicate = baseHasDuplicate;\n                results.sort(sortOrder);\n\n                if (hasDuplicate) {\n                    for (var i = 1; i < results.length; i++) {\n                        if (results[i] === results[i - 1]) {\n                            results.splice(i--, 1);\n                        }\n                    }\n                }\n            }\n\n            return results;\n        };\n\n        Sizzle.matches = function (expr, set) {\n            return Sizzle(expr, null, null, set);\n        };\n\n        Sizzle.matchesSelector = function (node, expr) {\n            return Sizzle(expr, null, null, [node]).length > 0;\n        };\n\n        Sizzle.find = function (expr, context, isXML) {\n            var set, i, len, match, type, left;\n\n            if (!expr) {\n                return [];\n            }\n\n            for (i = 0, len = Expr.order.length; i < len; i++) {\n                type = Expr.order[i];\n\n                if ((match = Expr.leftMatch[type].exec(expr))) {\n                    left = match[1];\n                    match.splice(1, 1);\n\n                    if (left.substr(left.length - 1) !== \"\\\\\") {\n                        match[1] = (match[1] || \"\").replace(rBackslash, \"\");\n                        set = Expr.find[type](match, context, isXML);\n\n                        if (set != null) {\n                            expr = expr.replace(Expr.match[type], \"\");\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (!set) {\n                set = typeof context.getElementsByTagName !== \"undefined\" ?\n\t\t\tcontext.getElementsByTagName(\"*\") :\n\t\t\t[];\n            }\n\n            return { set: set, expr: expr };\n        };\n\n        Sizzle.filter = function (expr, set, inplace, not) {\n            var match, anyFound,\n\t\ttype, found, item, filter, left,\n\t\ti, pass,\n\t\told = expr,\n\t\tresult = [],\n\t\tcurLoop = set,\n\t\tisXMLFilter = set && set[0] && Sizzle.isXML(set[0]);\n\n            while (expr && set.length) {\n                for (type in Expr.filter) {\n                    if ((match = Expr.leftMatch[type].exec(expr)) != null && match[2]) {\n                        filter = Expr.filter[type];\n                        left = match[1];\n\n                        anyFound = false;\n\n                        match.splice(1, 1);\n\n                        if (left.substr(left.length - 1) === \"\\\\\") {\n                            continue;\n                        }\n\n                        if (curLoop === result) {\n                            result = [];\n                        }\n\n                        if (Expr.preFilter[type]) {\n                            match = Expr.preFilter[type](match, curLoop, inplace, result, not, isXMLFilter);\n\n                            if (!match) {\n                                anyFound = found = true;\n\n                            } else if (match === true) {\n                                continue;\n                            }\n                        }\n\n                        if (match) {\n                            for (i = 0; (item = curLoop[i]) != null; i++) {\n                                if (item) {\n                                    found = filter(item, match, i, curLoop);\n                                    pass = not ^ found;\n\n                                    if (inplace && found != null) {\n                                        if (pass) {\n                                            anyFound = true;\n\n                                        } else {\n                                            curLoop[i] = false;\n                                        }\n\n                                    } else if (pass) {\n                                        result.push(item);\n                                        anyFound = true;\n                                    }\n                                }\n                            }\n                        }\n\n                        if (found !== undefined) {\n                            if (!inplace) {\n                                curLoop = result;\n                            }\n\n                            expr = expr.replace(Expr.match[type], \"\");\n\n                            if (!anyFound) {\n                                return [];\n                            }\n\n                            break;\n                        }\n                    }\n                }\n\n                // Improper expression\n                if (expr === old) {\n                    if (anyFound == null) {\n                        Sizzle.error(expr);\n\n                    } else {\n                        break;\n                    }\n                }\n\n                old = expr;\n            }\n\n            return curLoop;\n        };\n\n        Sizzle.error = function (msg) {\n            throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n        };\n\n        /**\n        * Utility function for retreiving the text value of an array of DOM nodes\n        * @param {Array|Element} elem\n        */\n        var getText = Sizzle.getText = function (elem) {\n            var i, node,\n\t\tnodeType = elem.nodeType,\n\t\tret = \"\";\n\n            if (nodeType) {\n                if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n                    // Use textContent || innerText for elements\n                    if (typeof elem.textContent === 'string') {\n                        return elem.textContent;\n                    } else if (typeof elem.innerText === 'string') {\n                        // Replace IE's carriage returns\n                        return elem.innerText.replace(rReturn, '');\n                    } else {\n                        // Traverse it's children\n                        for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                            ret += getText(elem);\n                        }\n                    }\n                } else if (nodeType === 3 || nodeType === 4) {\n                    return elem.nodeValue;\n                }\n            } else {\n\n                // If no nodeType, this is expected to be an array\n                for (i = 0; (node = elem[i]); i++) {\n                    // Do not traverse comment nodes\n                    if (node.nodeType !== 8) {\n                        ret += getText(node);\n                    }\n                }\n            }\n            return ret;\n        };\n\n        var Expr = Sizzle.selectors = {\n            order: [\"ID\", \"NAME\", \"TAG\"],\n\n            match: {\n                ID: /#((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/,\n                CLASS: /\\.((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/,\n                NAME: /\\[name=['\"]*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)['\"]*\\]/,\n                ATTR: /\\[\\s*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)\\s*(?:(\\S?=)\\s*(?:(['\"])(.*?)\\3|(#?(?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)*)|)|)\\s*\\]/,\n                TAG: /^((?:[\\w\\u00c0-\\uFFFF\\*\\-]|\\\\.)+)/,\n                CHILD: /:(only|nth|last|first)-child(?:\\(\\s*(even|odd|(?:[+\\-]?\\d+|(?:[+\\-]?\\d*)?n\\s*(?:[+\\-]\\s*\\d+)?))\\s*\\))?/,\n                POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\))?(?=[^\\-]|$)/,\n                PSEUDO: /:((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)(?:\\((['\"]?)((?:\\([^\\)]+\\)|[^\\(\\)]*)+)\\2\\))?/\n            },\n\n            leftMatch: {},\n\n            attrMap: {\n                \"class\": \"className\",\n                \"for\": \"htmlFor\"\n            },\n\n            attrHandle: {\n                href: function (elem) {\n                    return elem.getAttribute(\"href\");\n                },\n                type: function (elem) {\n                    return elem.getAttribute(\"type\");\n                }\n            },\n\n            relative: {\n                \"+\": function (checkSet, part) {\n                    var isPartStr = typeof part === \"string\",\n\t\t\t\tisTag = isPartStr && !rNonWord.test(part),\n\t\t\t\tisPartStrNotTag = isPartStr && !isTag;\n\n                    if (isTag) {\n                        part = part.toLowerCase();\n                    }\n\n                    for (var i = 0, l = checkSet.length, elem; i < l; i++) {\n                        if ((elem = checkSet[i])) {\n                            while ((elem = elem.previousSibling) && elem.nodeType !== 1) { }\n\n                            checkSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ?\n\t\t\t\t\t\telem || false :\n\t\t\t\t\t\telem === part;\n                        }\n                    }\n\n                    if (isPartStrNotTag) {\n                        Sizzle.filter(part, checkSet, true);\n                    }\n                },\n\n                \">\": function (checkSet, part) {\n                    var elem,\n\t\t\t\tisPartStr = typeof part === \"string\",\n\t\t\t\ti = 0,\n\t\t\t\tl = checkSet.length;\n\n                    if (isPartStr && !rNonWord.test(part)) {\n                        part = part.toLowerCase();\n\n                        for (; i < l; i++) {\n                            elem = checkSet[i];\n\n                            if (elem) {\n                                var parent = elem.parentNode;\n                                checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false;\n                            }\n                        }\n\n                    } else {\n                        for (; i < l; i++) {\n                            elem = checkSet[i];\n\n                            if (elem) {\n                                checkSet[i] = isPartStr ?\n\t\t\t\t\t\t\telem.parentNode :\n\t\t\t\t\t\t\telem.parentNode === part;\n                            }\n                        }\n\n                        if (isPartStr) {\n                            Sizzle.filter(part, checkSet, true);\n                        }\n                    }\n                },\n\n                \"\": function (checkSet, part, isXML) {\n                    var nodeCheck,\n\t\t\t\tdoneName = done++,\n\t\t\t\tcheckFn = dirCheck;\n\n                    if (typeof part === \"string\" && !rNonWord.test(part)) {\n                        part = part.toLowerCase();\n                        nodeCheck = part;\n                        checkFn = dirNodeCheck;\n                    }\n\n                    checkFn(\"parentNode\", part, doneName, checkSet, nodeCheck, isXML);\n                },\n\n                \"~\": function (checkSet, part, isXML) {\n                    var nodeCheck,\n\t\t\t\tdoneName = done++,\n\t\t\t\tcheckFn = dirCheck;\n\n                    if (typeof part === \"string\" && !rNonWord.test(part)) {\n                        part = part.toLowerCase();\n                        nodeCheck = part;\n                        checkFn = dirNodeCheck;\n                    }\n\n                    checkFn(\"previousSibling\", part, doneName, checkSet, nodeCheck, isXML);\n                }\n            },\n\n            find: {\n                ID: function (match, context, isXML) {\n                    if (typeof context.getElementById !== \"undefined\" && !isXML) {\n                        var m = context.getElementById(match[1]);\n                        // Check parentNode to catch when Blackberry 4.6 returns\n                        // nodes that are no longer in the document #6963\n                        return m && m.parentNode ? [m] : [];\n                    }\n                },\n\n                NAME: function (match, context) {\n                    if (typeof context.getElementsByName !== \"undefined\") {\n                        var ret = [],\n\t\t\t\t\tresults = context.getElementsByName(match[1]);\n\n                        for (var i = 0, l = results.length; i < l; i++) {\n                            if (results[i].getAttribute(\"name\") === match[1]) {\n                                ret.push(results[i]);\n                            }\n                        }\n\n                        return ret.length === 0 ? null : ret;\n                    }\n                },\n\n                TAG: function (match, context) {\n                    if (typeof context.getElementsByTagName !== \"undefined\") {\n                        return context.getElementsByTagName(match[1]);\n                    }\n                }\n            },\n            preFilter: {\n                CLASS: function (match, curLoop, inplace, result, not, isXML) {\n                    match = \" \" + match[1].replace(rBackslash, \"\") + \" \";\n\n                    if (isXML) {\n                        return match;\n                    }\n\n                    for (var i = 0, elem; (elem = curLoop[i]) != null; i++) {\n                        if (elem) {\n                            if (not ^ (elem.className && (\" \" + elem.className + \" \").replace(/[\\t\\n\\r]/g, \" \").indexOf(match) >= 0)) {\n                                if (!inplace) {\n                                    result.push(elem);\n                                }\n\n                            } else if (inplace) {\n                                curLoop[i] = false;\n                            }\n                        }\n                    }\n\n                    return false;\n                },\n\n                ID: function (match) {\n                    return match[1].replace(rBackslash, \"\");\n                },\n\n                TAG: function (match, curLoop) {\n                    return match[1].replace(rBackslash, \"\").toLowerCase();\n                },\n\n                CHILD: function (match) {\n                    if (match[1] === \"nth\") {\n                        if (!match[2]) {\n                            Sizzle.error(match[0]);\n                        }\n\n                        match[2] = match[2].replace(/^\\+|\\s*/g, '');\n\n                        // parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6'\n                        var test = /(-?)(\\d*)(?:n([+\\-]?\\d*))?/.exec(\n\t\t\t\t\tmatch[2] === \"even\" && \"2n\" || match[2] === \"odd\" && \"2n+1\" ||\n\t\t\t\t\t!/\\D/.test(match[2]) && \"0n+\" + match[2] || match[2]);\n\n                        // calculate the numbers (first)n+(last) including if they are negative\n                        match[2] = (test[1] + (test[2] || 1)) - 0;\n                        match[3] = test[3] - 0;\n                    }\n                    else if (match[2]) {\n                        Sizzle.error(match[0]);\n                    }\n\n                    // TODO: Move to normal caching system\n                    match[0] = done++;\n\n                    return match;\n                },\n\n                ATTR: function (match, curLoop, inplace, result, not, isXML) {\n                    var name = match[1] = match[1].replace(rBackslash, \"\");\n\n                    if (!isXML && Expr.attrMap[name]) {\n                        match[1] = Expr.attrMap[name];\n                    }\n\n                    // Handle if an un-quoted value was used\n                    match[4] = (match[4] || match[5] || \"\").replace(rBackslash, \"\");\n\n                    if (match[2] === \"~=\") {\n                        match[4] = \" \" + match[4] + \" \";\n                    }\n\n                    return match;\n                },\n\n                PSEUDO: function (match, curLoop, inplace, result, not) {\n                    if (match[1] === \"not\") {\n                        // If we're dealing with a complex expression, or a simple one\n                        if ((chunker.exec(match[3]) || \"\").length > 1 || /^\\w/.test(match[3])) {\n                            match[3] = Sizzle(match[3], null, null, curLoop);\n\n                        } else {\n                            var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);\n\n                            if (!inplace) {\n                                result.push.apply(result, ret);\n                            }\n\n                            return false;\n                        }\n\n                    } else if (Expr.match.POS.test(match[0]) || Expr.match.CHILD.test(match[0])) {\n                        return true;\n                    }\n\n                    return match;\n                },\n\n                POS: function (match) {\n                    match.unshift(true);\n\n                    return match;\n                }\n            },\n\n            filters: {\n                enabled: function (elem) {\n                    return elem.disabled === false && elem.type !== \"hidden\";\n                },\n\n                disabled: function (elem) {\n                    return elem.disabled === true;\n                },\n\n                checked: function (elem) {\n                    return elem.checked === true;\n                },\n\n                selected: function (elem) {\n                    // Accessing this property makes selected-by-default\n                    // options in Safari work properly\n                    if (elem.parentNode) {\n                        elem.parentNode.selectedIndex;\n                    }\n\n                    return elem.selected === true;\n                },\n\n                parent: function (elem) {\n                    return !!elem.firstChild;\n                },\n\n                empty: function (elem) {\n                    return !elem.firstChild;\n                },\n\n                has: function (elem, i, match) {\n                    return !!Sizzle(match[3], elem).length;\n                },\n\n                header: function (elem) {\n                    return (/h\\d/i).test(elem.nodeName);\n                },\n\n                text: function (elem) {\n                    var attr = elem.getAttribute(\"type\"), type = elem.type;\n                    // IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)\n                    // use getAttribute instead to test this case\n                    return elem.nodeName.toLowerCase() === \"input\" && \"text\" === type && (attr === type || attr === null);\n                },\n\n                radio: function (elem) {\n                    return elem.nodeName.toLowerCase() === \"input\" && \"radio\" === elem.type;\n                },\n\n                checkbox: function (elem) {\n                    return elem.nodeName.toLowerCase() === \"input\" && \"checkbox\" === elem.type;\n                },\n\n                file: function (elem) {\n                    return elem.nodeName.toLowerCase() === \"input\" && \"file\" === elem.type;\n                },\n\n                password: function (elem) {\n                    return elem.nodeName.toLowerCase() === \"input\" && \"password\" === elem.type;\n                },\n\n                submit: function (elem) {\n                    var name = elem.nodeName.toLowerCase();\n                    return (name === \"input\" || name === \"button\") && \"submit\" === elem.type;\n                },\n\n                image: function (elem) {\n                    return elem.nodeName.toLowerCase() === \"input\" && \"image\" === elem.type;\n                },\n\n                reset: function (elem) {\n                    var name = elem.nodeName.toLowerCase();\n                    return (name === \"input\" || name === \"button\") && \"reset\" === elem.type;\n                },\n\n                button: function (elem) {\n                    var name = elem.nodeName.toLowerCase();\n                    return name === \"input\" && \"button\" === elem.type || name === \"button\";\n                },\n\n                input: function (elem) {\n                    return (/input|select|textarea|button/i).test(elem.nodeName);\n                },\n\n                focus: function (elem) {\n                    return elem === elem.ownerDocument.activeElement;\n                }\n            },\n            setFilters: {\n                first: function (elem, i) {\n                    return i === 0;\n                },\n\n                last: function (elem, i, match, array) {\n                    return i === array.length - 1;\n                },\n\n                even: function (elem, i) {\n                    return i % 2 === 0;\n                },\n\n                odd: function (elem, i) {\n                    return i % 2 === 1;\n                },\n\n                lt: function (elem, i, match) {\n                    return i < match[3] - 0;\n                },\n\n                gt: function (elem, i, match) {\n                    return i > match[3] - 0;\n                },\n\n                nth: function (elem, i, match) {\n                    return match[3] - 0 === i;\n                },\n\n                eq: function (elem, i, match) {\n                    return match[3] - 0 === i;\n                }\n            },\n            filter: {\n                PSEUDO: function (elem, match, i, array) {\n                    var name = match[1],\n\t\t\t\tfilter = Expr.filters[name];\n\n                    if (filter) {\n                        return filter(elem, i, match, array);\n\n                    } else if (name === \"contains\") {\n                        return (elem.textContent || elem.innerText || getText([elem]) || \"\").indexOf(match[3]) >= 0;\n\n                    } else if (name === \"not\") {\n                        var not = match[3];\n\n                        for (var j = 0, l = not.length; j < l; j++) {\n                            if (not[j] === elem) {\n                                return false;\n                            }\n                        }\n\n                        return true;\n\n                    } else {\n                        Sizzle.error(name);\n                    }\n                },\n\n                CHILD: function (elem, match) {\n                    var first, last,\n\t\t\t\tdoneName, parent, cache,\n\t\t\t\tcount, diff,\n\t\t\t\ttype = match[1],\n\t\t\t\tnode = elem;\n\n                    switch (type) {\n                        case \"only\":\n                        case \"first\":\n                            while ((node = node.previousSibling)) {\n                                if (node.nodeType === 1) {\n                                    return false;\n                                }\n                            }\n\n                            if (type === \"first\") {\n                                return true;\n                            }\n\n                            node = elem;\n\n                            /* falls through */\n                        case \"last\":\n                            while ((node = node.nextSibling)) {\n                                if (node.nodeType === 1) {\n                                    return false;\n                                }\n                            }\n\n                            return true;\n\n                        case \"nth\":\n                            first = match[2];\n                            last = match[3];\n\n                            if (first === 1 && last === 0) {\n                                return true;\n                            }\n\n                            doneName = match[0];\n                            parent = elem.parentNode;\n\n                            if (parent && (parent[expando] !== doneName || !elem.nodeIndex)) {\n                                count = 0;\n\n                                for (node = parent.firstChild; node; node = node.nextSibling) {\n                                    if (node.nodeType === 1) {\n                                        node.nodeIndex = ++count;\n                                    }\n                                }\n\n                                parent[expando] = doneName;\n                            }\n\n                            diff = elem.nodeIndex - last;\n\n                            if (first === 0) {\n                                return diff === 0;\n\n                            } else {\n                                return (diff % first === 0 && diff / first >= 0);\n                            }\n                    }\n                },\n\n                ID: function (elem, match) {\n                    return elem.nodeType === 1 && elem.getAttribute(\"id\") === match;\n                },\n\n                TAG: function (elem, match) {\n                    return (match === \"*\" && elem.nodeType === 1) || !!elem.nodeName && elem.nodeName.toLowerCase() === match;\n                },\n\n                CLASS: function (elem, match) {\n                    return (\" \" + (elem.className || elem.getAttribute(\"class\")) + \" \")\n\t\t\t\t.indexOf(match) > -1;\n                },\n\n                ATTR: function (elem, match) {\n                    var name = match[1],\n\t\t\t\tresult = Sizzle.attr ?\n\t\t\t\t\tSizzle.attr(elem, name) :\n\t\t\t\t\tExpr.attrHandle[name] ?\n\t\t\t\t\tExpr.attrHandle[name](elem) :\n\t\t\t\t\telem[name] != null ?\n\t\t\t\t\t\telem[name] :\n\t\t\t\t\t\telem.getAttribute(name),\n\t\t\t\tvalue = result + \"\",\n\t\t\t\ttype = match[2],\n\t\t\t\tcheck = match[4];\n\n                    return result == null ?\n\t\t\t\ttype === \"!=\" :\n\t\t\t\t!type && Sizzle.attr ?\n\t\t\t\tresult != null :\n\t\t\t\ttype === \"=\" ?\n\t\t\t\tvalue === check :\n\t\t\t\ttype === \"*=\" ?\n\t\t\t\tvalue.indexOf(check) >= 0 :\n\t\t\t\ttype === \"~=\" ?\n\t\t\t\t(\" \" + value + \" \").indexOf(check) >= 0 :\n\t\t\t\t!check ?\n\t\t\t\tvalue && result !== false :\n\t\t\t\ttype === \"!=\" ?\n\t\t\t\tvalue !== check :\n\t\t\t\ttype === \"^=\" ?\n\t\t\t\tvalue.indexOf(check) === 0 :\n\t\t\t\ttype === \"$=\" ?\n\t\t\t\tvalue.substr(value.length - check.length) === check :\n\t\t\t\ttype === \"|=\" ?\n\t\t\t\tvalue === check || value.substr(0, check.length + 1) === check + \"-\" :\n\t\t\t\tfalse;\n                },\n\n                POS: function (elem, match, i, array) {\n                    var name = match[2],\n\t\t\t\tfilter = Expr.setFilters[name];\n\n                    if (filter) {\n                        return filter(elem, i, match, array);\n                    }\n                }\n            }\n        };\n\n        var origPOS = Expr.match.POS,\n\tfescape = function (all, num) {\n\t    return \"\\\\\" + (num - 0 + 1);\n\t};\n\n        for (var type in Expr.match) {\n            Expr.match[type] = new RegExp(Expr.match[type].source + (/(?![^\\[]*\\])(?![^\\(]*\\))/.source));\n            Expr.leftMatch[type] = new RegExp(/(^(?:.|\\r|\\n)*?)/.source + Expr.match[type].source.replace(/\\\\(\\d+)/g, fescape));\n        }\n        // Expose origPOS\n        // \"global\" as in regardless of relation to brackets/parens\n        Expr.match.globalPOS = origPOS;\n\n        var makeArray = function (array, results) {\n            array = Array.prototype.slice.call(array, 0);\n\n            if (results) {\n                results.push.apply(results, array);\n                return results;\n            }\n\n            return array;\n        };\n\n        // Perform a simple check to determine if the browser is capable of\n        // converting a NodeList to an array using builtin methods.\n        // Also verifies that the returned array holds DOM nodes\n        // (which is not the case in the Blackberry browser)\n        try {\n            Array.prototype.slice.call(document.documentElement.childNodes, 0)[0].nodeType;\n\n            // Provide a fallback method if it does not work\n        } catch (e) {\n            makeArray = function (array, results) {\n                var i = 0,\n\t\t\tret = results || [];\n\n                if (toString.call(array) === \"[object Array]\") {\n                    Array.prototype.push.apply(ret, array);\n\n                } else {\n                    if (typeof array.length === \"number\") {\n                        for (var l = array.length; i < l; i++) {\n                            ret.push(array[i]);\n                        }\n\n                    } else {\n                        for (; array[i]; i++) {\n                            ret.push(array[i]);\n                        }\n                    }\n                }\n\n                return ret;\n            };\n        }\n\n        var sortOrder, siblingCheck;\n\n        if (document.documentElement.compareDocumentPosition) {\n            sortOrder = function (a, b) {\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n                }\n\n                if (!a.compareDocumentPosition || !b.compareDocumentPosition) {\n                    return a.compareDocumentPosition ? -1 : 1;\n                }\n\n                return a.compareDocumentPosition(b) & 4 ? -1 : 1;\n            };\n\n        } else {\n            sortOrder = function (a, b) {\n                // The nodes are identical, we can exit early\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n\n                    // Fallback to using sourceIndex (in IE) if it's available on both nodes\n                } else if (a.sourceIndex && b.sourceIndex) {\n                    return a.sourceIndex - b.sourceIndex;\n                }\n\n                var al, bl,\n\t\t\tap = [],\n\t\t\tbp = [],\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tcur = aup;\n\n                // If the nodes are siblings (or identical) we can do a quick check\n                if (aup === bup) {\n                    return siblingCheck(a, b);\n\n                    // If no parents were found then the nodes are disconnected\n                } else if (!aup) {\n                    return -1;\n\n                } else if (!bup) {\n                    return 1;\n                }\n\n                // Otherwise they're somewhere else in the tree so we need\n                // to build up a full list of the parentNodes for comparison\n                while (cur) {\n                    ap.unshift(cur);\n                    cur = cur.parentNode;\n                }\n\n                cur = bup;\n\n                while (cur) {\n                    bp.unshift(cur);\n                    cur = cur.parentNode;\n                }\n\n                al = ap.length;\n                bl = bp.length;\n\n                // Start walking down the tree looking for a discrepancy\n                for (var i = 0; i < al && i < bl; i++) {\n                    if (ap[i] !== bp[i]) {\n                        return siblingCheck(ap[i], bp[i]);\n                    }\n                }\n\n                // We ended someplace up the tree so do a sibling check\n                return i === al ?\n\t\t\tsiblingCheck(a, bp[i], -1) :\n\t\t\tsiblingCheck(ap[i], b, 1);\n            };\n\n            siblingCheck = function (a, b, ret) {\n                if (a === b) {\n                    return ret;\n                }\n\n                var cur = a.nextSibling;\n\n                while (cur) {\n                    if (cur === b) {\n                        return -1;\n                    }\n\n                    cur = cur.nextSibling;\n                }\n\n                return 1;\n            };\n        }\n\n        // Check to see if the browser returns elements by name when\n        // querying by getElementById (and provide a workaround)\n        (function () {\n            // We're going to inject a fake input element with a specified name\n            var form = document.createElement(\"div\"),\n\t\tid = \"script\" + (new Date()).getTime(),\n\t\troot = document.documentElement;\n\n            form.innerHTML = \"<a name='\" + id + \"'/>\";\n\n            // Inject it into the root element, check its status, and remove it quickly\n            root.insertBefore(form, root.firstChild);\n\n            // The workaround has to do additional checks after a getElementById\n            // Which slows things down for other browsers (hence the branching)\n            if (document.getElementById(id)) {\n                Expr.find.ID = function (match, context, isXML) {\n                    if (typeof context.getElementById !== \"undefined\" && !isXML) {\n                        var m = context.getElementById(match[1]);\n\n                        return m ?\n\t\t\t\t\tm.id === match[1] || typeof m.getAttributeNode !== \"undefined\" && m.getAttributeNode(\"id\").nodeValue === match[1] ?\n\t\t\t\t\t\t[m] :\n\t\t\t\t\t\tundefined :\n\t\t\t\t\t[];\n                    }\n                };\n\n                Expr.filter.ID = function (elem, match) {\n                    var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n\n                    return elem.nodeType === 1 && node && node.nodeValue === match;\n                };\n            }\n\n            root.removeChild(form);\n\n            // release memory in IE\n            root = form = null;\n        })();\n\n        (function () {\n            // Check to see if the browser returns only elements\n            // when doing getElementsByTagName(\"*\")\n\n            // Create a fake element\n            var div = document.createElement(\"div\");\n            div.appendChild(document.createComment(\"\"));\n\n            // Make sure no comments are found\n            if (div.getElementsByTagName(\"*\").length > 0) {\n                Expr.find.TAG = function (match, context) {\n                    var results = context.getElementsByTagName(match[1]);\n\n                    // Filter out possible comments\n                    if (match[1] === \"*\") {\n                        var tmp = [];\n\n                        for (var i = 0; results[i]; i++) {\n                            if (results[i].nodeType === 1) {\n                                tmp.push(results[i]);\n                            }\n                        }\n\n                        results = tmp;\n                    }\n\n                    return results;\n                };\n            }\n\n            // Check to see if an attribute returns normalized href attributes\n            div.innerHTML = \"<a href='#'></a>\";\n\n            if (div.firstChild && typeof div.firstChild.getAttribute !== \"undefined\" &&\n\t\t\tdiv.firstChild.getAttribute(\"href\") !== \"#\") {\n\n                Expr.attrHandle.href = function (elem) {\n                    return elem.getAttribute(\"href\", 2);\n                };\n            }\n\n            // release memory in IE\n            div = null;\n        })();\n\n        if (document.querySelectorAll) {\n            (function () {\n                var oldSizzle = Sizzle,\n\t\t\tdiv = document.createElement(\"div\"),\n\t\t\tid = \"__sizzle__\";\n\n                div.innerHTML = \"<p class='TEST'></p>\";\n\n                // Safari can't handle uppercase or unicode characters when\n                // in quirks mode.\n                if (div.querySelectorAll && div.querySelectorAll(\".TEST\").length === 0) {\n                    return;\n                }\n\n                Sizzle = function (query, context, extra, seed) {\n                    context = context || document;\n\n                    // Only use querySelectorAll on non-XML documents\n                    // (ID selectors don't work in non-HTML documents)\n                    if (!seed && !Sizzle.isXML(context)) {\n                        // See if we find a selector to speed up\n                        var match = /^(\\w+$)|^\\.([\\w\\-]+$)|^#([\\w\\-]+$)/.exec(query);\n\n                        if (match && (context.nodeType === 1 || context.nodeType === 9)) {\n                            // Speed-up: Sizzle(\"TAG\")\n                            if (match[1]) {\n                                return makeArray(context.getElementsByTagName(query), extra);\n\n                                // Speed-up: Sizzle(\".CLASS\")\n                            } else if (match[2] && Expr.find.CLASS && context.getElementsByClassName) {\n                                return makeArray(context.getElementsByClassName(match[2]), extra);\n                            }\n                        }\n\n                        if (context.nodeType === 9) {\n                            // Speed-up: Sizzle(\"body\")\n                            // The body element only exists once, optimize finding it\n                            if (query === \"body\" && context.body) {\n                                return makeArray([context.body], extra);\n\n                                // Speed-up: Sizzle(\"#ID\")\n                            } else if (match && match[3]) {\n                                var elem = context.getElementById(match[3]);\n\n                                // Check parentNode to catch when Blackberry 4.6 returns\n                                // nodes that are no longer in the document #6963\n                                if (elem && elem.parentNode) {\n                                    // Handle the case where IE and Opera return items\n                                    // by name instead of ID\n                                    if (elem.id === match[3]) {\n                                        return makeArray([elem], extra);\n                                    }\n\n                                } else {\n                                    return makeArray([], extra);\n                                }\n                            }\n\n                            try {\n                                return makeArray(context.querySelectorAll(query), extra);\n                            } catch (qsaError) { }\n\n                            // qSA works strangely on Element-rooted queries\n                            // We can work around this by specifying an extra ID on the root\n                            // and working up from there (Thanks to Andrew Dupont for the technique)\n                            // IE 8 doesn't work on object elements\n                        } else if (context.nodeType === 1 && context.nodeName.toLowerCase() !== \"object\") {\n                            var oldContext = context,\n\t\t\t\t\t\told = context.getAttribute(\"id\"),\n\t\t\t\t\t\tnid = old || id,\n\t\t\t\t\t\thasParent = context.parentNode,\n\t\t\t\t\t\trelativeHierarchySelector = /^\\s*[+~]/.test(query);\n\n                            if (!old) {\n                                context.setAttribute(\"id\", nid);\n                            } else {\n                                nid = nid.replace(/'/g, \"\\\\$&\");\n                            }\n                            if (relativeHierarchySelector && hasParent) {\n                                context = context.parentNode;\n                            }\n\n                            try {\n                                if (!relativeHierarchySelector || hasParent) {\n                                    return makeArray(context.querySelectorAll(\"[id='\" + nid + \"'] \" + query), extra);\n                                }\n\n                            } catch (pseudoError) {\n                            } finally {\n                                if (!old) {\n                                    oldContext.removeAttribute(\"id\");\n                                }\n                            }\n                        }\n                    }\n\n                    return oldSizzle(query, context, extra, seed);\n                };\n\n                for (var prop in oldSizzle) {\n                    Sizzle[prop] = oldSizzle[prop];\n                }\n\n                // release memory in IE\n                div = null;\n            })();\n        }\n\n        (function () {\n            var html = document.documentElement,\n\t\tmatches = html.matchesSelector || html.mozMatchesSelector || html.webkitMatchesSelector || html.msMatchesSelector;\n\n            if (matches) {\n                // Check to see if it's possible to do matchesSelector\n                // on a disconnected node (IE 9 fails this)\n                var disconnectedMatch = !matches.call(document.createElement(\"div\"), \"div\"),\n\t\t\tpseudoWorks = false;\n\n                try {\n                    // This should fail with an exception\n                    // Gecko does not error, returns false instead\n                    matches.call(document.documentElement, \"[test!='']:sizzle\");\n\n                } catch (pseudoError) {\n                    pseudoWorks = true;\n                }\n\n                Sizzle.matchesSelector = function (node, expr) {\n                    // Make sure that attribute selectors are quoted\n                    expr = expr.replace(/\\=\\s*([^'\"\\]]*)\\s*\\]/g, \"='$1']\");\n\n                    if (!Sizzle.isXML(node)) {\n                        try {\n                            if (pseudoWorks || !Expr.match.PSEUDO.test(expr) && !/!=/.test(expr)) {\n                                var ret = matches.call(node, expr);\n\n                                // IE 9's matchesSelector returns false on disconnected nodes\n                                if (ret || !disconnectedMatch ||\n                                // As well, disconnected nodes are said to be in a document\n                                // fragment in IE 9, so check for that\n\t\t\t\t\t\t\t\tnode.document && node.document.nodeType !== 11) {\n                                    return ret;\n                                }\n                            }\n                        } catch (e) { }\n                    }\n\n                    return Sizzle(expr, null, null, [node]).length > 0;\n                };\n            }\n        })();\n\n        (function () {\n            var div = document.createElement(\"div\");\n\n            div.innerHTML = \"<div class='test e'></div><div class='test'></div>\";\n\n            // Opera can't find a second classname (in 9.6)\n            // Also, make sure that getElementsByClassName actually exists\n            if (!div.getElementsByClassName || div.getElementsByClassName(\"e\").length === 0) {\n                return;\n            }\n\n            // Safari caches class attributes, doesn't catch changes (in 3.2)\n            div.lastChild.className = \"e\";\n\n            if (div.getElementsByClassName(\"e\").length === 1) {\n                return;\n            }\n\n            Expr.order.splice(1, 0, \"CLASS\");\n            Expr.find.CLASS = function (match, context, isXML) {\n                if (typeof context.getElementsByClassName !== \"undefined\" && !isXML) {\n                    return context.getElementsByClassName(match[1]);\n                }\n            };\n\n            // release memory in IE\n            div = null;\n        })();\n\n        function dirNodeCheck(dir, cur, doneName, checkSet, nodeCheck, isXML) {\n            for (var i = 0, l = checkSet.length; i < l; i++) {\n                var elem = checkSet[i];\n\n                if (elem) {\n                    var match = false;\n\n                    elem = elem[dir];\n\n                    while (elem) {\n                        if (elem[expando] === doneName) {\n                            match = checkSet[elem.sizset];\n                            break;\n                        }\n\n                        if (elem.nodeType === 1 && !isXML) {\n                            elem[expando] = doneName;\n                            elem.sizset = i;\n                        }\n\n                        if (elem.nodeName.toLowerCase() === cur) {\n                            match = elem;\n                            break;\n                        }\n\n                        elem = elem[dir];\n                    }\n\n                    checkSet[i] = match;\n                }\n            }\n        }\n\n        function dirCheck(dir, cur, doneName, checkSet, nodeCheck, isXML) {\n            for (var i = 0, l = checkSet.length; i < l; i++) {\n                var elem = checkSet[i];\n\n                if (elem) {\n                    var match = false;\n\n                    elem = elem[dir];\n\n                    while (elem) {\n                        if (elem[expando] === doneName) {\n                            match = checkSet[elem.sizset];\n                            break;\n                        }\n\n                        if (elem.nodeType === 1) {\n                            if (!isXML) {\n                                elem[expando] = doneName;\n                                elem.sizset = i;\n                            }\n\n                            if (typeof cur !== \"string\") {\n                                if (elem === cur) {\n                                    match = true;\n                                    break;\n                                }\n\n                            } else if (Sizzle.filter(cur, [elem]).length > 0) {\n                                match = elem;\n                                break;\n                            }\n                        }\n\n                        elem = elem[dir];\n                    }\n\n                    checkSet[i] = match;\n                }\n            }\n        }\n\n        if (document.documentElement.contains) {\n            Sizzle.contains = function (a, b) {\n                return a !== b && (a.contains ? a.contains(b) : true);\n            };\n\n        } else if (document.documentElement.compareDocumentPosition) {\n            Sizzle.contains = function (a, b) {\n                return !!(a.compareDocumentPosition(b) & 16);\n            };\n\n        } else {\n            Sizzle.contains = function () {\n                return false;\n            };\n        }\n\n        Sizzle.isXML = function (elem) {\n            // documentElement is verified for cases where it doesn't yet exist\n            // (such as loading iframes in IE - #4833)\n            var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;\n\n            return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n        };\n\n        var posProcess = function (selector, context, seed) {\n            var match,\n\t\ttmpSet = [],\n\t\tlater = \"\",\n\t\troot = context.nodeType ? [context] : context;\n\n            // Position selectors must be done after the filter\n            // And so must :not(positional) so we move all PSEUDOs to the end\n            while ((match = Expr.match.PSEUDO.exec(selector))) {\n                later += match[0];\n                selector = selector.replace(Expr.match.PSEUDO, \"\");\n            }\n\n            selector = Expr.relative[selector] ? selector + \"*\" : selector;\n\n            for (var i = 0, l = root.length; i < l; i++) {\n                Sizzle(selector, root[i], tmpSet, seed);\n            }\n\n            return Sizzle.filter(later, tmpSet);\n        };\n\n        // EXPOSE\n        // Override sizzle attribute retrieval\n        Sizzle.attr = jQuery.attr;\n        Sizzle.selectors.attrMap = {};\n        jQuery.find = Sizzle;\n        jQuery.expr = Sizzle.selectors;\n        jQuery.expr[\":\"] = jQuery.expr.filters;\n        jQuery.unique = Sizzle.uniqueSort;\n        jQuery.text = Sizzle.getText;\n        jQuery.isXMLDoc = Sizzle.isXML;\n        jQuery.contains = Sizzle.contains;\n\n\n    })();\n\n\n    var runtil = /Until$/,\n\trparentsprev = /^(?:parents|prevUntil|prevAll)/,\n    // Note: This RegExp should be improved, or likely pulled from Sizzle\n\trmultiselector = /,/,\n\tisSimple = /^.[^:#\\[\\.,]*$/,\n\tslice = Array.prototype.slice,\n\tPOS = jQuery.expr.match.globalPOS,\n    // methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t    children: true,\n\t    contents: true,\n\t    next: true,\n\t    prev: true\n\t};\n\n    jQuery.fn.extend({\n        find: function (selector) {\n            var self = this,\n\t\t\ti, l;\n\n            if (typeof selector !== \"string\") {\n                return jQuery(selector).filter(function () {\n                    for (i = 0, l = self.length; i < l; i++) {\n                        if (jQuery.contains(self[i], this)) {\n                            return true;\n                        }\n                    }\n                });\n            }\n\n            var ret = this.pushStack(\"\", \"find\", selector),\n\t\t\tlength, n, r;\n\n            for (i = 0, l = this.length; i < l; i++) {\n                length = ret.length;\n                jQuery.find(selector, this[i], ret);\n\n                if (i > 0) {\n                    // Make sure that the results are unique\n                    for (n = length; n < ret.length; n++) {\n                        for (r = 0; r < length; r++) {\n                            if (ret[r] === ret[n]) {\n                                ret.splice(n--, 1);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return ret;\n        },\n\n        has: function (target) {\n            var targets = jQuery(target);\n            return this.filter(function () {\n                for (var i = 0, l = targets.length; i < l; i++) {\n                    if (jQuery.contains(this, targets[i])) {\n                        return true;\n                    }\n                }\n            });\n        },\n\n        not: function (selector) {\n            return this.pushStack(winnow(this, selector, false), \"not\", selector);\n        },\n\n        filter: function (selector) {\n            return this.pushStack(winnow(this, selector, true), \"filter\", selector);\n        },\n\n        is: function (selector) {\n            return !!selector && (\n\t\t\ttypeof selector === \"string\" ?\n            // If this is a positional selector, check membership in the returned set\n            // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\t\tPOS.test(selector) ?\n\t\t\t\t\tjQuery(selector, this.context).index(this[0]) >= 0 :\n\t\t\t\t\tjQuery.filter(selector, this).length > 0 :\n\t\t\t\tthis.filter(selector).length > 0);\n        },\n\n        closest: function (selectors, context) {\n            var ret = [], i, l, cur = this[0];\n\n            // Array (deprecated as of jQuery 1.7)\n            if (jQuery.isArray(selectors)) {\n                var level = 1;\n\n                while (cur && cur.ownerDocument && cur !== context) {\n                    for (i = 0; i < selectors.length; i++) {\n\n                        if (jQuery(cur).is(selectors[i])) {\n                            ret.push({ selector: selectors[i], elem: cur, level: level });\n                        }\n                    }\n\n                    cur = cur.parentNode;\n                    level++;\n                }\n\n                return ret;\n            }\n\n            // String\n            var pos = POS.test(selectors) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery(selectors, context || this.context) :\n\t\t\t\t0;\n\n            for (i = 0, l = this.length; i < l; i++) {\n                cur = this[i];\n\n                while (cur) {\n                    if (pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors)) {\n                        ret.push(cur);\n                        break;\n\n                    } else {\n                        cur = cur.parentNode;\n                        if (!cur || !cur.ownerDocument || cur === context || cur.nodeType === 11) {\n                            break;\n                        }\n                    }\n                }\n            }\n\n            ret = ret.length > 1 ? jQuery.unique(ret) : ret;\n\n            return this.pushStack(ret, \"closest\", selectors);\n        },\n\n        // Determine the position of an element within\n        // the matched set of elements\n        index: function (elem) {\n\n            // No argument, return index in parent\n            if (!elem) {\n                return (this[0] && this[0].parentNode) ? this.prevAll().length : -1;\n            }\n\n            // index in selector\n            if (typeof elem === \"string\") {\n                return jQuery.inArray(this[0], jQuery(elem));\n            }\n\n            // Locate the position of the desired element\n            return jQuery.inArray(\n            // If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[0] : elem, this);\n        },\n\n        add: function (selector, context) {\n            var set = typeof selector === \"string\" ?\n\t\t\t\tjQuery(selector, context) :\n\t\t\t\tjQuery.makeArray(selector && selector.nodeType ? [selector] : selector),\n\t\t\tall = jQuery.merge(this.get(), set);\n\n            return this.pushStack(isDisconnected(set[0]) || isDisconnected(all[0]) ?\n\t\t\tall :\n\t\t\tjQuery.unique(all));\n        },\n\n        andSelf: function () {\n            return this.add(this.prevObject);\n        }\n    });\n\n    // A painfully simple check to see if an element is disconnected\n    // from a document (should be improved, where feasible).\n    function isDisconnected(node) {\n        return !node || !node.parentNode || node.parentNode.nodeType === 11;\n    }\n\n    jQuery.each({\n        parent: function (elem) {\n            var parent = elem.parentNode;\n            return parent && parent.nodeType !== 11 ? parent : null;\n        },\n        parents: function (elem) {\n            return jQuery.dir(elem, \"parentNode\");\n        },\n        parentsUntil: function (elem, i, until) {\n            return jQuery.dir(elem, \"parentNode\", until);\n        },\n        next: function (elem) {\n            return jQuery.nth(elem, 2, \"nextSibling\");\n        },\n        prev: function (elem) {\n            return jQuery.nth(elem, 2, \"previousSibling\");\n        },\n        nextAll: function (elem) {\n            return jQuery.dir(elem, \"nextSibling\");\n        },\n        prevAll: function (elem) {\n            return jQuery.dir(elem, \"previousSibling\");\n        },\n        nextUntil: function (elem, i, until) {\n            return jQuery.dir(elem, \"nextSibling\", until);\n        },\n        prevUntil: function (elem, i, until) {\n            return jQuery.dir(elem, \"previousSibling\", until);\n        },\n        siblings: function (elem) {\n            return jQuery.sibling((elem.parentNode || {}).firstChild, elem);\n        },\n        children: function (elem) {\n            return jQuery.sibling(elem.firstChild);\n        },\n        contents: function (elem) {\n            return jQuery.nodeName(elem, \"iframe\") ?\n\t\t\telem.contentDocument || elem.contentWindow.document :\n\t\t\tjQuery.makeArray(elem.childNodes);\n        }\n    }, function (name, fn) {\n        jQuery.fn[name] = function (until, selector) {\n            var ret = jQuery.map(this, fn, until);\n\n            if (!runtil.test(name)) {\n                selector = until;\n            }\n\n            if (selector && typeof selector === \"string\") {\n                ret = jQuery.filter(selector, ret);\n            }\n\n            ret = this.length > 1 && !guaranteedUnique[name] ? jQuery.unique(ret) : ret;\n\n            if ((this.length > 1 || rmultiselector.test(selector)) && rparentsprev.test(name)) {\n                ret = ret.reverse();\n            }\n\n            return this.pushStack(ret, name, slice.call(arguments).join(\",\"));\n        };\n    });\n\n    jQuery.extend({\n        filter: function (expr, elems, not) {\n            if (not) {\n                expr = \":not(\" + expr + \")\";\n            }\n\n            return elems.length === 1 ?\n\t\t\tjQuery.find.matchesSelector(elems[0], expr) ? [elems[0]] : [] :\n\t\t\tjQuery.find.matches(expr, elems);\n        },\n\n        dir: function (elem, dir, until) {\n            var matched = [],\n\t\t\tcur = elem[dir];\n\n            while (cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery(cur).is(until))) {\n                if (cur.nodeType === 1) {\n                    matched.push(cur);\n                }\n                cur = cur[dir];\n            }\n            return matched;\n        },\n\n        nth: function (cur, result, dir, elem) {\n            result = result || 1;\n            var num = 0;\n\n            for (; cur; cur = cur[dir]) {\n                if (cur.nodeType === 1 && ++num === result) {\n                    break;\n                }\n            }\n\n            return cur;\n        },\n\n        sibling: function (n, elem) {\n            var r = [];\n\n            for (; n; n = n.nextSibling) {\n                if (n.nodeType === 1 && n !== elem) {\n                    r.push(n);\n                }\n            }\n\n            return r;\n        }\n    });\n\n    // Implement the identical functionality for filter and not\n    function winnow(elements, qualifier, keep) {\n\n        // Can't pass null or undefined to indexOf in Firefox 4\n        // Set to 0 to skip string check\n        qualifier = qualifier || 0;\n\n        if (jQuery.isFunction(qualifier)) {\n            return jQuery.grep(elements, function (elem, i) {\n                var retVal = !!qualifier.call(elem, i, elem);\n                return retVal === keep;\n            });\n\n        } else if (qualifier.nodeType) {\n            return jQuery.grep(elements, function (elem, i) {\n                return (elem === qualifier) === keep;\n            });\n\n        } else if (typeof qualifier === \"string\") {\n            var filtered = jQuery.grep(elements, function (elem) {\n                return elem.nodeType === 1;\n            });\n\n            if (isSimple.test(qualifier)) {\n                return jQuery.filter(qualifier, filtered, !keep);\n            } else {\n                qualifier = jQuery.filter(qualifier, filtered);\n            }\n        }\n\n        return jQuery.grep(elements, function (elem, i) {\n            return (jQuery.inArray(elem, qualifier) >= 0) === keep;\n        });\n    }\n\n\n\n\n    function createSafeFragment(document) {\n        var list = nodeNames.split(\"|\"),\n\tsafeFrag = document.createDocumentFragment();\n\n        if (safeFrag.createElement) {\n            while (list.length) {\n                safeFrag.createElement(\n\t\t\t\tlist.pop()\n\t\t\t);\n            }\n        }\n        return safeFrag;\n    }\n\n    var nodeNames = \"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|\" +\n\t\t\"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",\n\trinlinejQuery = / jQuery\\d+=\"(?:\\d+|null)\"/g,\n\trleadingWhitespace = /^\\s+/,\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n\trtagName = /<([\\w:]+)/,\n\trtbody = /<tbody/i,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style)/i,\n\trnocache = /<(?:script|object|embed|option|style)/i,\n\trnoshimcache = new RegExp(\"<(?:\" + nodeNames + \")[\\\\s/>]\", \"i\"),\n    // checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /\\/(java|ecma)script/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|\\-\\-)/,\n\twrapMap = {\n\t    option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n\t    legend: [1, \"<fieldset>\", \"</fieldset>\"],\n\t    thead: [1, \"<table>\", \"</table>\"],\n\t    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n\t    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n\t    col: [2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\"],\n\t    area: [1, \"<map>\", \"</map>\"],\n\t    _default: [0, \"\", \"\"]\n\t},\n\tsafeFragment = createSafeFragment(document);\n\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n\n    // IE can't serialize <link> and <script> tags normally\n    if (!jQuery.support.htmlSerialize) {\n        wrapMap._default = [1, \"div<div>\", \"</div>\"];\n    }\n\n    jQuery.fn.extend({\n        text: function (value) {\n            return jQuery.access(this, function (value) {\n                return value === undefined ?\n\t\t\t\tjQuery.text(this) :\n\t\t\t\tthis.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value));\n            }, null, value, arguments.length);\n        },\n\n        wrapAll: function (html) {\n            if (jQuery.isFunction(html)) {\n                return this.each(function (i) {\n                    jQuery(this).wrapAll(html.call(this, i));\n                });\n            }\n\n            if (this[0]) {\n                // The elements to wrap the target around\n                var wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n                if (this[0].parentNode) {\n                    wrap.insertBefore(this[0]);\n                }\n\n                wrap.map(function () {\n                    var elem = this;\n\n                    while (elem.firstChild && elem.firstChild.nodeType === 1) {\n                        elem = elem.firstChild;\n                    }\n\n                    return elem;\n                }).append(this);\n            }\n\n            return this;\n        },\n\n        wrapInner: function (html) {\n            if (jQuery.isFunction(html)) {\n                return this.each(function (i) {\n                    jQuery(this).wrapInner(html.call(this, i));\n                });\n            }\n\n            return this.each(function () {\n                var self = jQuery(this),\n\t\t\t\tcontents = self.contents();\n\n                if (contents.length) {\n                    contents.wrapAll(html);\n\n                } else {\n                    self.append(html);\n                }\n            });\n        },\n\n        wrap: function (html) {\n            var isFunction = jQuery.isFunction(html);\n\n            return this.each(function (i) {\n                jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n            });\n        },\n\n        unwrap: function () {\n            return this.parent().each(function () {\n                if (!jQuery.nodeName(this, \"body\")) {\n                    jQuery(this).replaceWith(this.childNodes);\n                }\n            }).end();\n        },\n\n        append: function () {\n            return this.domManip(arguments, true, function (elem) {\n                if (this.nodeType === 1) {\n                    this.appendChild(elem);\n                }\n            });\n        },\n\n        prepend: function () {\n            return this.domManip(arguments, true, function (elem) {\n                if (this.nodeType === 1) {\n                    this.insertBefore(elem, this.firstChild);\n                }\n            });\n        },\n\n        before: function () {\n            if (this[0] && this[0].parentNode) {\n                return this.domManip(arguments, false, function (elem) {\n                    this.parentNode.insertBefore(elem, this);\n                });\n            } else if (arguments.length) {\n                var set = jQuery.clean(arguments);\n                set.push.apply(set, this.toArray());\n                return this.pushStack(set, \"before\", arguments);\n            }\n        },\n\n        after: function () {\n            if (this[0] && this[0].parentNode) {\n                return this.domManip(arguments, false, function (elem) {\n                    this.parentNode.insertBefore(elem, this.nextSibling);\n                });\n            } else if (arguments.length) {\n                var set = this.pushStack(this, \"after\", arguments);\n                set.push.apply(set, jQuery.clean(arguments));\n                return set;\n            }\n        },\n\n        // keepData is for internal use only--do not document\n        remove: function (selector, keepData) {\n            for (var i = 0, elem; (elem = this[i]) != null; i++) {\n                if (!selector || jQuery.filter(selector, [elem]).length) {\n                    if (!keepData && elem.nodeType === 1) {\n                        jQuery.cleanData(elem.getElementsByTagName(\"*\"));\n                        jQuery.cleanData([elem]);\n                    }\n\n                    if (elem.parentNode) {\n                        elem.parentNode.removeChild(elem);\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        empty: function () {\n            for (var i = 0, elem; (elem = this[i]) != null; i++) {\n                // Remove element nodes and prevent memory leaks\n                if (elem.nodeType === 1) {\n                    jQuery.cleanData(elem.getElementsByTagName(\"*\"));\n                }\n\n                // Remove any remaining nodes\n                while (elem.firstChild) {\n                    elem.removeChild(elem.firstChild);\n                }\n            }\n\n            return this;\n        },\n\n        clone: function (dataAndEvents, deepDataAndEvents) {\n            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n            return this.map(function () {\n                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n            });\n        },\n\n        html: function (value) {\n            return jQuery.access(this, function (value) {\n                var elem = this[0] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n                if (value === undefined) {\n                    return elem.nodeType === 1 ?\n\t\t\t\t\telem.innerHTML.replace(rinlinejQuery, \"\") :\n\t\t\t\t\tnull;\n                }\n\n\n                if (typeof value === \"string\" && !rnoInnerhtml.test(value) &&\n\t\t\t\t(jQuery.support.leadingWhitespace || !rleadingWhitespace.test(value)) &&\n\t\t\t\t!wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n\n                    value = value.replace(rxhtmlTag, \"<$1></$2>\");\n\n                    try {\n                        for (; i < l; i++) {\n                            // Remove element nodes and prevent memory leaks\n                            elem = this[i] || {};\n                            if (elem.nodeType === 1) {\n                                jQuery.cleanData(elem.getElementsByTagName(\"*\"));\n                                elem.innerHTML = value;\n                            }\n                        }\n\n                        elem = 0;\n\n                        // If using innerHTML throws an exception, use the fallback method\n                    } catch (e) { }\n                }\n\n                if (elem) {\n                    this.empty().append(value);\n                }\n            }, null, value, arguments.length);\n        },\n\n        replaceWith: function (value) {\n            if (this[0] && this[0].parentNode) {\n                // Make sure that the elements are removed from the DOM before they are inserted\n                // this can help fix replacing a parent with child elements\n                if (jQuery.isFunction(value)) {\n                    return this.each(function (i) {\n                        var self = jQuery(this), old = self.html();\n                        self.replaceWith(value.call(this, i, old));\n                    });\n                }\n\n                if (typeof value !== \"string\") {\n                    value = jQuery(value).detach();\n                }\n\n                return this.each(function () {\n                    var next = this.nextSibling,\n\t\t\t\t\tparent = this.parentNode;\n\n                    jQuery(this).remove();\n\n                    if (next) {\n                        jQuery(next).before(value);\n                    } else {\n                        jQuery(parent).append(value);\n                    }\n                });\n            } else {\n                return this.length ?\n\t\t\t\tthis.pushStack(jQuery(jQuery.isFunction(value) ? value() : value), \"replaceWith\", value) :\n\t\t\t\tthis;\n            }\n        },\n\n        detach: function (selector) {\n            return this.remove(selector, true);\n        },\n\n        domManip: function (args, table, callback) {\n            var results, first, fragment, parent,\n\t\t\tvalue = args[0],\n\t\t\tscripts = [];\n\n            // We can't cloneNode fragments that contain checked, in WebKit\n            if (!jQuery.support.checkClone && arguments.length === 3 && typeof value === \"string\" && rchecked.test(value)) {\n                return this.each(function () {\n                    jQuery(this).domManip(args, table, callback, true);\n                });\n            }\n\n            if (jQuery.isFunction(value)) {\n                return this.each(function (i) {\n                    var self = jQuery(this);\n                    args[0] = value.call(this, i, table ? self.html() : undefined);\n                    self.domManip(args, table, callback);\n                });\n            }\n\n            if (this[0]) {\n                parent = value && value.parentNode;\n\n                // If we're in a fragment, just use that instead of building a new one\n                if (jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length) {\n                    results = { fragment: parent };\n\n                } else {\n                    results = jQuery.buildFragment(args, this, scripts);\n                }\n\n                fragment = results.fragment;\n\n                if (fragment.childNodes.length === 1) {\n                    first = fragment = fragment.firstChild;\n                } else {\n                    first = fragment.firstChild;\n                }\n\n                if (first) {\n                    table = table && jQuery.nodeName(first, \"tr\");\n\n                    for (var i = 0, l = this.length, lastIndex = l - 1; i < l; i++) {\n                        callback.call(\n\t\t\t\t\t\ttable ?\n\t\t\t\t\t\t\troot(this[i], first) :\n\t\t\t\t\t\t\tthis[i],\n                        // Make sure that we do not leak memory by inadvertently discarding\n                        // the original fragment (which might have attached data) instead of\n                        // using it; in addition, use the original fragment object for the last\n                        // item instead of first because it can end up being emptied incorrectly\n                        // in certain situations (Bug #8070).\n                        // Fragments from the fragment cache must always be cloned and never used\n                        // in place.\n\t\t\t\t\t\tresults.cacheable || (l > 1 && i < lastIndex) ?\n\t\t\t\t\t\t\tjQuery.clone(fragment, true, true) :\n\t\t\t\t\t\t\tfragment\n\t\t\t\t\t);\n                    }\n                }\n\n                if (scripts.length) {\n                    jQuery.each(scripts, function (i, elem) {\n                        if (elem.src) {\n                            jQuery.ajax({\n                                type: \"GET\",\n                                global: false,\n                                url: elem.src,\n                                async: false,\n                                dataType: \"script\"\n                            });\n                        } else {\n                            jQuery.globalEval((elem.text || elem.textContent || elem.innerHTML || \"\").replace(rcleanScript, \"/*$0*/\"));\n                        }\n\n                        if (elem.parentNode) {\n                            elem.parentNode.removeChild(elem);\n                        }\n                    });\n                }\n            }\n\n            return this;\n        }\n    });\n\n    function root(elem, cur) {\n        return jQuery.nodeName(elem, \"table\") ?\n\t\t(elem.getElementsByTagName(\"tbody\")[0] ||\n\t\telem.appendChild(elem.ownerDocument.createElement(\"tbody\"))) :\n\t\telem;\n    }\n\n    function cloneCopyEvent(src, dest) {\n\n        if (dest.nodeType !== 1 || !jQuery.hasData(src)) {\n            return;\n        }\n\n        var type, i, l,\n\t\toldData = jQuery._data(src),\n\t\tcurData = jQuery._data(dest, oldData),\n\t\tevents = oldData.events;\n\n        if (events) {\n            delete curData.handle;\n            curData.events = {};\n\n            for (type in events) {\n                for (i = 0, l = events[type].length; i < l; i++) {\n                    jQuery.event.add(dest, type, events[type][i]);\n                }\n            }\n        }\n\n        // make the cloned public data object a copy from the original\n        if (curData.data) {\n            curData.data = jQuery.extend({}, curData.data);\n        }\n    }\n\n    function cloneFixAttributes(src, dest) {\n        var nodeName;\n\n        // We do not need to do anything for non-Elements\n        if (dest.nodeType !== 1) {\n            return;\n        }\n\n        // clearAttributes removes the attributes, which we don't want,\n        // but also removes the attachEvent events, which we *do* want\n        if (dest.clearAttributes) {\n            dest.clearAttributes();\n        }\n\n        // mergeAttributes, in contrast, only merges back on the\n        // original attributes, not the events\n        if (dest.mergeAttributes) {\n            dest.mergeAttributes(src);\n        }\n\n        nodeName = dest.nodeName.toLowerCase();\n\n        // IE6-8 fail to clone children inside object elements that use\n        // the proprietary classid attribute value (rather than the type\n        // attribute) to identify the type of content to display\n        if (nodeName === \"object\") {\n            dest.outerHTML = src.outerHTML;\n\n        } else if (nodeName === \"input\" && (src.type === \"checkbox\" || src.type === \"radio\")) {\n            // IE6-8 fails to persist the checked state of a cloned checkbox\n            // or radio button. Worse, IE6-7 fail to give the cloned element\n            // a checked appearance if the defaultChecked value isn't also set\n            if (src.checked) {\n                dest.defaultChecked = dest.checked = src.checked;\n            }\n\n            // IE6-7 get confused and end up setting the value of a cloned\n            // checkbox/radio button to an empty string instead of \"on\"\n            if (dest.value !== src.value) {\n                dest.value = src.value;\n            }\n\n            // IE6-8 fails to return the selected option to the default selected\n            // state when cloning options\n        } else if (nodeName === \"option\") {\n            dest.selected = src.defaultSelected;\n\n            // IE6-8 fails to set the defaultValue to the correct value when\n            // cloning other types of input fields\n        } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n            dest.defaultValue = src.defaultValue;\n\n            // IE blanks contents when cloning scripts\n        } else if (nodeName === \"script\" && dest.text !== src.text) {\n            dest.text = src.text;\n        }\n\n        // Event data gets referenced instead of copied if the expando\n        // gets copied too\n        dest.removeAttribute(jQuery.expando);\n\n        // Clear flags for bubbling special change/submit events, they must\n        // be reattached when the newly cloned events are first activated\n        dest.removeAttribute(\"_submit_attached\");\n        dest.removeAttribute(\"_change_attached\");\n    }\n\n    jQuery.buildFragment = function (args, nodes, scripts) {\n        var fragment, cacheable, cacheresults, doc,\n\tfirst = args[0];\n\n        // nodes may contain either an explicit document object,\n        // a jQuery collection or context object.\n        // If nodes[0] contains a valid object to assign to doc\n        if (nodes && nodes[0]) {\n            doc = nodes[0].ownerDocument || nodes[0];\n        }\n\n        // Ensure that an attr object doesn't incorrectly stand in as a document object\n        // Chrome and Firefox seem to allow this to occur and will throw exception\n        // Fixes #8950\n        if (!doc.createDocumentFragment) {\n            doc = document;\n        }\n\n        // Only cache \"small\" (1/2 KB) HTML strings that are associated with the main document\n        // Cloning options loses the selected state, so don't cache them\n        // IE 6 doesn't like it when you put <object> or <embed> elements in a fragment\n        // Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache\n        // Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501\n        if (args.length === 1 && typeof first === \"string\" && first.length < 512 && doc === document &&\n\t\tfirst.charAt(0) === \"<\" && !rnocache.test(first) &&\n\t\t(jQuery.support.checkClone || !rchecked.test(first)) &&\n\t\t(jQuery.support.html5Clone || !rnoshimcache.test(first))) {\n\n            cacheable = true;\n\n            cacheresults = jQuery.fragments[first];\n            if (cacheresults && cacheresults !== 1) {\n                fragment = cacheresults;\n            }\n        }\n\n        if (!fragment) {\n            fragment = doc.createDocumentFragment();\n            jQuery.clean(args, doc, fragment, scripts);\n        }\n\n        if (cacheable) {\n            jQuery.fragments[first] = cacheresults ? fragment : 1;\n        }\n\n        return { fragment: fragment, cacheable: cacheable };\n    };\n\n    jQuery.fragments = {};\n\n    jQuery.each({\n        appendTo: \"append\",\n        prependTo: \"prepend\",\n        insertBefore: \"before\",\n        insertAfter: \"after\",\n        replaceAll: \"replaceWith\"\n    }, function (name, original) {\n        jQuery.fn[name] = function (selector) {\n            var ret = [],\n\t\t\tinsert = jQuery(selector),\n\t\t\tparent = this.length === 1 && this[0].parentNode;\n\n            if (parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1) {\n                insert[original](this[0]);\n                return this;\n\n            } else {\n                for (var i = 0, l = insert.length; i < l; i++) {\n                    var elems = (i > 0 ? this.clone(true) : this).get();\n                    jQuery(insert[i])[original](elems);\n                    ret = ret.concat(elems);\n                }\n\n                return this.pushStack(ret, name, insert.selector);\n            }\n        };\n    });\n\n    function getAll(elem) {\n        if (typeof elem.getElementsByTagName !== \"undefined\") {\n            return elem.getElementsByTagName(\"*\");\n\n        } else if (typeof elem.querySelectorAll !== \"undefined\") {\n            return elem.querySelectorAll(\"*\");\n\n        } else {\n            return [];\n        }\n    }\n\n    // Used in clean, fixes the defaultChecked property\n    function fixDefaultChecked(elem) {\n        if (elem.type === \"checkbox\" || elem.type === \"radio\") {\n            elem.defaultChecked = elem.checked;\n        }\n    }\n    // Finds all inputs and passes them to fixDefaultChecked\n    function findInputs(elem) {\n        var nodeName = (elem.nodeName || \"\").toLowerCase();\n        if (nodeName === \"input\") {\n            fixDefaultChecked(elem);\n            // Skip scripts, get other children\n        } else if (nodeName !== \"script\" && typeof elem.getElementsByTagName !== \"undefined\") {\n            jQuery.grep(elem.getElementsByTagName(\"input\"), fixDefaultChecked);\n        }\n    }\n\n    // Derived From: http://www.iecss.com/shimprove/javascript/shimprove.1-0-1.js\n    function shimCloneNode(elem) {\n        var div = document.createElement(\"div\");\n        safeFragment.appendChild(div);\n\n        div.innerHTML = elem.outerHTML;\n        return div.firstChild;\n    }\n\n    jQuery.extend({\n        clone: function (elem, dataAndEvents, deepDataAndEvents) {\n            var srcElements,\n\t\t\tdestElements,\n\t\t\ti,\n            // IE<=8 does not properly clone detached, unknown element nodes\n\t\t\tclone = jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test(\"<\" + elem.nodeName + \">\") ?\n\t\t\t\telem.cloneNode(true) :\n\t\t\t\tshimCloneNode(elem);\n\n            if ((!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&\n\t\t\t\t(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n                // IE copies events bound via attachEvent when using cloneNode.\n                // Calling detachEvent on the clone will also remove the events\n                // from the original. In order to get around this, we use some\n                // proprietary methods to clear the events. Thanks to MooTools\n                // guys for this hotness.\n\n                cloneFixAttributes(elem, clone);\n\n                // Using Sizzle here is crazy slow, so we use getElementsByTagName instead\n                srcElements = getAll(elem);\n                destElements = getAll(clone);\n\n                // Weird iteration because IE will replace the length property\n                // with an element if you are cloning the body and one of the\n                // elements on the page has a name or id of \"length\"\n                for (i = 0; srcElements[i]; ++i) {\n                    // Ensure that the destination node is not null; Fixes #9587\n                    if (destElements[i]) {\n                        cloneFixAttributes(srcElements[i], destElements[i]);\n                    }\n                }\n            }\n\n            // Copy the events from the original to the clone\n            if (dataAndEvents) {\n                cloneCopyEvent(elem, clone);\n\n                if (deepDataAndEvents) {\n                    srcElements = getAll(elem);\n                    destElements = getAll(clone);\n\n                    for (i = 0; srcElements[i]; ++i) {\n                        cloneCopyEvent(srcElements[i], destElements[i]);\n                    }\n                }\n            }\n\n            srcElements = destElements = null;\n\n            // Return the cloned set\n            return clone;\n        },\n\n        clean: function (elems, context, fragment, scripts) {\n            var checkScriptType, script, j,\n\t\t\t\tret = [];\n\n            context = context || document;\n\n            // !context.createElement fails in IE with an error but returns typeof 'object'\n            if (typeof context.createElement === \"undefined\") {\n                context = context.ownerDocument || context[0] && context[0].ownerDocument || document;\n            }\n\n            for (var i = 0, elem; (elem = elems[i]) != null; i++) {\n                if (typeof elem === \"number\") {\n                    elem += \"\";\n                }\n\n                if (!elem) {\n                    continue;\n                }\n\n                // Convert html string into DOM nodes\n                if (typeof elem === \"string\") {\n                    if (!rhtml.test(elem)) {\n                        elem = context.createTextNode(elem);\n                    } else {\n                        // Fix \"XHTML\"-style tags in all browsers\n                        elem = elem.replace(rxhtmlTag, \"<$1></$2>\");\n\n                        // Trim whitespace, otherwise indexOf won't work as expected\n                        var tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase(),\n\t\t\t\t\t\twrap = wrapMap[tag] || wrapMap._default,\n\t\t\t\t\t\tdepth = wrap[0],\n\t\t\t\t\t\tdiv = context.createElement(\"div\"),\n\t\t\t\t\t\tsafeChildNodes = safeFragment.childNodes,\n\t\t\t\t\t\tremove;\n\n                        // Append wrapper element to unknown element safe doc fragment\n                        if (context === document) {\n                            // Use the fragment we've already created for this document\n                            safeFragment.appendChild(div);\n                        } else {\n                            // Use a fragment created with the owner document\n                            createSafeFragment(context).appendChild(div);\n                        }\n\n                        // Go to html and back, then peel off extra wrappers\n                        div.innerHTML = wrap[1] + elem + wrap[2];\n\n                        // Move to the right depth\n                        while (depth--) {\n                            div = div.lastChild;\n                        }\n\n                        // Remove IE's autoinserted <tbody> from table fragments\n                        if (!jQuery.support.tbody) {\n\n                            // String was a <table>, *may* have spurious <tbody>\n                            var hasBody = rtbody.test(elem),\n\t\t\t\t\t\t\ttbody = tag === \"table\" && !hasBody ?\n\t\t\t\t\t\t\t\tdiv.firstChild && div.firstChild.childNodes :\n\n                            // String was a bare <thead> or <tfoot>\n\t\t\t\t\t\t\t\twrap[1] === \"<table>\" && !hasBody ?\n\t\t\t\t\t\t\t\t\tdiv.childNodes :\n\t\t\t\t\t\t\t\t\t[];\n\n                            for (j = tbody.length - 1; j >= 0; --j) {\n                                if (jQuery.nodeName(tbody[j], \"tbody\") && !tbody[j].childNodes.length) {\n                                    tbody[j].parentNode.removeChild(tbody[j]);\n                                }\n                            }\n                        }\n\n                        // IE completely kills leading whitespace when innerHTML is used\n                        if (!jQuery.support.leadingWhitespace && rleadingWhitespace.test(elem)) {\n                            div.insertBefore(context.createTextNode(rleadingWhitespace.exec(elem)[0]), div.firstChild);\n                        }\n\n                        elem = div.childNodes;\n\n                        // Clear elements from DocumentFragment (safeFragment or otherwise)\n                        // to avoid hoarding elements. Fixes #11356\n                        if (div) {\n                            div.parentNode.removeChild(div);\n\n                            // Guard against -1 index exceptions in FF3.6\n                            if (safeChildNodes.length > 0) {\n                                remove = safeChildNodes[safeChildNodes.length - 1];\n\n                                if (remove && remove.parentNode) {\n                                    remove.parentNode.removeChild(remove);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Resets defaultChecked for any radios and checkboxes\n                // about to be appended to the DOM in IE 6/7 (#8060)\n                var len;\n                if (!jQuery.support.appendChecked) {\n                    if (elem[0] && typeof (len = elem.length) === \"number\") {\n                        for (j = 0; j < len; j++) {\n                            findInputs(elem[j]);\n                        }\n                    } else {\n                        findInputs(elem);\n                    }\n                }\n\n                if (elem.nodeType) {\n                    ret.push(elem);\n                } else {\n                    ret = jQuery.merge(ret, elem);\n                }\n            }\n\n            if (fragment) {\n                checkScriptType = function (elem) {\n                    return !elem.type || rscriptType.test(elem.type);\n                };\n                for (i = 0; ret[i]; i++) {\n                    script = ret[i];\n                    if (scripts && jQuery.nodeName(script, \"script\") && (!script.type || rscriptType.test(script.type))) {\n                        scripts.push(script.parentNode ? script.parentNode.removeChild(script) : script);\n\n                    } else {\n                        if (script.nodeType === 1) {\n                            var jsTags = jQuery.grep(script.getElementsByTagName(\"script\"), checkScriptType);\n\n                            ret.splice.apply(ret, [i + 1, 0].concat(jsTags));\n                        }\n                        fragment.appendChild(script);\n                    }\n                }\n            }\n\n            return ret;\n        },\n\n        cleanData: function (elems) {\n            var data, id,\n\t\t\tcache = jQuery.cache,\n\t\t\tspecial = jQuery.event.special,\n\t\t\tdeleteExpando = jQuery.support.deleteExpando;\n\n            for (var i = 0, elem; (elem = elems[i]) != null; i++) {\n                if (elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()]) {\n                    continue;\n                }\n\n                id = elem[jQuery.expando];\n\n                if (id) {\n                    data = cache[id];\n\n                    if (data && data.events) {\n                        for (var type in data.events) {\n                            if (special[type]) {\n                                jQuery.event.remove(elem, type);\n\n                                // This is a shortcut to avoid jQuery.event.remove's overhead\n                            } else {\n                                jQuery.removeEvent(elem, type, data.handle);\n                            }\n                        }\n\n                        // Null the DOM reference to avoid IE6/7/8 leak (#7054)\n                        if (data.handle) {\n                            data.handle.elem = null;\n                        }\n                    }\n\n                    if (deleteExpando) {\n                        delete elem[jQuery.expando];\n\n                    } else if (elem.removeAttribute) {\n                        elem.removeAttribute(jQuery.expando);\n                    }\n\n                    delete cache[id];\n                }\n            }\n        }\n    });\n\n\n\n\n    var ralpha = /alpha\\([^)]*\\)/i,\n\tropacity = /opacity=([^)]*)/,\n    // fixed for IE9, see #8346\n\trupper = /([A-Z]|^ms)/g,\n\trnum = /^[\\-+]?(?:\\d*\\.)?\\d+$/i,\n\trnumnonpx = /^-?(?:\\d*\\.)?\\d+(?!px)[^\\d\\s]+$/i,\n\trrelNum = /^([\\-+])=([\\-+.\\de]+)/,\n\trmargin = /^margin/,\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\n    // order is important!\n\tcssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"],\n\n\tcurCSS,\n\n\tgetComputedStyle,\n\tcurrentStyle;\n\n    jQuery.fn.css = function (name, value) {\n        return jQuery.access(this, function (elem, name, value) {\n            return value !== undefined ?\n\t\t\tjQuery.style(elem, name, value) :\n\t\t\tjQuery.css(elem, name);\n        }, name, value, arguments.length > 1);\n    };\n\n    jQuery.extend({\n        // Add in style property hooks for overriding the default\n        // behavior of getting and setting a style property\n        cssHooks: {\n            opacity: {\n                get: function (elem, computed) {\n                    if (computed) {\n                        // We should always get a number back from opacity\n                        var ret = curCSS(elem, \"opacity\");\n                        return ret === \"\" ? \"1\" : ret;\n\n                    } else {\n                        return elem.style.opacity;\n                    }\n                }\n            }\n        },\n\n        // Exclude the following css properties to add px\n        cssNumber: {\n            \"fillOpacity\": true,\n            \"fontWeight\": true,\n            \"lineHeight\": true,\n            \"opacity\": true,\n            \"orphans\": true,\n            \"widows\": true,\n            \"zIndex\": true,\n            \"zoom\": true\n        },\n\n        // Add in properties whose names you wish to fix before\n        // setting or getting the value\n        cssProps: {\n            // normalize float css property\n            \"float\": jQuery.support.cssFloat ? \"cssFloat\" : \"styleFloat\"\n        },\n\n        // Get and set the style property on a DOM Node\n        style: function (elem, name, value, extra) {\n            // Don't set styles on text and comment nodes\n            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n                return;\n            }\n\n            // Make sure that we're working with the right name\n            var ret, type, origName = jQuery.camelCase(name),\n\t\t\tstyle = elem.style, hooks = jQuery.cssHooks[origName];\n\n            name = jQuery.cssProps[origName] || origName;\n\n            // Check if we're setting a value\n            if (value !== undefined) {\n                type = typeof value;\n\n                // convert relative number strings (+= or -=) to relative numbers. #7345\n                if (type === \"string\" && (ret = rrelNum.exec(value))) {\n                    value = (+(ret[1] + 1) * +ret[2]) + parseFloat(jQuery.css(elem, name));\n                    // Fixes bug #9237\n                    type = \"number\";\n                }\n\n                // Make sure that NaN and null values aren't set. See: #7116\n                if (value == null || type === \"number\" && isNaN(value)) {\n                    return;\n                }\n\n                // If a number was passed in, add 'px' to the (except for certain CSS properties)\n                if (type === \"number\" && !jQuery.cssNumber[origName]) {\n                    value += \"px\";\n                }\n\n                // If a hook was provided, use that value, otherwise just set the specified value\n                if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value)) !== undefined) {\n                    // Wrapped to prevent IE from throwing errors when 'invalid' values are provided\n                    // Fixes bug #5509\n                    try {\n                        style[name] = value;\n                    } catch (e) { }\n                }\n\n            } else {\n                // If a hook was provided get the non-computed value from there\n                if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n                    return ret;\n                }\n\n                // Otherwise just get the value from the style object\n                return style[name];\n            }\n        },\n\n        css: function (elem, name, extra) {\n            var ret, hooks;\n\n            // Make sure that we're working with the right name\n            name = jQuery.camelCase(name);\n            hooks = jQuery.cssHooks[name];\n            name = jQuery.cssProps[name] || name;\n\n            // cssFloat needs a special treatment\n            if (name === \"cssFloat\") {\n                name = \"float\";\n            }\n\n            // If a hook was provided get the computed value from there\n            if (hooks && \"get\" in hooks && (ret = hooks.get(elem, true, extra)) !== undefined) {\n                return ret;\n\n                // Otherwise, if a way to get the computed value exists, use that\n            } else if (curCSS) {\n                return curCSS(elem, name);\n            }\n        },\n\n        // A method for quickly swapping in/out CSS properties to get correct calculations\n        swap: function (elem, options, callback) {\n            var old = {},\n\t\t\tret, name;\n\n            // Remember the old values, and insert the new ones\n            for (name in options) {\n                old[name] = elem.style[name];\n                elem.style[name] = options[name];\n            }\n\n            ret = callback.call(elem);\n\n            // Revert the old values\n            for (name in options) {\n                elem.style[name] = old[name];\n            }\n\n            return ret;\n        }\n    });\n\n    // DEPRECATED in 1.3, Use jQuery.css() instead\n    jQuery.curCSS = jQuery.css;\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n        getComputedStyle = function (elem, name) {\n            var ret, defaultView, computedStyle, width,\n\t\t\tstyle = elem.style;\n\n            name = name.replace(rupper, \"-$1\").toLowerCase();\n\n            if ((defaultView = elem.ownerDocument.defaultView) &&\n\t\t\t\t(computedStyle = defaultView.getComputedStyle(elem, null))) {\n\n                ret = computedStyle.getPropertyValue(name);\n                if (ret === \"\" && !jQuery.contains(elem.ownerDocument.documentElement, elem)) {\n                    ret = jQuery.style(elem, name);\n                }\n            }\n\n            // A tribute to the \"awesome hack by Dean Edwards\"\n            // WebKit uses \"computed value (percentage if specified)\" instead of \"used value\" for margins\n            // which is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n            if (!jQuery.support.pixelMargin && computedStyle && rmargin.test(name) && rnumnonpx.test(ret)) {\n                width = style.width;\n                style.width = ret;\n                ret = computedStyle.width;\n                style.width = width;\n            }\n\n            return ret;\n        };\n    }\n\n    if (document.documentElement.currentStyle) {\n        currentStyle = function (elem, name) {\n            var left, rsLeft, uncomputed,\n\t\t\tret = elem.currentStyle && elem.currentStyle[name],\n\t\t\tstyle = elem.style;\n\n            // Avoid setting ret to empty string here\n            // so we don't default to auto\n            if (ret == null && style && (uncomputed = style[name])) {\n                ret = uncomputed;\n            }\n\n            // From the awesome hack by Dean Edwards\n            // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\n            // If we're not dealing with a regular pixel number\n            // but a number that has a weird ending, we need to convert it to pixels\n            if (rnumnonpx.test(ret)) {\n\n                // Remember the original values\n                left = style.left;\n                rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;\n\n                // Put in the new values to get a computed value out\n                if (rsLeft) {\n                    elem.runtimeStyle.left = elem.currentStyle.left;\n                }\n                style.left = name === \"fontSize\" ? \"1em\" : ret;\n                ret = style.pixelLeft + \"px\";\n\n                // Revert the changed values\n                style.left = left;\n                if (rsLeft) {\n                    elem.runtimeStyle.left = rsLeft;\n                }\n            }\n\n            return ret === \"\" ? \"auto\" : ret;\n        };\n    }\n\n    curCSS = getComputedStyle || currentStyle;\n\n    function getWidthOrHeight(elem, name, extra) {\n\n        // Start with offset property\n        var val = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\ti = name === \"width\" ? 1 : 0,\n\t\tlen = 4;\n\n        if (val > 0) {\n            if (extra !== \"border\") {\n                for (; i < len; i += 2) {\n                    if (!extra) {\n                        val -= parseFloat(jQuery.css(elem, \"padding\" + cssExpand[i])) || 0;\n                    }\n                    if (extra === \"margin\") {\n                        val += parseFloat(jQuery.css(elem, extra + cssExpand[i])) || 0;\n                    } else {\n                        val -= parseFloat(jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\")) || 0;\n                    }\n                }\n            }\n\n            return val + \"px\";\n        }\n\n        // Fall back to computed then uncomputed css if necessary\n        val = curCSS(elem, name);\n        if (val < 0 || val == null) {\n            val = elem.style[name];\n        }\n\n        // Computed unit is not pixels. Stop here and return.\n        if (rnumnonpx.test(val)) {\n            return val;\n        }\n\n        // Normalize \"\", auto, and prepare for extra\n        val = parseFloat(val) || 0;\n\n        // Add padding, border, margin\n        if (extra) {\n            for (; i < len; i += 2) {\n                val += parseFloat(jQuery.css(elem, \"padding\" + cssExpand[i])) || 0;\n                if (extra !== \"padding\") {\n                    val += parseFloat(jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\")) || 0;\n                }\n                if (extra === \"margin\") {\n                    val += parseFloat(jQuery.css(elem, extra + cssExpand[i])) || 0;\n                }\n            }\n        }\n\n        return val + \"px\";\n    }\n\n    jQuery.each([\"height\", \"width\"], function (i, name) {\n        jQuery.cssHooks[name] = {\n            get: function (elem, computed, extra) {\n                if (computed) {\n                    if (elem.offsetWidth !== 0) {\n                        return getWidthOrHeight(elem, name, extra);\n                    } else {\n                        return jQuery.swap(elem, cssShow, function () {\n                            return getWidthOrHeight(elem, name, extra);\n                        });\n                    }\n                }\n            },\n\n            set: function (elem, value) {\n                return rnum.test(value) ?\n\t\t\t\tvalue + \"px\" :\n\t\t\t\tvalue;\n            }\n        };\n    });\n\n    if (!jQuery.support.opacity) {\n        jQuery.cssHooks.opacity = {\n            get: function (elem, computed) {\n                // IE uses filters for opacity\n                return ropacity.test((computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || \"\") ?\n\t\t\t\t(parseFloat(RegExp.$1) / 100) + \"\" :\n\t\t\t\tcomputed ? \"1\" : \"\";\n            },\n\n            set: function (elem, value) {\n                var style = elem.style,\n\t\t\t\tcurrentStyle = elem.currentStyle,\n\t\t\t\topacity = jQuery.isNumeric(value) ? \"alpha(opacity=\" + value * 100 + \")\" : \"\",\n\t\t\t\tfilter = currentStyle && currentStyle.filter || style.filter || \"\";\n\n                // IE has trouble with opacity if it does not have layout\n                // Force it by setting the zoom level\n                style.zoom = 1;\n\n                // if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652\n                if (value >= 1 && jQuery.trim(filter.replace(ralpha, \"\")) === \"\") {\n\n                    // Setting style.filter to null, \"\" & \" \" still leave \"filter:\" in the cssText\n                    // if \"filter:\" is present at all, clearType is disabled, we want to avoid this\n                    // style.removeAttribute is IE Only, but so apparently is this code path...\n                    style.removeAttribute(\"filter\");\n\n                    // if there there is no filter style applied in a css rule, we are done\n                    if (currentStyle && !currentStyle.filter) {\n                        return;\n                    }\n                }\n\n                // otherwise, set new filter values\n                style.filter = ralpha.test(filter) ?\n\t\t\t\tfilter.replace(ralpha, opacity) :\n\t\t\t\tfilter + \" \" + opacity;\n            }\n        };\n    }\n\n    jQuery(function () {\n        // This hook cannot be added until DOM ready because the support test\n        // for it is not run until after DOM ready\n        if (!jQuery.support.reliableMarginRight) {\n            jQuery.cssHooks.marginRight = {\n                get: function (elem, computed) {\n                    // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n                    // Work around by temporarily setting element display to inline-block\n                    return jQuery.swap(elem, { \"display\": \"inline-block\" }, function () {\n                        if (computed) {\n                            return curCSS(elem, \"margin-right\");\n                        } else {\n                            return elem.style.marginRight;\n                        }\n                    });\n                }\n            };\n        }\n    });\n\n    if (jQuery.expr && jQuery.expr.filters) {\n        jQuery.expr.filters.hidden = function (elem) {\n            var width = elem.offsetWidth,\n\t\t\theight = elem.offsetHeight;\n\n            return (width === 0 && height === 0) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css(elem, \"display\")) === \"none\");\n        };\n\n        jQuery.expr.filters.visible = function (elem) {\n            return !jQuery.expr.filters.hidden(elem);\n        };\n    }\n\n    // These hooks are used by animate to expand properties\n    jQuery.each({\n        margin: \"\",\n        padding: \"\",\n        border: \"Width\"\n    }, function (prefix, suffix) {\n\n        jQuery.cssHooks[prefix + suffix] = {\n            expand: function (value) {\n                var i,\n\n                // assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [value],\n\t\t\t\texpanded = {};\n\n                for (i = 0; i < 4; i++) {\n                    expanded[prefix + cssExpand[i] + suffix] =\n\t\t\t\t\tparts[i] || parts[i - 2] || parts[0];\n                }\n\n                return expanded;\n            }\n        };\n    });\n\n\n\n\n    var r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trhash = /#.*$/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg, // IE leaves an \\r character at EOL\n\trinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,\n    // #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trquery = /\\?/,\n\trscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n\trselectTextarea = /^(?:select|textarea)/i,\n\trspacesAjax = /\\s+/,\n\trts = /([?&])_=[^&]*/,\n\trurl = /^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+))?)?/,\n\n    // Keep a copy of the old load method\n\t_load = jQuery.fn.load,\n\n    /* Prefilters\n    * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n    * 2) These are called:\n    *    - BEFORE asking for a transport\n    *    - AFTER param serialization (s.data is a string if s.processData is true)\n    * 3) key is the dataType\n    * 4) the catchall symbol \"*\" can be used\n    * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n    */\n\tprefilters = {},\n\n    /* Transports bindings\n    * 1) key is the dataType\n    * 2) the catchall symbol \"*\" can be used\n    * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n    */\n\ttransports = {},\n\n    // Document location\n\tajaxLocation,\n\n    // Document location segments\n\tajaxLocParts,\n\n    // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = [\"*/\"] + [\"*\"];\n\n    // #8138, IE may throw an exception when accessing\n    // a field from window.location if document.domain has been set\n    try {\n        ajaxLocation = location.href;\n    } catch (e) {\n        // Use the href attribute of an A element\n        // since IE will modify it given document.location\n        ajaxLocation = document.createElement(\"a\");\n        ajaxLocation.href = \"\";\n        ajaxLocation = ajaxLocation.href;\n    }\n\n    // Segment location into parts\n    ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];\n\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n    function addToPrefiltersOrTransports(structure) {\n\n        // dataTypeExpression is optional and defaults to \"*\"\n        return function (dataTypeExpression, func) {\n\n            if (typeof dataTypeExpression !== \"string\") {\n                func = dataTypeExpression;\n                dataTypeExpression = \"*\";\n            }\n\n            if (jQuery.isFunction(func)) {\n                var dataTypes = dataTypeExpression.toLowerCase().split(rspacesAjax),\n\t\t\t\ti = 0,\n\t\t\t\tlength = dataTypes.length,\n\t\t\t\tdataType,\n\t\t\t\tlist,\n\t\t\t\tplaceBefore;\n\n                // For each dataType in the dataTypeExpression\n                for (; i < length; i++) {\n                    dataType = dataTypes[i];\n                    // We control if we're asked to add before\n                    // any existing element\n                    placeBefore = /^\\+/.test(dataType);\n                    if (placeBefore) {\n                        dataType = dataType.substr(1) || \"*\";\n                    }\n                    list = structure[dataType] = structure[dataType] || [];\n                    // then we add to the structure accordingly\n                    list[placeBefore ? \"unshift\" : \"push\"](func);\n                }\n            }\n        };\n    }\n\n    // Base inspection function for prefilters and transports\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR,\n\t\tdataType /* internal */, inspected /* internal */) {\n\n        dataType = dataType || options.dataTypes[0];\n        inspected = inspected || {};\n\n        inspected[dataType] = true;\n\n        var list = structure[dataType],\n\t\ti = 0,\n\t\tlength = list ? list.length : 0,\n\t\texecuteOnly = (structure === prefilters),\n\t\tselection;\n\n        for (; i < length && (executeOnly || !selection); i++) {\n            selection = list[i](options, originalOptions, jqXHR);\n            // If we got redirected to another dataType\n            // we try there if executing only and not done already\n            if (typeof selection === \"string\") {\n                if (!executeOnly || inspected[selection]) {\n                    selection = undefined;\n                } else {\n                    options.dataTypes.unshift(selection);\n                    selection = inspectPrefiltersOrTransports(\n\t\t\t\t\t\tstructure, options, originalOptions, jqXHR, selection, inspected);\n                }\n            }\n        }\n        // If we're only executing or nothing was selected\n        // we try the catchall dataType if not done already\n        if ((executeOnly || !selection) && !inspected[\"*\"]) {\n            selection = inspectPrefiltersOrTransports(\n\t\t\t\tstructure, options, originalOptions, jqXHR, \"*\", inspected);\n        }\n        // unnecessary when only executing (prefilters)\n        // but it'll be ignored by the caller in that case\n        return selection;\n    }\n\n    // A special extend for ajax options\n    // that takes \"flat\" options (not to be deep extended)\n    // Fixes #9887\n    function ajaxExtend(target, src) {\n        var key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n        for (key in src) {\n            if (src[key] !== undefined) {\n                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\n            }\n        }\n        if (deep) {\n            jQuery.extend(true, target, deep);\n        }\n    }\n\n    jQuery.fn.extend({\n        load: function (url, params, callback) {\n            if (typeof url !== \"string\" && _load) {\n                return _load.apply(this, arguments);\n\n                // Don't do a request if no elements are being requested\n            } else if (!this.length) {\n                return this;\n            }\n\n            var off = url.indexOf(\" \");\n            if (off >= 0) {\n                var selector = url.slice(off, url.length);\n                url = url.slice(0, off);\n            }\n\n            // Default to a GET request\n            var type = \"GET\";\n\n            // If the second parameter was provided\n            if (params) {\n                // If it's a function\n                if (jQuery.isFunction(params)) {\n                    // We assume that it's the callback\n                    callback = params;\n                    params = undefined;\n\n                    // Otherwise, build a param string\n                } else if (typeof params === \"object\") {\n                    params = jQuery.param(params, jQuery.ajaxSettings.traditional);\n                    type = \"POST\";\n                }\n            }\n\n            var self = this;\n\n            // Request the remote document\n            jQuery.ajax({\n                url: url,\n                type: type,\n                dataType: \"html\",\n                data: params,\n                // Complete callback (responseText is used internally)\n                complete: function (jqXHR, status, responseText) {\n                    // Store the response as specified by the jqXHR object\n                    responseText = jqXHR.responseText;\n                    // If successful, inject the HTML into all the matched elements\n                    if (jqXHR.isResolved()) {\n                        // #4825: Get the actual response in case\n                        // a dataFilter is present in ajaxSettings\n                        jqXHR.done(function (r) {\n                            responseText = r;\n                        });\n                        // See if a selector was specified\n                        self.html(selector ?\n                        // Create a dummy div to hold the results\n\t\t\t\t\t\tjQuery(\"<div>\")\n                        // inject the contents of the document in, removing the scripts\n                        // to avoid any 'Permission Denied' errors in IE\n\t\t\t\t\t\t\t.append(responseText.replace(rscript, \"\"))\n\n                        // Locate the specified elements\n\t\t\t\t\t\t\t.find(selector) :\n\n                        // If not, just inject the full result\n\t\t\t\t\t\tresponseText);\n                    }\n\n                    if (callback) {\n                        self.each(callback, [responseText, status, jqXHR]);\n                    }\n                }\n            });\n\n            return this;\n        },\n\n        serialize: function () {\n            return jQuery.param(this.serializeArray());\n        },\n\n        serializeArray: function () {\n            return this.map(function () {\n                return this.elements ? jQuery.makeArray(this.elements) : this;\n            })\n\t\t.filter(function () {\n\t\t    return this.name && !this.disabled &&\n\t\t\t\t(this.checked || rselectTextarea.test(this.nodeName) ||\n\t\t\t\t\trinput.test(this.type));\n\t\t})\n\t\t.map(function (i, elem) {\n\t\t    var val = jQuery(this).val();\n\n\t\t    return val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray(val) ?\n\t\t\t\t\tjQuery.map(val, function (val, i) {\n\t\t\t\t\t    return { name: elem.name, value: val.replace(rCRLF, \"\\r\\n\") };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace(rCRLF, \"\\r\\n\") };\n\t\t}).get();\n        }\n    });\n\n    // Attach a bunch of functions for handling common AJAX events\n    jQuery.each(\"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split(\" \"), function (i, o) {\n        jQuery.fn[o] = function (f) {\n            return this.on(o, f);\n        };\n    });\n\n    jQuery.each([\"get\", \"post\"], function (i, method) {\n        jQuery[method] = function (url, data, callback, type) {\n            // shift arguments if data argument was omitted\n            if (jQuery.isFunction(data)) {\n                type = type || callback;\n                callback = data;\n                data = undefined;\n            }\n\n            return jQuery.ajax({\n                type: method,\n                url: url,\n                data: data,\n                success: callback,\n                dataType: type\n            });\n        };\n    });\n\n    jQuery.extend({\n\n        getScript: function (url, callback) {\n            return jQuery.get(url, undefined, callback, \"script\");\n        },\n\n        getJSON: function (url, data, callback) {\n            return jQuery.get(url, data, callback, \"json\");\n        },\n\n        // Creates a full fledged settings object into target\n        // with both ajaxSettings and settings fields.\n        // If target is omitted, writes into ajaxSettings.\n        ajaxSetup: function (target, settings) {\n            if (settings) {\n                // Building a settings object\n                ajaxExtend(target, jQuery.ajaxSettings);\n            } else {\n                // Extending ajaxSettings\n                settings = target;\n                target = jQuery.ajaxSettings;\n            }\n            ajaxExtend(target, settings);\n            return target;\n        },\n\n        ajaxSettings: {\n            url: ajaxLocation,\n            isLocal: rlocalProtocol.test(ajaxLocParts[1]),\n            global: true,\n            type: \"GET\",\n            contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n            processData: true,\n            async: true,\n            /*\n            timeout: 0,\n            data: null,\n            dataType: null,\n            username: null,\n            password: null,\n            cache: null,\n            traditional: false,\n            headers: {},\n            */\n\n            accepts: {\n                xml: \"application/xml, text/xml\",\n                html: \"text/html\",\n                text: \"text/plain\",\n                json: \"application/json, text/javascript\",\n                \"*\": allTypes\n            },\n\n            contents: {\n                xml: /xml/,\n                html: /html/,\n                json: /json/\n            },\n\n            responseFields: {\n                xml: \"responseXML\",\n                text: \"responseText\"\n            },\n\n            // List of data converters\n            // 1) key format is \"source_type destination_type\" (a single space in-between)\n            // 2) the catchall symbol \"*\" can be used for source_type\n            converters: {\n\n                // Convert anything to text\n                \"* text\": window.String,\n\n                // Text to html (true = no transformation)\n                \"text html\": true,\n\n                // Evaluate text as a json expression\n                \"text json\": jQuery.parseJSON,\n\n                // Parse text as xml\n                \"text xml\": jQuery.parseXML\n            },\n\n            // For options that shouldn't be deep extended:\n            // you can add your own custom options here if\n            // and when you create one that shouldn't be\n            // deep extended (see ajaxExtend)\n            flatOptions: {\n                context: true,\n                url: true\n            }\n        },\n\n        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n        ajaxTransport: addToPrefiltersOrTransports(transports),\n\n        // Main method\n        ajax: function (url, options) {\n\n            // If url is an object, simulate pre-1.5 signature\n            if (typeof url === \"object\") {\n                options = url;\n                url = undefined;\n            }\n\n            // Force options to be an object\n            options = options || {};\n\n            var // Create the final options object\n\t\t\ts = jQuery.ajaxSetup({}, options),\n            // Callbacks context\n\t\t\tcallbackContext = s.context || s,\n            // Context for global events\n            // It's the callbackContext if one was provided in the options\n            // and if it's a DOM node or a jQuery collection\n\t\t\tglobalEventContext = callbackContext !== s &&\n\t\t\t\t(callbackContext.nodeType || callbackContext instanceof jQuery) ?\n\t\t\t\t\t\tjQuery(callbackContext) : jQuery.event,\n            // Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n            // Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n            // ifModified key\n\t\t\tifModifiedKey,\n            // Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n            // Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n            // transport\n\t\t\ttransport,\n            // timeout handle\n\t\t\ttimeoutTimer,\n            // Cross-domain detection vars\n\t\t\tparts,\n            // The jqXHR state\n\t\t\tstate = 0,\n            // To know if global events are to be dispatched\n\t\t\tfireGlobals,\n            // Loop variable\n\t\t\ti,\n            // Fake xhr\n\t\t\tjqXHR = {\n\n\t\t\t    readyState: 0,\n\n\t\t\t    // Caches the header\n\t\t\t    setRequestHeader: function (name, value) {\n\t\t\t        if (!state) {\n\t\t\t            var lname = name.toLowerCase();\n\t\t\t            name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;\n\t\t\t            requestHeaders[name] = value;\n\t\t\t        }\n\t\t\t        return this;\n\t\t\t    },\n\n\t\t\t    // Raw string\n\t\t\t    getAllResponseHeaders: function () {\n\t\t\t        return state === 2 ? responseHeadersString : null;\n\t\t\t    },\n\n\t\t\t    // Builds headers hashtable if needed\n\t\t\t    getResponseHeader: function (key) {\n\t\t\t        var match;\n\t\t\t        if (state === 2) {\n\t\t\t            if (!responseHeaders) {\n\t\t\t                responseHeaders = {};\n\t\t\t                while ((match = rheaders.exec(responseHeadersString))) {\n\t\t\t                    responseHeaders[match[1].toLowerCase()] = match[2];\n\t\t\t                }\n\t\t\t            }\n\t\t\t            match = responseHeaders[key.toLowerCase()];\n\t\t\t        }\n\t\t\t        return match === undefined ? null : match;\n\t\t\t    },\n\n\t\t\t    // Overrides response content-type header\n\t\t\t    overrideMimeType: function (type) {\n\t\t\t        if (!state) {\n\t\t\t            s.mimeType = type;\n\t\t\t        }\n\t\t\t        return this;\n\t\t\t    },\n\n\t\t\t    // Cancel the request\n\t\t\t    abort: function (statusText) {\n\t\t\t        statusText = statusText || \"abort\";\n\t\t\t        if (transport) {\n\t\t\t            transport.abort(statusText);\n\t\t\t        }\n\t\t\t        done(0, statusText);\n\t\t\t        return this;\n\t\t\t    }\n\t\t\t};\n\n            // Callback for when everything is done\n            // It is defined here because jslint complains if it is declared\n            // at the end of the function (which would be more logical and readable)\n            function done(status, nativeStatusText, responses, headers) {\n\n                // Called once\n                if (state === 2) {\n                    return;\n                }\n\n                // State is \"done\" now\n                state = 2;\n\n                // Clear timeout if it exists\n                if (timeoutTimer) {\n                    clearTimeout(timeoutTimer);\n                }\n\n                // Dereference transport for early garbage collection\n                // (no matter how long the jqXHR object will be used)\n                transport = undefined;\n\n                // Cache response headers\n                responseHeadersString = headers || \"\";\n\n                // Set readyState\n                jqXHR.readyState = status > 0 ? 4 : 0;\n\n                var isSuccess,\n\t\t\t\tsuccess,\n\t\t\t\terror,\n\t\t\t\tstatusText = nativeStatusText,\n\t\t\t\tresponse = responses ? ajaxHandleResponses(s, jqXHR, responses) : undefined,\n\t\t\t\tlastModified,\n\t\t\t\tetag;\n\n                // If successful, handle type chaining\n                if (status >= 200 && status < 300 || status === 304) {\n\n                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n                    if (s.ifModified) {\n\n                        if ((lastModified = jqXHR.getResponseHeader(\"Last-Modified\"))) {\n                            jQuery.lastModified[ifModifiedKey] = lastModified;\n                        }\n                        if ((etag = jqXHR.getResponseHeader(\"Etag\"))) {\n                            jQuery.etag[ifModifiedKey] = etag;\n                        }\n                    }\n\n                    // If not modified\n                    if (status === 304) {\n\n                        statusText = \"notmodified\";\n                        isSuccess = true;\n\n                        // If we have data\n                    } else {\n\n                        try {\n                            success = ajaxConvert(s, response);\n                            statusText = \"success\";\n                            isSuccess = true;\n                        } catch (e) {\n                            // We have a parsererror\n                            statusText = \"parsererror\";\n                            error = e;\n                        }\n                    }\n                } else {\n                    // We extract error from statusText\n                    // then normalize statusText and status for non-aborts\n                    error = statusText;\n                    if (!statusText || status) {\n                        statusText = \"error\";\n                        if (status < 0) {\n                            status = 0;\n                        }\n                    }\n                }\n\n                // Set data for the fake xhr object\n                jqXHR.status = status;\n                jqXHR.statusText = \"\" + (nativeStatusText || statusText);\n\n                // Success/Error\n                if (isSuccess) {\n                    deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n                } else {\n                    deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n                }\n\n                // Status-dependent callbacks\n                jqXHR.statusCode(statusCode);\n                statusCode = undefined;\n\n                if (fireGlobals) {\n                    globalEventContext.trigger(\"ajax\" + (isSuccess ? \"Success\" : \"Error\"),\n\t\t\t\t\t\t[jqXHR, s, isSuccess ? success : error]);\n                }\n\n                // Complete\n                completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n                if (fireGlobals) {\n                    globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]);\n                    // Handle the global AJAX counter\n                    if (!(--jQuery.active)) {\n                        jQuery.event.trigger(\"ajaxStop\");\n                    }\n                }\n            }\n\n            // Attach deferreds\n            deferred.promise(jqXHR);\n            jqXHR.success = jqXHR.done;\n            jqXHR.error = jqXHR.fail;\n            jqXHR.complete = completeDeferred.add;\n\n            // Status-dependent callbacks\n            jqXHR.statusCode = function (map) {\n                if (map) {\n                    var tmp;\n                    if (state < 2) {\n                        for (tmp in map) {\n                            statusCode[tmp] = [statusCode[tmp], map[tmp]];\n                        }\n                    } else {\n                        tmp = map[jqXHR.status];\n                        jqXHR.then(tmp, tmp);\n                    }\n                }\n                return this;\n            };\n\n            // Remove hash character (#7531: and string promotion)\n            // Add protocol if not provided (#5866: IE7 issue with protocol-less urls)\n            // We also use the url parameter if available\n            s.url = ((url || s.url) + \"\").replace(rhash, \"\").replace(rprotocol, ajaxLocParts[1] + \"//\");\n\n            // Extract dataTypes list\n            s.dataTypes = jQuery.trim(s.dataType || \"*\").toLowerCase().split(rspacesAjax);\n\n            // Determine if a cross-domain request is in order\n            if (s.crossDomain == null) {\n                parts = rurl.exec(s.url.toLowerCase());\n                s.crossDomain = !!(parts &&\n\t\t\t\t(parts[1] != ajaxLocParts[1] || parts[2] != ajaxLocParts[2] ||\n\t\t\t\t\t(parts[3] || (parts[1] === \"http:\" ? 80 : 443)) !=\n\t\t\t\t\t\t(ajaxLocParts[3] || (ajaxLocParts[1] === \"http:\" ? 80 : 443)))\n\t\t\t);\n            }\n\n            // Convert data if not already a string\n            if (s.data && s.processData && typeof s.data !== \"string\") {\n                s.data = jQuery.param(s.data, s.traditional);\n            }\n\n            // Apply prefilters\n            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n\n            // If request was aborted inside a prefilter, stop there\n            if (state === 2) {\n                return false;\n            }\n\n            // We can fire global events as of now if asked to\n            fireGlobals = s.global;\n\n            // Uppercase the type\n            s.type = s.type.toUpperCase();\n\n            // Determine if request has content\n            s.hasContent = !rnoContent.test(s.type);\n\n            // Watch for a new set of requests\n            if (fireGlobals && jQuery.active++ === 0) {\n                jQuery.event.trigger(\"ajaxStart\");\n            }\n\n            // More options handling for requests with no content\n            if (!s.hasContent) {\n\n                // If data is available, append data to url\n                if (s.data) {\n                    s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.data;\n                    // #9682: remove data so that it's not used in an eventual retry\n                    delete s.data;\n                }\n\n                // Get ifModifiedKey before adding the anti-cache parameter\n                ifModifiedKey = s.url;\n\n                // Add anti-cache in url if needed\n                if (s.cache === false) {\n\n                    var ts = jQuery.now(),\n                    // try replacing _= if it is there\n\t\t\t\t\tret = s.url.replace(rts, \"$1_=\" + ts);\n\n                    // if nothing was replaced, add timestamp to the end\n                    s.url = ret + ((ret === s.url) ? (rquery.test(s.url) ? \"&\" : \"?\") + \"_=\" + ts : \"\");\n                }\n            }\n\n            // Set the correct header, if data is being sent\n            if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n                jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n            }\n\n            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n            if (s.ifModified) {\n                ifModifiedKey = ifModifiedKey || s.url;\n                if (jQuery.lastModified[ifModifiedKey]) {\n                    jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[ifModifiedKey]);\n                }\n                if (jQuery.etag[ifModifiedKey]) {\n                    jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[ifModifiedKey]);\n                }\n            }\n\n            // Set the Accepts header for the server, depending on the dataType\n            jqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[0] && s.accepts[s.dataTypes[0]] ?\n\t\t\t\ts.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") :\n\t\t\t\ts.accepts[\"*\"]\n\t\t);\n\n            // Check for headers option\n            for (i in s.headers) {\n                jqXHR.setRequestHeader(i, s.headers[i]);\n            }\n\n            // Allow custom headers/mimetypes and early abort\n            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {\n                // Abort if not done already\n                jqXHR.abort();\n                return false;\n\n            }\n\n            // Install callbacks on deferreds\n            for (i in { success: 1, error: 1, complete: 1 }) {\n                jqXHR[i](s[i]);\n            }\n\n            // Get transport\n            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n\n            // If no transport, we auto-abort\n            if (!transport) {\n                done(-1, \"No Transport\");\n            } else {\n                jqXHR.readyState = 1;\n                // Send global event\n                if (fireGlobals) {\n                    globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n                }\n                // Timeout\n                if (s.async && s.timeout > 0) {\n                    timeoutTimer = setTimeout(function () {\n                        jqXHR.abort(\"timeout\");\n                    }, s.timeout);\n                }\n\n                try {\n                    state = 1;\n                    transport.send(requestHeaders, done);\n                } catch (e) {\n                    // Propagate exception as error if not done\n                    if (state < 2) {\n                        done(-1, e);\n                        // Simply rethrow otherwise\n                    } else {\n                        throw e;\n                    }\n                }\n            }\n\n            return jqXHR;\n        },\n\n        // Serialize an array of form elements or a set of\n        // key/values into a query string\n        param: function (a, traditional) {\n            var s = [],\n\t\t\tadd = function (key, value) {\n\t\t\t    // If value is a function, invoke it and return its value\n\t\t\t    value = jQuery.isFunction(value) ? value() : value;\n\t\t\t    s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n\t\t\t};\n\n            // Set traditional to true for jQuery <= 1.3.2 behavior.\n            if (traditional === undefined) {\n                traditional = jQuery.ajaxSettings.traditional;\n            }\n\n            // If an array was passed in, assume that it is an array of form elements.\n            if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {\n                // Serialize the form elements\n                jQuery.each(a, function () {\n                    add(this.name, this.value);\n                });\n\n            } else {\n                // If traditional, encode the \"old\" way (the way 1.3.2 or older\n                // did it), otherwise encode params recursively.\n                for (var prefix in a) {\n                    buildParams(prefix, a[prefix], traditional, add);\n                }\n            }\n\n            // Return the resulting serialization\n            return s.join(\"&\").replace(r20, \"+\");\n        }\n    });\n\n    function buildParams(prefix, obj, traditional, add) {\n        if (jQuery.isArray(obj)) {\n            // Serialize array item.\n            jQuery.each(obj, function (i, v) {\n                if (traditional || rbracket.test(prefix)) {\n                    // Treat each array item as a scalar.\n                    add(prefix, v);\n\n                } else {\n                    // If array item is non-scalar (array or object), encode its\n                    // numeric index to resolve deserialization ambiguity issues.\n                    // Note that rack (as of 1.0.0) can't currently deserialize\n                    // nested arrays properly, and attempting to do so may cause\n                    // a server error. Possible fixes are to modify rack's\n                    // deserialization algorithm or to provide an option or flag\n                    // to force array serialization to be shallow.\n                    buildParams(prefix + \"[\" + (typeof v === \"object\" ? i : \"\") + \"]\", v, traditional, add);\n                }\n            });\n\n        } else if (!traditional && jQuery.type(obj) === \"object\") {\n            // Serialize object item.\n            for (var name in obj) {\n                buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n            }\n\n        } else {\n            // Serialize scalar item.\n            add(prefix, obj);\n        }\n    }\n\n    // This is still on the jQuery object... for now\n    // Want to move this to jQuery.ajax some day\n    jQuery.extend({\n\n        // Counter for holding the number of active queries\n        active: 0,\n\n        // Last-Modified header cache for next request\n        lastModified: {},\n        etag: {}\n\n    });\n\n    /* Handles responses to an ajax request:\n    * - sets all responseXXX fields accordingly\n    * - finds the right dataType (mediates between content-type and expected dataType)\n    * - returns the corresponding response\n    */\n    function ajaxHandleResponses(s, jqXHR, responses) {\n\n        var contents = s.contents,\n\t\tdataTypes = s.dataTypes,\n\t\tresponseFields = s.responseFields,\n\t\tct,\n\t\ttype,\n\t\tfinalDataType,\n\t\tfirstDataType;\n\n        // Fill responseXXX fields\n        for (type in responseFields) {\n            if (type in responses) {\n                jqXHR[responseFields[type]] = responses[type];\n            }\n        }\n\n        // Remove auto dataType and get content-type in the process\n        while (dataTypes[0] === \"*\") {\n            dataTypes.shift();\n            if (ct === undefined) {\n                ct = s.mimeType || jqXHR.getResponseHeader(\"content-type\");\n            }\n        }\n\n        // Check if we're dealing with a known content-type\n        if (ct) {\n            for (type in contents) {\n                if (contents[type] && contents[type].test(ct)) {\n                    dataTypes.unshift(type);\n                    break;\n                }\n            }\n        }\n\n        // Check to see if we have a response for the expected dataType\n        if (dataTypes[0] in responses) {\n            finalDataType = dataTypes[0];\n        } else {\n            // Try convertible dataTypes\n            for (type in responses) {\n                if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n                    finalDataType = type;\n                    break;\n                }\n                if (!firstDataType) {\n                    firstDataType = type;\n                }\n            }\n            // Or just use first one\n            finalDataType = finalDataType || firstDataType;\n        }\n\n        // If we found a dataType\n        // We add the dataType to the list if needed\n        // and return the corresponding response\n        if (finalDataType) {\n            if (finalDataType !== dataTypes[0]) {\n                dataTypes.unshift(finalDataType);\n            }\n            return responses[finalDataType];\n        }\n    }\n\n    // Chain conversions given the request and the original response\n    function ajaxConvert(s, response) {\n\n        // Apply the dataFilter if provided\n        if (s.dataFilter) {\n            response = s.dataFilter(response, s.dataType);\n        }\n\n        var dataTypes = s.dataTypes,\n\t\tconverters = {},\n\t\ti,\n\t\tkey,\n\t\tlength = dataTypes.length,\n\t\ttmp,\n        // Current and previous dataTypes\n\t\tcurrent = dataTypes[0],\n\t\tprev,\n        // Conversion expression\n\t\tconversion,\n        // Conversion function\n\t\tconv,\n        // Conversion functions (transitive conversion)\n\t\tconv1,\n\t\tconv2;\n\n        // For each dataType in the chain\n        for (i = 1; i < length; i++) {\n\n            // Create converters map\n            // with lowercased keys\n            if (i === 1) {\n                for (key in s.converters) {\n                    if (typeof key === \"string\") {\n                        converters[key.toLowerCase()] = s.converters[key];\n                    }\n                }\n            }\n\n            // Get the dataTypes\n            prev = current;\n            current = dataTypes[i];\n\n            // If current is auto dataType, update it to prev\n            if (current === \"*\") {\n                current = prev;\n                // If no auto and dataTypes are actually different\n            } else if (prev !== \"*\" && prev !== current) {\n\n                // Get the converter\n                conversion = prev + \" \" + current;\n                conv = converters[conversion] || converters[\"* \" + current];\n\n                // If there is no direct converter, search transitively\n                if (!conv) {\n                    conv2 = undefined;\n                    for (conv1 in converters) {\n                        tmp = conv1.split(\" \");\n                        if (tmp[0] === prev || tmp[0] === \"*\") {\n                            conv2 = converters[tmp[1] + \" \" + current];\n                            if (conv2) {\n                                conv1 = converters[conv1];\n                                if (conv1 === true) {\n                                    conv = conv2;\n                                } else if (conv2 === true) {\n                                    conv = conv1;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // If we found no converter, dispatch an error\n                if (!(conv || conv2)) {\n                    jQuery.error(\"No conversion from \" + conversion.replace(\" \", \" to \"));\n                }\n                // If found converter is not an equivalence\n                if (conv !== true) {\n                    // Convert with 1 or 2 converters accordingly\n                    response = conv ? conv(response) : conv2(conv1(response));\n                }\n            }\n        }\n        return response;\n    }\n\n\n\n\n    var jsc = jQuery.now(),\n\tjsre = /(\\=)\\?(&|$)|\\?\\?/i;\n\n    // Default jsonp settings\n    jQuery.ajaxSetup({\n        jsonp: \"callback\",\n        jsonpCallback: function () {\n            return jQuery.expando + \"_\" + (jsc++);\n        }\n    });\n\n    // Detect, normalize options and install callbacks for jsonp requests\n    jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n\n        var inspectData = (typeof s.data === \"string\") && /^application\\/x\\-www\\-form\\-urlencoded/.test(s.contentType);\n\n        if (s.dataTypes[0] === \"jsonp\" ||\n\t\ts.jsonp !== false && (jsre.test(s.url) ||\n\t\t\t\tinspectData && jsre.test(s.data))) {\n\n            var responseContainer,\n\t\t\tjsonpCallback = s.jsonpCallback =\n\t\t\t\tjQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback,\n\t\t\tprevious = window[jsonpCallback],\n\t\t\turl = s.url,\n\t\t\tdata = s.data,\n\t\t\treplace = \"$1\" + jsonpCallback + \"$2\";\n\n            if (s.jsonp !== false) {\n                url = url.replace(jsre, replace);\n                if (s.url === url) {\n                    if (inspectData) {\n                        data = data.replace(jsre, replace);\n                    }\n                    if (s.data === data) {\n                        // Add callback manually\n                        url += (/\\?/.test(url) ? \"&\" : \"?\") + s.jsonp + \"=\" + jsonpCallback;\n                    }\n                }\n            }\n\n            s.url = url;\n            s.data = data;\n\n            // Install callback\n            window[jsonpCallback] = function (response) {\n                responseContainer = [response];\n            };\n\n            // Clean-up function\n            jqXHR.always(function () {\n                // Set callback back to previous value\n                window[jsonpCallback] = previous;\n                // Call if it was a function and we have a response\n                if (responseContainer && jQuery.isFunction(previous)) {\n                    window[jsonpCallback](responseContainer[0]);\n                }\n            });\n\n            // Use data converter to retrieve json after script execution\n            s.converters[\"script json\"] = function () {\n                if (!responseContainer) {\n                    jQuery.error(jsonpCallback + \" was not called\");\n                }\n                return responseContainer[0];\n            };\n\n            // force json dataType\n            s.dataTypes[0] = \"json\";\n\n            // Delegate to script\n            return \"script\";\n        }\n    });\n\n\n\n\n    // Install script dataType\n    jQuery.ajaxSetup({\n        accepts: {\n            script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n        },\n        contents: {\n            script: /javascript|ecmascript/\n        },\n        converters: {\n            \"text script\": function (text) {\n                jQuery.globalEval(text);\n                return text;\n            }\n        }\n    });\n\n    // Handle cache's special case and global\n    jQuery.ajaxPrefilter(\"script\", function (s) {\n        if (s.cache === undefined) {\n            s.cache = false;\n        }\n        if (s.crossDomain) {\n            s.type = \"GET\";\n            s.global = false;\n        }\n    });\n\n    // Bind script tag hack transport\n    jQuery.ajaxTransport(\"script\", function (s) {\n\n        // This transport only deals with cross domain requests\n        if (s.crossDomain) {\n\n            var script,\n\t\t\thead = document.head || document.getElementsByTagName(\"head\")[0] || document.documentElement;\n\n            return {\n\n                send: function (_, callback) {\n\n                    script = document.createElement(\"script\");\n\n                    script.async = \"async\";\n\n                    if (s.scriptCharset) {\n                        script.charset = s.scriptCharset;\n                    }\n\n                    script.src = s.url;\n\n                    // Attach handlers for all browsers\n                    script.onload = script.onreadystatechange = function (_, isAbort) {\n\n                        if (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) {\n\n                            // Handle memory leak in IE\n                            script.onload = script.onreadystatechange = null;\n\n                            // Remove the script\n                            if (head && script.parentNode) {\n                                head.removeChild(script);\n                            }\n\n                            // Dereference the script\n                            script = undefined;\n\n                            // Callback if not abort\n                            if (!isAbort) {\n                                callback(200, \"success\");\n                            }\n                        }\n                    };\n                    // Use insertBefore instead of appendChild  to circumvent an IE6 bug.\n                    // This arises when a base node is used (#2709 and #4378).\n                    head.insertBefore(script, head.firstChild);\n                },\n\n                abort: function () {\n                    if (script) {\n                        script.onload(0, 1);\n                    }\n                }\n            };\n        }\n    });\n\n\n\n\n    var // #5280: Internet Explorer will keep connections alive if we don't abort on unload\n\txhrOnUnloadAbort = window.ActiveXObject ? function () {\n\t    // Abort all pending requests\n\t    for (var key in xhrCallbacks) {\n\t        xhrCallbacks[key](0, 1);\n\t    }\n\t} : false,\n\txhrId = 0,\n\txhrCallbacks;\n\n    // Functions to create xhrs\n    function createStandardXHR() {\n        try {\n            return new window.XMLHttpRequest();\n        } catch (e) { }\n    }\n\n    function createActiveXHR() {\n        try {\n            return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n        } catch (e) { }\n    }\n\n    // Create the request object\n    // (This is still attached to ajaxSettings for backward compatibility)\n    jQuery.ajaxSettings.xhr = window.ActiveXObject ?\n    /* Microsoft failed to properly\n    * implement the XMLHttpRequest in IE7 (can't request local files),\n    * so we use the ActiveXObject when it is available\n    * Additionally XMLHttpRequest can be disabled in IE7/IE8 so\n    * we need a fallback.\n    */\n\tfunction () {\n\t    return !this.isLocal && createStandardXHR() || createActiveXHR();\n\t} :\n    // For all other browsers, use the standard XMLHttpRequest object\n\tcreateStandardXHR;\n\n    // Determine support properties\n    (function (xhr) {\n        jQuery.extend(jQuery.support, {\n            ajax: !!xhr,\n            cors: !!xhr && (\"withCredentials\" in xhr)\n        });\n    })(jQuery.ajaxSettings.xhr());\n\n    // Create transport if the browser can provide an xhr\n    if (jQuery.support.ajax) {\n\n        jQuery.ajaxTransport(function (s) {\n            // Cross domain only allowed if supported through XMLHttpRequest\n            if (!s.crossDomain || jQuery.support.cors) {\n\n                var callback;\n\n                return {\n                    send: function (headers, complete) {\n\n                        // Get a new xhr\n                        var xhr = s.xhr(),\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\ti;\n\n                        // Open the socket\n                        // Passing null username, generates a login popup on Opera (#2865)\n                        if (s.username) {\n                            xhr.open(s.type, s.url, s.async, s.username, s.password);\n                        } else {\n                            xhr.open(s.type, s.url, s.async);\n                        }\n\n                        // Apply custom fields if provided\n                        if (s.xhrFields) {\n                            for (i in s.xhrFields) {\n                                xhr[i] = s.xhrFields[i];\n                            }\n                        }\n\n                        // Override mime type if needed\n                        if (s.mimeType && xhr.overrideMimeType) {\n                            xhr.overrideMimeType(s.mimeType);\n                        }\n\n                        // X-Requested-With header\n                        // For cross-domain requests, seeing as conditions for a preflight are\n                        // akin to a jigsaw puzzle, we simply never set it to be sure.\n                        // (it can always be set on a per-request basis or even using ajaxSetup)\n                        // For same-domain requests, won't change header if already provided.\n                        if (!s.crossDomain && !headers[\"X-Requested-With\"]) {\n                            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n                        }\n\n                        // Need an extra try/catch for cross domain requests in Firefox 3\n                        try {\n                            for (i in headers) {\n                                xhr.setRequestHeader(i, headers[i]);\n                            }\n                        } catch (_) { }\n\n                        // Do send the request\n                        // This may raise an exception which is actually\n                        // handled in jQuery.ajax (so no try/catch here)\n                        xhr.send((s.hasContent && s.data) || null);\n\n                        // Listener\n                        callback = function (_, isAbort) {\n\n                            var status,\n\t\t\t\t\t\t\tstatusText,\n\t\t\t\t\t\t\tresponseHeaders,\n\t\t\t\t\t\t\tresponses,\n\t\t\t\t\t\t\txml;\n\n                            // Firefox throws exceptions when accessing properties\n                            // of an xhr when a network error occured\n                            // http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)\n                            try {\n\n                                // Was never called and is aborted or complete\n                                if (callback && (isAbort || xhr.readyState === 4)) {\n\n                                    // Only called once\n                                    callback = undefined;\n\n                                    // Do not keep as active anymore\n                                    if (handle) {\n                                        xhr.onreadystatechange = jQuery.noop;\n                                        if (xhrOnUnloadAbort) {\n                                            delete xhrCallbacks[handle];\n                                        }\n                                    }\n\n                                    // If it's an abort\n                                    if (isAbort) {\n                                        // Abort it manually if needed\n                                        if (xhr.readyState !== 4) {\n                                            xhr.abort();\n                                        }\n                                    } else {\n                                        status = xhr.status;\n                                        responseHeaders = xhr.getAllResponseHeaders();\n                                        responses = {};\n                                        xml = xhr.responseXML;\n\n                                        // Construct response list\n                                        if (xml && xml.documentElement /* #4958 */) {\n                                            responses.xml = xml;\n                                        }\n\n                                        // When requesting binary data, IE6-9 will throw an exception\n                                        // on any attempt to access responseText (#11426)\n                                        try {\n                                            responses.text = xhr.responseText;\n                                        } catch (_) {\n                                        }\n\n                                        // Firefox throws an exception when accessing\n                                        // statusText for faulty cross-domain requests\n                                        try {\n                                            statusText = xhr.statusText;\n                                        } catch (e) {\n                                            // We normalize with Webkit giving an empty statusText\n                                            statusText = \"\";\n                                        }\n\n                                        // Filter status for non standard behaviors\n\n                                        // If the request is local and we have data: assume a success\n                                        // (success with no data won't get notified, that's the best we\n                                        // can do given current implementations)\n                                        if (!status && s.isLocal && !s.crossDomain) {\n                                            status = responses.text ? 200 : 404;\n                                            // IE - #1450: sometimes returns 1223 when it should be 204\n                                        } else if (status === 1223) {\n                                            status = 204;\n                                        }\n                                    }\n                                }\n                            } catch (firefoxAccessException) {\n                                if (!isAbort) {\n                                    complete(-1, firefoxAccessException);\n                                }\n                            }\n\n                            // Call complete if needed\n                            if (responses) {\n                                complete(status, statusText, responses, responseHeaders);\n                            }\n                        };\n\n                        // if we're in sync mode or it's in cache\n                        // and has been retrieved directly (IE6 & IE7)\n                        // we need to manually fire the callback\n                        if (!s.async || xhr.readyState === 4) {\n                            callback();\n                        } else {\n                            handle = ++xhrId;\n                            if (xhrOnUnloadAbort) {\n                                // Create the active xhrs callbacks list if needed\n                                // and attach the unload handler\n                                if (!xhrCallbacks) {\n                                    xhrCallbacks = {};\n                                    jQuery(window).unload(xhrOnUnloadAbort);\n                                }\n                                // Add to list of active xhrs callbacks\n                                xhrCallbacks[handle] = callback;\n                            }\n                            xhr.onreadystatechange = callback;\n                        }\n                    },\n\n                    abort: function () {\n                        if (callback) {\n                            callback(0, 1);\n                        }\n                    }\n                };\n            }\n        });\n    }\n\n\n\n\n    var elemdisplay = {},\n\tiframe, iframeDoc,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = /^([+\\-]=)?([\\d+.\\-]+)([a-z%]*)$/i,\n\ttimerId,\n\tfxAttrs = [\n    // height animations\n\t\t[\"height\", \"marginTop\", \"marginBottom\", \"paddingTop\", \"paddingBottom\"],\n    // width animations\n\t\t[\"width\", \"marginLeft\", \"marginRight\", \"paddingLeft\", \"paddingRight\"],\n    // opacity animations\n\t\t[\"opacity\"]\n\t],\n\tfxNow;\n\n    jQuery.fn.extend({\n        show: function (speed, easing, callback) {\n            var elem, display;\n\n            if (speed || speed === 0) {\n                return this.animate(genFx(\"show\", 3), speed, easing, callback);\n\n            } else {\n                for (var i = 0, j = this.length; i < j; i++) {\n                    elem = this[i];\n\n                    if (elem.style) {\n                        display = elem.style.display;\n\n                        // Reset the inline display of this element to learn if it is\n                        // being hidden by cascaded rules or not\n                        if (!jQuery._data(elem, \"olddisplay\") && display === \"none\") {\n                            display = elem.style.display = \"\";\n                        }\n\n                        // Set elements which have been overridden with display: none\n                        // in a stylesheet to whatever the default browser style is\n                        // for such an element\n                        if ((display === \"\" && jQuery.css(elem, \"display\") === \"none\") ||\n\t\t\t\t\t\t!jQuery.contains(elem.ownerDocument.documentElement, elem)) {\n                            jQuery._data(elem, \"olddisplay\", defaultDisplay(elem.nodeName));\n                        }\n                    }\n                }\n\n                // Set the display of most of the elements in a second loop\n                // to avoid the constant reflow\n                for (i = 0; i < j; i++) {\n                    elem = this[i];\n\n                    if (elem.style) {\n                        display = elem.style.display;\n\n                        if (display === \"\" || display === \"none\") {\n                            elem.style.display = jQuery._data(elem, \"olddisplay\") || \"\";\n                        }\n                    }\n                }\n\n                return this;\n            }\n        },\n\n        hide: function (speed, easing, callback) {\n            if (speed || speed === 0) {\n                return this.animate(genFx(\"hide\", 3), speed, easing, callback);\n\n            } else {\n                var elem, display,\n\t\t\t\ti = 0,\n\t\t\t\tj = this.length;\n\n                for (; i < j; i++) {\n                    elem = this[i];\n                    if (elem.style) {\n                        display = jQuery.css(elem, \"display\");\n\n                        if (display !== \"none\" && !jQuery._data(elem, \"olddisplay\")) {\n                            jQuery._data(elem, \"olddisplay\", display);\n                        }\n                    }\n                }\n\n                // Set the display of the elements in a second loop\n                // to avoid the constant reflow\n                for (i = 0; i < j; i++) {\n                    if (this[i].style) {\n                        this[i].style.display = \"none\";\n                    }\n                }\n\n                return this;\n            }\n        },\n\n        // Save the old toggle function\n        _toggle: jQuery.fn.toggle,\n\n        toggle: function (fn, fn2, callback) {\n            var bool = typeof fn === \"boolean\";\n\n            if (jQuery.isFunction(fn) && jQuery.isFunction(fn2)) {\n                this._toggle.apply(this, arguments);\n\n            } else if (fn == null || bool) {\n                this.each(function () {\n                    var state = bool ? fn : jQuery(this).is(\":hidden\");\n                    jQuery(this)[state ? \"show\" : \"hide\"]();\n                });\n\n            } else {\n                this.animate(genFx(\"toggle\", 3), fn, fn2, callback);\n            }\n\n            return this;\n        },\n\n        fadeTo: function (speed, to, easing, callback) {\n            return this.filter(\":hidden\").css(\"opacity\", 0).show().end()\n\t\t\t\t\t.animate({ opacity: to }, speed, easing, callback);\n        },\n\n        animate: function (prop, speed, easing, callback) {\n            var optall = jQuery.speed(speed, easing, callback);\n\n            if (jQuery.isEmptyObject(prop)) {\n                return this.each(optall.complete, [false]);\n            }\n\n            // Do not change referenced properties as per-property easing will be lost\n            prop = jQuery.extend({}, prop);\n\n            function doAnimation() {\n                // XXX 'this' does not always have a nodeName when running the\n                // test suite\n\n                if (optall.queue === false) {\n                    jQuery._mark(this);\n                }\n\n                var opt = jQuery.extend({}, optall),\n\t\t\t\tisElement = this.nodeType === 1,\n\t\t\t\thidden = isElement && jQuery(this).is(\":hidden\"),\n\t\t\t\tname, val, p, e, hooks, replace,\n\t\t\t\tparts, start, end, unit,\n\t\t\t\tmethod;\n\n                // will store per property easing and be used to determine when an animation is complete\n                opt.animatedProperties = {};\n\n                // first pass over propertys to expand / normalize\n                for (p in prop) {\n                    name = jQuery.camelCase(p);\n                    if (p !== name) {\n                        prop[name] = prop[p];\n                        delete prop[p];\n                    }\n\n                    if ((hooks = jQuery.cssHooks[name]) && \"expand\" in hooks) {\n                        replace = hooks.expand(prop[name]);\n                        delete prop[name];\n\n                        // not quite $.extend, this wont overwrite keys already present.\n                        // also - reusing 'p' from above because we have the correct \"name\"\n                        for (p in replace) {\n                            if (!(p in prop)) {\n                                prop[p] = replace[p];\n                            }\n                        }\n                    }\n                }\n\n                for (name in prop) {\n                    val = prop[name];\n                    // easing resolution: per property > opt.specialEasing > opt.easing > 'swing' (default)\n                    if (jQuery.isArray(val)) {\n                        opt.animatedProperties[name] = val[1];\n                        val = prop[name] = val[0];\n                    } else {\n                        opt.animatedProperties[name] = opt.specialEasing && opt.specialEasing[name] || opt.easing || 'swing';\n                    }\n\n                    if (val === \"hide\" && hidden || val === \"show\" && !hidden) {\n                        return opt.complete.call(this);\n                    }\n\n                    if (isElement && (name === \"height\" || name === \"width\")) {\n                        // Make sure that nothing sneaks out\n                        // Record all 3 overflow attributes because IE does not\n                        // change the overflow attribute when overflowX and\n                        // overflowY are set to the same value\n                        opt.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];\n\n                        // Set display property to inline-block for height/width\n                        // animations on inline elements that are having width/height animated\n                        if (jQuery.css(this, \"display\") === \"inline\" &&\n\t\t\t\t\t\t\tjQuery.css(this, \"float\") === \"none\") {\n\n                            // inline-level elements accept inline-block;\n                            // block-level elements need to be inline with layout\n                            if (!jQuery.support.inlineBlockNeedsLayout || defaultDisplay(this.nodeName) === \"inline\") {\n                                this.style.display = \"inline-block\";\n\n                            } else {\n                                this.style.zoom = 1;\n                            }\n                        }\n                    }\n                }\n\n                if (opt.overflow != null) {\n                    this.style.overflow = \"hidden\";\n                }\n\n                for (p in prop) {\n                    e = new jQuery.fx(this, opt, p);\n                    val = prop[p];\n\n                    if (rfxtypes.test(val)) {\n\n                        // Tracks whether to show or hide based on private\n                        // data attached to the element\n                        method = jQuery._data(this, \"toggle\" + p) || (val === \"toggle\" ? hidden ? \"show\" : \"hide\" : 0);\n                        if (method) {\n                            jQuery._data(this, \"toggle\" + p, method === \"show\" ? \"hide\" : \"show\");\n                            e[method]();\n                        } else {\n                            e[val]();\n                        }\n\n                    } else {\n                        parts = rfxnum.exec(val);\n                        start = e.cur();\n\n                        if (parts) {\n                            end = parseFloat(parts[2]);\n                            unit = parts[3] || (jQuery.cssNumber[p] ? \"\" : \"px\");\n\n                            // We need to compute starting value\n                            if (unit !== \"px\") {\n                                jQuery.style(this, p, (end || 1) + unit);\n                                start = ((end || 1) / e.cur()) * start;\n                                jQuery.style(this, p, start + unit);\n                            }\n\n                            // If a +=/-= token was provided, we're doing a relative animation\n                            if (parts[1]) {\n                                end = ((parts[1] === \"-=\" ? -1 : 1) * end) + start;\n                            }\n\n                            e.custom(start, end, unit);\n\n                        } else {\n                            e.custom(start, val, \"\");\n                        }\n                    }\n                }\n\n                // For JS strict compliance\n                return true;\n            }\n\n            return optall.queue === false ?\n\t\t\tthis.each(doAnimation) :\n\t\t\tthis.queue(optall.queue, doAnimation);\n        },\n\n        stop: function (type, clearQueue, gotoEnd) {\n            if (typeof type !== \"string\") {\n                gotoEnd = clearQueue;\n                clearQueue = type;\n                type = undefined;\n            }\n            if (clearQueue && type !== false) {\n                this.queue(type || \"fx\", []);\n            }\n\n            return this.each(function () {\n                var index,\n\t\t\t\thadTimers = false,\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = jQuery._data(this);\n\n                // clear marker counters if we know they won't be\n                if (!gotoEnd) {\n                    jQuery._unmark(true, this);\n                }\n\n                function stopQueue(elem, data, index) {\n                    var hooks = data[index];\n                    jQuery.removeData(elem, index, true);\n                    hooks.stop(gotoEnd);\n                }\n\n                if (type == null) {\n                    for (index in data) {\n                        if (data[index] && data[index].stop && index.indexOf(\".run\") === index.length - 4) {\n                            stopQueue(this, data, index);\n                        }\n                    }\n                } else if (data[index = type + \".run\"] && data[index].stop) {\n                    stopQueue(this, data, index);\n                }\n\n                for (index = timers.length; index--; ) {\n                    if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n                        if (gotoEnd) {\n\n                            // force the next step to be the last\n                            timers[index](true);\n                        } else {\n                            timers[index].saveState();\n                        }\n                        hadTimers = true;\n                        timers.splice(index, 1);\n                    }\n                }\n\n                // start the next in the queue if the last step wasn't forced\n                // timers currently will call their complete callbacks, which will dequeue\n                // but only if they were gotoEnd\n                if (!(gotoEnd && hadTimers)) {\n                    jQuery.dequeue(this, type);\n                }\n            });\n        }\n\n    });\n\n    // Animations created synchronously will run synchronously\n    function createFxNow() {\n        setTimeout(clearFxNow, 0);\n        return (fxNow = jQuery.now());\n    }\n\n    function clearFxNow() {\n        fxNow = undefined;\n    }\n\n    // Generate parameters to create a standard animation\n    function genFx(type, num) {\n        var obj = {};\n\n        jQuery.each(fxAttrs.concat.apply([], fxAttrs.slice(0, num)), function () {\n            obj[this] = type;\n        });\n\n        return obj;\n    }\n\n    // Generate shortcuts for custom animations\n    jQuery.each({\n        slideDown: genFx(\"show\", 1),\n        slideUp: genFx(\"hide\", 1),\n        slideToggle: genFx(\"toggle\", 1),\n        fadeIn: { opacity: \"show\" },\n        fadeOut: { opacity: \"hide\" },\n        fadeToggle: { opacity: \"toggle\" }\n    }, function (name, props) {\n        jQuery.fn[name] = function (speed, easing, callback) {\n            return this.animate(props, speed, easing, callback);\n        };\n    });\n\n    jQuery.extend({\n        speed: function (speed, easing, fn) {\n            var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n                complete: fn || !fn && easing ||\n\t\t\t\tjQuery.isFunction(speed) && speed,\n                duration: speed,\n                easing: fn && easing || easing && !jQuery.isFunction(easing) && easing\n            };\n\n            opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;\n\n            // normalize opt.queue - true/undefined/null -> \"fx\"\n            if (opt.queue == null || opt.queue === true) {\n                opt.queue = \"fx\";\n            }\n\n            // Queueing\n            opt.old = opt.complete;\n\n            opt.complete = function (noUnmark) {\n                if (jQuery.isFunction(opt.old)) {\n                    opt.old.call(this);\n                }\n\n                if (opt.queue) {\n                    jQuery.dequeue(this, opt.queue);\n                } else if (noUnmark !== false) {\n                    jQuery._unmark(this);\n                }\n            };\n\n            return opt;\n        },\n\n        easing: {\n            linear: function (p) {\n                return p;\n            },\n            swing: function (p) {\n                return (-Math.cos(p * Math.PI) / 2) + 0.5;\n            }\n        },\n\n        timers: [],\n\n        fx: function (elem, options, prop) {\n            this.options = options;\n            this.elem = elem;\n            this.prop = prop;\n\n            options.orig = options.orig || {};\n        }\n\n    });\n\n    jQuery.fx.prototype = {\n        // Simple function for setting a style value\n        update: function () {\n            if (this.options.step) {\n                this.options.step.call(this.elem, this.now, this);\n            }\n\n            (jQuery.fx.step[this.prop] || jQuery.fx.step._default)(this);\n        },\n\n        // Get the current size\n        cur: function () {\n            if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) {\n                return this.elem[this.prop];\n            }\n\n            var parsed,\n\t\t\tr = jQuery.css(this.elem, this.prop);\n            // Empty strings, null, undefined and \"auto\" are converted to 0,\n            // complex values such as \"rotate(1rad)\" are returned as is,\n            // simple values such as \"10px\" are parsed to Float.\n            return isNaN(parsed = parseFloat(r)) ? !r || r === \"auto\" ? 0 : r : parsed;\n        },\n\n        // Start an animation from one number to another\n        custom: function (from, to, unit) {\n            var self = this,\n\t\t\tfx = jQuery.fx;\n\n            this.startTime = fxNow || createFxNow();\n            this.end = to;\n            this.now = this.start = from;\n            this.pos = this.state = 0;\n            this.unit = unit || this.unit || (jQuery.cssNumber[this.prop] ? \"\" : \"px\");\n\n            function t(gotoEnd) {\n                return self.step(gotoEnd);\n            }\n\n            t.queue = this.options.queue;\n            t.elem = this.elem;\n            t.saveState = function () {\n                if (jQuery._data(self.elem, \"fxshow\" + self.prop) === undefined) {\n                    if (self.options.hide) {\n                        jQuery._data(self.elem, \"fxshow\" + self.prop, self.start);\n                    } else if (self.options.show) {\n                        jQuery._data(self.elem, \"fxshow\" + self.prop, self.end);\n                    }\n                }\n            };\n\n            if (t() && jQuery.timers.push(t) && !timerId) {\n                timerId = setInterval(fx.tick, fx.interval);\n            }\n        },\n\n        // Simple 'show' function\n        show: function () {\n            var dataShow = jQuery._data(this.elem, \"fxshow\" + this.prop);\n\n            // Remember where we started, so that we can go back to it later\n            this.options.orig[this.prop] = dataShow || jQuery.style(this.elem, this.prop);\n            this.options.show = true;\n\n            // Begin the animation\n            // Make sure that we start at a small width/height to avoid any flash of content\n            if (dataShow !== undefined) {\n                // This show is picking up where a previous hide or show left off\n                this.custom(this.cur(), dataShow);\n            } else {\n                this.custom(this.prop === \"width\" || this.prop === \"height\" ? 1 : 0, this.cur());\n            }\n\n            // Start by showing the element\n            jQuery(this.elem).show();\n        },\n\n        // Simple 'hide' function\n        hide: function () {\n            // Remember where we started, so that we can go back to it later\n            this.options.orig[this.prop] = jQuery._data(this.elem, \"fxshow\" + this.prop) || jQuery.style(this.elem, this.prop);\n            this.options.hide = true;\n\n            // Begin the animation\n            this.custom(this.cur(), 0);\n        },\n\n        // Each step of an animation\n        step: function (gotoEnd) {\n            var p, n, complete,\n\t\t\tt = fxNow || createFxNow(),\n\t\t\tdone = true,\n\t\t\telem = this.elem,\n\t\t\toptions = this.options;\n\n            if (gotoEnd || t >= options.duration + this.startTime) {\n                this.now = this.end;\n                this.pos = this.state = 1;\n                this.update();\n\n                options.animatedProperties[this.prop] = true;\n\n                for (p in options.animatedProperties) {\n                    if (options.animatedProperties[p] !== true) {\n                        done = false;\n                    }\n                }\n\n                if (done) {\n                    // Reset the overflow\n                    if (options.overflow != null && !jQuery.support.shrinkWrapBlocks) {\n\n                        jQuery.each([\"\", \"X\", \"Y\"], function (index, value) {\n                            elem.style[\"overflow\" + value] = options.overflow[index];\n                        });\n                    }\n\n                    // Hide the element if the \"hide\" operation was done\n                    if (options.hide) {\n                        jQuery(elem).hide();\n                    }\n\n                    // Reset the properties, if the item has been hidden or shown\n                    if (options.hide || options.show) {\n                        for (p in options.animatedProperties) {\n                            jQuery.style(elem, p, options.orig[p]);\n                            jQuery.removeData(elem, \"fxshow\" + p, true);\n                            // Toggle data is no longer needed\n                            jQuery.removeData(elem, \"toggle\" + p, true);\n                        }\n                    }\n\n                    // Execute the complete function\n                    // in the event that the complete function throws an exception\n                    // we must ensure it won't be called twice. #5684\n\n                    complete = options.complete;\n                    if (complete) {\n\n                        options.complete = false;\n                        complete.call(elem);\n                    }\n                }\n\n                return false;\n\n            } else {\n                // classical easing cannot be used with an Infinity duration\n                if (options.duration == Infinity) {\n                    this.now = t;\n                } else {\n                    n = t - this.startTime;\n                    this.state = n / options.duration;\n\n                    // Perform the easing function, defaults to swing\n                    this.pos = jQuery.easing[options.animatedProperties[this.prop]](this.state, n, 0, 1, options.duration);\n                    this.now = this.start + ((this.end - this.start) * this.pos);\n                }\n                // Perform the next step of the animation\n                this.update();\n            }\n\n            return true;\n        }\n    };\n\n    jQuery.extend(jQuery.fx, {\n        tick: function () {\n            var timer,\n\t\t\ttimers = jQuery.timers,\n\t\t\ti = 0;\n\n            for (; i < timers.length; i++) {\n                timer = timers[i];\n                // Checks the timer has not already been removed\n                if (!timer() && timers[i] === timer) {\n                    timers.splice(i--, 1);\n                }\n            }\n\n            if (!timers.length) {\n                jQuery.fx.stop();\n            }\n        },\n\n        interval: 13,\n\n        stop: function () {\n            clearInterval(timerId);\n            timerId = null;\n        },\n\n        speeds: {\n            slow: 600,\n            fast: 200,\n            // Default speed\n            _default: 400\n        },\n\n        step: {\n            opacity: function (fx) {\n                jQuery.style(fx.elem, \"opacity\", fx.now);\n            },\n\n            _default: function (fx) {\n                if (fx.elem.style && fx.elem.style[fx.prop] != null) {\n                    fx.elem.style[fx.prop] = fx.now + fx.unit;\n                } else {\n                    fx.elem[fx.prop] = fx.now;\n                }\n            }\n        }\n    });\n\n    // Ensure props that can't be negative don't go there on undershoot easing\n    jQuery.each(fxAttrs.concat.apply([], fxAttrs), function (i, prop) {\n        // exclude marginTop, marginLeft, marginBottom and marginRight from this list\n        if (prop.indexOf(\"margin\")) {\n            jQuery.fx.step[prop] = function (fx) {\n                jQuery.style(fx.elem, prop, Math.max(0, fx.now) + fx.unit);\n            };\n        }\n    });\n\n    if (jQuery.expr && jQuery.expr.filters) {\n        jQuery.expr.filters.animated = function (elem) {\n            return jQuery.grep(jQuery.timers, function (fn) {\n                return elem === fn.elem;\n            }).length;\n        };\n    }\n\n    // Try to restore the default display value of an element\n    function defaultDisplay(nodeName) {\n\n        if (!elemdisplay[nodeName]) {\n\n            var body = document.body,\n\t\t\telem = jQuery(\"<\" + nodeName + \">\").appendTo(body),\n\t\t\tdisplay = elem.css(\"display\");\n            elem.remove();\n\n            // If the simple way fails,\n            // get element's real default display by attaching it to a temp iframe\n            if (display === \"none\" || display === \"\") {\n                // No iframe to use yet, so create it\n                if (!iframe) {\n                    iframe = document.createElement(\"iframe\");\n                    iframe.frameBorder = iframe.width = iframe.height = 0;\n                }\n\n                body.appendChild(iframe);\n\n                // Create a cacheable copy of the iframe document on first call.\n                // IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML\n                // document to it; WebKit & Firefox won't allow reusing the iframe document.\n                if (!iframeDoc || !iframe.createElement) {\n                    iframeDoc = (iframe.contentWindow || iframe.contentDocument).document;\n                    iframeDoc.write((jQuery.support.boxModel ? \"<!doctype html>\" : \"\") + \"<html><body>\");\n                    iframeDoc.close();\n                }\n\n                elem = iframeDoc.createElement(nodeName);\n\n                iframeDoc.body.appendChild(elem);\n\n                display = jQuery.css(elem, \"display\");\n                body.removeChild(iframe);\n            }\n\n            // Store the correct default display\n            elemdisplay[nodeName] = display;\n        }\n\n        return elemdisplay[nodeName];\n    }\n\n\n\n\n    var getOffset,\n\trtable = /^t(?:able|d|h)$/i,\n\trroot = /^(?:body|html)$/i;\n\n    if (\"getBoundingClientRect\" in document.documentElement) {\n        getOffset = function (elem, doc, docElem, box) {\n            try {\n                box = elem.getBoundingClientRect();\n            } catch (e) { }\n\n            // Make sure we're not dealing with a disconnected DOM node\n            if (!box || !jQuery.contains(docElem, elem)) {\n                return box ? { top: box.top, left: box.left} : { top: 0, left: 0 };\n            }\n\n            var body = doc.body,\n\t\t\twin = getWindow(doc),\n\t\t\tclientTop = docElem.clientTop || body.clientTop || 0,\n\t\t\tclientLeft = docElem.clientLeft || body.clientLeft || 0,\n\t\t\tscrollTop = win.pageYOffset || jQuery.support.boxModel && docElem.scrollTop || body.scrollTop,\n\t\t\tscrollLeft = win.pageXOffset || jQuery.support.boxModel && docElem.scrollLeft || body.scrollLeft,\n\t\t\ttop = box.top + scrollTop - clientTop,\n\t\t\tleft = box.left + scrollLeft - clientLeft;\n\n            return { top: top, left: left };\n        };\n\n    } else {\n        getOffset = function (elem, doc, docElem) {\n            var computedStyle,\n\t\t\toffsetParent = elem.offsetParent,\n\t\t\tprevOffsetParent = elem,\n\t\t\tbody = doc.body,\n\t\t\tdefaultView = doc.defaultView,\n\t\t\tprevComputedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle,\n\t\t\ttop = elem.offsetTop,\n\t\t\tleft = elem.offsetLeft;\n\n            while ((elem = elem.parentNode) && elem !== body && elem !== docElem) {\n                if (jQuery.support.fixedPosition && prevComputedStyle.position === \"fixed\") {\n                    break;\n                }\n\n                computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;\n                top -= elem.scrollTop;\n                left -= elem.scrollLeft;\n\n                if (elem === offsetParent) {\n                    top += elem.offsetTop;\n                    left += elem.offsetLeft;\n\n                    if (jQuery.support.doesNotAddBorder && !(jQuery.support.doesAddBorderForTableAndCells && rtable.test(elem.nodeName))) {\n                        top += parseFloat(computedStyle.borderTopWidth) || 0;\n                        left += parseFloat(computedStyle.borderLeftWidth) || 0;\n                    }\n\n                    prevOffsetParent = offsetParent;\n                    offsetParent = elem.offsetParent;\n                }\n\n                if (jQuery.support.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== \"visible\") {\n                    top += parseFloat(computedStyle.borderTopWidth) || 0;\n                    left += parseFloat(computedStyle.borderLeftWidth) || 0;\n                }\n\n                prevComputedStyle = computedStyle;\n            }\n\n            if (prevComputedStyle.position === \"relative\" || prevComputedStyle.position === \"static\") {\n                top += body.offsetTop;\n                left += body.offsetLeft;\n            }\n\n            if (jQuery.support.fixedPosition && prevComputedStyle.position === \"fixed\") {\n                top += Math.max(docElem.scrollTop, body.scrollTop);\n                left += Math.max(docElem.scrollLeft, body.scrollLeft);\n            }\n\n            return { top: top, left: left };\n        };\n    }\n\n    jQuery.fn.offset = function (options) {\n        if (arguments.length) {\n            return options === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function (i) {\n\t\t\t    jQuery.offset.setOffset(this, options, i);\n\t\t\t});\n        }\n\n        var elem = this[0],\n\t\tdoc = elem && elem.ownerDocument;\n\n        if (!doc) {\n            return null;\n        }\n\n        if (elem === doc.body) {\n            return jQuery.offset.bodyOffset(elem);\n        }\n\n        return getOffset(elem, doc, doc.documentElement);\n    };\n\n    jQuery.offset = {\n\n        bodyOffset: function (body) {\n            var top = body.offsetTop,\n\t\t\tleft = body.offsetLeft;\n\n            if (jQuery.support.doesNotIncludeMarginInBodyOffset) {\n                top += parseFloat(jQuery.css(body, \"marginTop\")) || 0;\n                left += parseFloat(jQuery.css(body, \"marginLeft\")) || 0;\n            }\n\n            return { top: top, left: left };\n        },\n\n        setOffset: function (elem, options, i) {\n            var position = jQuery.css(elem, \"position\");\n\n            // set position first, in-case top/left are set even on static elem\n            if (position === \"static\") {\n                elem.style.position = \"relative\";\n            }\n\n            var curElem = jQuery(elem),\n\t\t\tcurOffset = curElem.offset(),\n\t\t\tcurCSSTop = jQuery.css(elem, \"top\"),\n\t\t\tcurCSSLeft = jQuery.css(elem, \"left\"),\n\t\t\tcalculatePosition = (position === \"absolute\" || position === \"fixed\") && jQuery.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\n\t\t\tprops = {}, curPosition = {}, curTop, curLeft;\n\n            // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\n            if (calculatePosition) {\n                curPosition = curElem.position();\n                curTop = curPosition.top;\n                curLeft = curPosition.left;\n            } else {\n                curTop = parseFloat(curCSSTop) || 0;\n                curLeft = parseFloat(curCSSLeft) || 0;\n            }\n\n            if (jQuery.isFunction(options)) {\n                options = options.call(elem, i, curOffset);\n            }\n\n            if (options.top != null) {\n                props.top = (options.top - curOffset.top) + curTop;\n            }\n            if (options.left != null) {\n                props.left = (options.left - curOffset.left) + curLeft;\n            }\n\n            if (\"using\" in options) {\n                options.using.call(elem, props);\n            } else {\n                curElem.css(props);\n            }\n        }\n    };\n\n\n    jQuery.fn.extend({\n\n        position: function () {\n            if (!this[0]) {\n                return null;\n            }\n\n            var elem = this[0],\n\n            // Get *real* offsetParent\n\t\toffsetParent = this.offsetParent(),\n\n            // Get correct offsets\n\t\toffset = this.offset(),\n\t\tparentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0} : offsetParent.offset();\n\n            // Subtract element margins\n            // note: when an element has margin: auto the offsetLeft and marginLeft\n            // are the same in Safari causing offset.left to incorrectly be 0\n            offset.top -= parseFloat(jQuery.css(elem, \"marginTop\")) || 0;\n            offset.left -= parseFloat(jQuery.css(elem, \"marginLeft\")) || 0;\n\n            // Add offsetParent borders\n            parentOffset.top += parseFloat(jQuery.css(offsetParent[0], \"borderTopWidth\")) || 0;\n            parentOffset.left += parseFloat(jQuery.css(offsetParent[0], \"borderLeftWidth\")) || 0;\n\n            // Subtract the two offsets\n            return {\n                top: offset.top - parentOffset.top,\n                left: offset.left - parentOffset.left\n            };\n        },\n\n        offsetParent: function () {\n            return this.map(function () {\n                var offsetParent = this.offsetParent || document.body;\n                while (offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, \"position\") === \"static\")) {\n                    offsetParent = offsetParent.offsetParent;\n                }\n                return offsetParent;\n            });\n        }\n    });\n\n\n    // Create scrollLeft and scrollTop methods\n    jQuery.each({ scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function (method, prop) {\n        var top = /Y/.test(prop);\n\n        jQuery.fn[method] = function (val) {\n            return jQuery.access(this, function (elem, method, val) {\n                var win = getWindow(elem);\n\n                if (val === undefined) {\n                    return win ? (prop in win) ? win[prop] :\n\t\t\t\t\tjQuery.support.boxModel && win.document.documentElement[method] ||\n\t\t\t\t\t\twin.document.body[method] :\n\t\t\t\t\telem[method];\n                }\n\n                if (win) {\n                    win.scrollTo(\n\t\t\t\t\t!top ? val : jQuery(win).scrollLeft(),\n\t\t\t\t\t top ? val : jQuery(win).scrollTop()\n\t\t\t\t);\n\n                } else {\n                    elem[method] = val;\n                }\n            }, method, val, arguments.length, null);\n        };\n    });\n\n    function getWindow(elem) {\n        return jQuery.isWindow(elem) ?\n\t\telem :\n\t\telem.nodeType === 9 ?\n\t\t\telem.defaultView || elem.parentWindow :\n\t\t\tfalse;\n    }\n\n\n\n\n    // Create width, height, innerHeight, innerWidth, outerHeight and outerWidth methods\n    jQuery.each({ Height: \"height\", Width: \"width\" }, function (name, type) {\n        var clientProp = \"client\" + name,\n\t\tscrollProp = \"scroll\" + name,\n\t\toffsetProp = \"offset\" + name;\n\n        // innerHeight and innerWidth\n        jQuery.fn[\"inner\" + name] = function () {\n            var elem = this[0];\n            return elem ?\n\t\t\telem.style ?\n\t\t\tparseFloat(jQuery.css(elem, type, \"padding\")) :\n\t\t\tthis[type]() :\n\t\t\tnull;\n        };\n\n        // outerHeight and outerWidth\n        jQuery.fn[\"outer\" + name] = function (margin) {\n            var elem = this[0];\n            return elem ?\n\t\t\telem.style ?\n\t\t\tparseFloat(jQuery.css(elem, type, margin ? \"margin\" : \"border\")) :\n\t\t\tthis[type]() :\n\t\t\tnull;\n        };\n\n        jQuery.fn[type] = function (value) {\n            return jQuery.access(this, function (elem, type, value) {\n                var doc, docElemProp, orig, ret;\n\n                if (jQuery.isWindow(elem)) {\n                    // 3rd condition allows Nokia support, as it supports the docElem prop but not CSS1Compat\n                    doc = elem.document;\n                    docElemProp = doc.documentElement[clientProp];\n                    return jQuery.support.boxModel && docElemProp ||\n\t\t\t\t\tdoc.body && doc.body[clientProp] || docElemProp;\n                }\n\n                // Get document width or height\n                if (elem.nodeType === 9) {\n                    // Either scroll[Width/Height] or offset[Width/Height], whichever is greater\n                    doc = elem.documentElement;\n\n                    // when a window > document, IE6 reports a offset[Width/Height] > client[Width/Height]\n                    // so we can't use max, as it'll choose the incorrect offset[Width/Height]\n                    // instead we use the correct client[Width/Height]\n                    // support:IE6\n                    if (doc[clientProp] >= doc[scrollProp]) {\n                        return doc[clientProp];\n                    }\n\n                    return Math.max(\n\t\t\t\t\telem.body[scrollProp], doc[scrollProp],\n\t\t\t\t\telem.body[offsetProp], doc[offsetProp]\n\t\t\t\t);\n                }\n\n                // Get width or height on the element\n                if (value === undefined) {\n                    orig = jQuery.css(elem, type);\n                    ret = parseFloat(orig);\n                    return jQuery.isNumeric(ret) ? ret : orig;\n                }\n\n                // Set the width or height on the element\n                jQuery(elem).css(type, value);\n            }, type, value, arguments.length, null);\n        };\n    });\n\n\n\n\n    // Expose jQuery to the global object\n    window.jQuery = window.$ = jQuery;\n\n    // Expose jQuery as an AMD module, but only for AMD loaders that\n    // understand the issues with loading multiple versions of jQuery\n    // in a page that all might call define(). The loader will indicate\n    // they have special allowances for multiple jQuery versions by\n    // specifying define.amd.jQuery = true. Register as a named module,\n    // since jQuery can be concatenated with other files that may use define,\n    // but not use a proper concatenation script that understands anonymous\n    // AMD modules. A named AMD is safest and most robust way to register.\n    // Lowercase jquery is used because AMD module names are derived from\n    // file names, and jQuery is normally delivered in a lowercase file name.\n    // Do this after creating the global so that if an AMD module wants to call\n    // noConflict to hide this version of jQuery, it will work.\n    if (typeof define === \"function\" && define.amd && define.amd.jQuery) {\n        define(\"jquery\", [], function () { return jQuery; });\n    }\n\n\n\n})(window);\n"]],"start1":0,"start2":0,"length1":0,"length2":335811}]],"length":335811}
{"contributors":[],"silentsave":false,"ts":1357250029340,"patch":[[{"diffs":[[0,"/*!"],[-1,"\n* jQuery JavaScript Library v1.7.2\n* http://jquery.com/\n*\n* Copyright 2011, John Resig\n* Dual licensed under the MIT or GPL Version 2 licenses.\n* http://jquery.org/license\n*\n* Includes Sizzle.js\n* http://sizzlejs.com/\n* Copyright 2011, The Dojo Foundation\n* Released under the MIT, BSD, and GPL Licenses.\n*\n* Date: Wed Mar 21 12:46:34 2012 -0700\n*/\n(function (window, undefined) {\n\n    // Use the correct document accordingly with window argument (sandbox)\n    var document = window.document,\n\tnavigator = window.navigator,\n\tlocation = window.location;\n    var jQuery = (function () {\n\n        // Define a local copy of jQuery\n        var jQuery = function (selector, context) {\n            // The jQuery object is actually just the init constructor 'enhanced'\n            return new jQuery.fn.init(selector, context, rootjQuery);\n        },\n\n        // Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n        // Map over the $ in case of overwrite\n\t_$ = window.$,\n\n        // A central reference to the root jQuery(document)\n\trootjQuery,\n\n        // A simple way to check for HTML strings or ID strings\n        // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\tquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,\n\n        // Check if a string has a non-whitespace character in it\n\trnotwhite = /\\S/,\n\n        // Used for trimming whitespace\n\ttrimLeft = /^\\s+/,\n\ttrimRight = /\\s+$/,\n\n        // Match a standalone tag\n\trsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/,\n\n        // JSON RegExp\n\trvalidchars = /^[\\],:{}\\s]*$/,\n\trvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\n\trvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\n\trvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\n\n        // Useragent RegExp\n\trwebkit = /(webkit)[ \\/]([\\w.]+)/,\n\tropera = /(opera)(?:.*version)?[ \\/]([\\w.]+)/,\n\trmsie = /(msie) ([\\w.]+)/,\n\trmozilla = /(mozilla)(?:.*? rv:([\\w.]+))?/,\n\n        // Matches dashed string for camelizing\n\trdashAlpha = /-([a-z]|[0-9])/ig,\n\trmsPrefix = /^-ms-/,\n\n        // Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function (all, letter) {\n\t    return (letter + \"\").toUpperCase();\n\t},\n\n        // Keep a UserAgent string for use with jQuery.browser\n\tuserAgent = navigator.userAgent,\n\n        // For matching the engine and version of the browser\n\tbrowserMatch,\n\n        // The deferred used on DOM ready\n\treadyList,\n\n        // The ready event handler\n\tDOMContentLoaded,\n\n        // Save a reference to some core methods\n\ttoString = Object.prototype.toString,\n\thasOwn = Object.prototype.hasOwnProperty,\n\tpush = Array.prototype.push,\n\tslice = Array.prototype.slice,\n\ttrim = String.prototype.trim,\n\tindexOf = Array.prototype.indexOf,\n\n        // [[Class]] -> type pairs\n\tclass2type = {};\n\n        jQuery.fn = jQuery.prototype = {\n            constructor: jQuery,\n            init: function (selector, context, rootjQuery) {\n                var match, elem, ret, doc;\n\n                // Handle $(\"\"), $(null), or $(undefined)\n                if (!selector) {\n                    return this;\n                }\n\n                // Handle $(DOMElement)\n                if (selector.nodeType) {\n                    this.context = this[0] = selector;\n                    this.length = 1;\n                    return this;\n                }\n\n                // The body element only exists once, optimize finding it\n                if (selector === \"body\" && !context && document.body) {\n                    this.context = document;\n                    this[0] = document.body;\n                    this.selector = selector;\n                    this.length = 1;\n                    return this;\n                }\n\n                // Handle HTML strings\n                if (typeof selector === \"string\") {\n                    // Are we dealing with HTML string or an ID?\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\n                        // Assume that strings that start and end with <> are HTML and skip the regex check\n                        match = [null, selector, null];\n\n                    } else {\n                        match = quickExpr.exec(selector);\n                    }\n\n                    // Verify a match, and that no context was specified for #id\n                    if (match && (match[1] || !context)) {\n\n                        // HANDLE: $(html) -> $(array)\n                        if (match[1]) {\n                            context = context instanceof jQuery ? context[0] : context;\n                            doc = (context ? context.ownerDocument || context : document);\n\n                            // If a single string is passed in and it's a single tag\n                            // just do a createElement and skip the rest\n                            ret = rsingleTag.exec(selector);\n\n                            if (ret) {\n                                if (jQuery.isPlainObject(context)) {\n                                    selector = [document.createElement(ret[1])];\n                                    jQuery.fn.attr.call(selector, context, true);\n\n                                } else {\n                                    selector = [doc.createElement(ret[1])];\n                                }\n\n                            } else {\n                                ret = jQuery.buildFragment([match[1]], [doc]);\n                                selector = (ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment).childNodes;\n                            }\n\n                            return jQuery.merge(this, selector);\n\n                            // HANDLE: $(\"#id\")\n                        } else {\n                            elem = document.getElementById(match[2]);\n\n                            // Check parentNode to catch when Blackberry 4.6 returns\n                            // nodes that are no longer in the document #6963\n                            if (elem && elem.parentNode) {\n                                // Handle the case where IE and Opera return items\n                                // by name instead of ID\n                                if (elem.id !== match[2]) {\n                                    return rootjQuery.find(selector);\n                                }\n\n                                // Otherwise, we inject the element directly into the jQuery object\n                                this.length = 1;\n                                this[0] = elem;\n                            }\n\n                            this.context = document;\n                            this.selector = selector;\n                            return this;\n                        }\n\n                        // HANDLE: $(expr, $(...))\n                    } else if (!context || context.jquery) {\n                        return (context || rootjQuery).find(selector);\n\n                        // HANDLE: $(expr, context)\n                        // (which is just equivalent to: $(context).find(expr)\n                    } else {\n                        return this.constructor(context).find(selector);\n                    }\n\n                    // HANDLE: $(function)\n                    // Shortcut for document ready\n                } else if (jQuery.isFunction(selector)) {\n                    return rootjQuery.ready(selector);\n                }\n\n                if (selector.selector !== undefined) {\n                    this.selector = selector.selector;\n                    this.context = selector.context;\n                }\n\n                return jQuery.makeArray(selector, this);\n            },\n\n            // Start with an empty selector\n            selector: \"\",\n\n            // The current version of jQuery being used\n            jquery: \"1.7.2\",\n\n            // The default length of a jQuery object is 0\n            length: 0,\n\n            // The number of elements contained in the matched element set\n            size: function () {\n                return this.length;\n            },\n\n            toArray: function () {\n                return slice.call(this, 0);\n            },\n\n            // Get the Nth element in the matched element set OR\n            // Get the whole matched element set as a clean array\n            get: function (num) {\n                return num == null ?\n\n                // Return a 'clean' array\n\t\t\tthis.toArray() :\n\n                // Return just the object\n\t\t\t(num < 0 ? this[this.length + num] : this[num]);\n            },\n\n            // Take an array of elements and push it onto the stack\n            // (returning the new matched element set)\n            pushStack: function (elems, name, selector) {\n                // Build a new jQuery matched element set\n                var ret = this.constructor();\n\n                if (jQuery.isArray(elems)) {\n                    push.apply(ret, elems);\n\n                } else {\n                    jQuery.merge(ret, elems);\n                }\n\n                // Add the old object onto the stack (as a reference)\n                ret.prevObject = this;\n\n                ret.context = this.context;\n\n                if (name === \"find\") {\n                    ret.selector = this.selector + (this.selector ? \" \" : \"\") + selector;\n                } else if (name) {\n                    ret.selector = this.selector + \".\" + name + \"(\" + selector + \")\";\n                }\n\n                // Return the newly-formed element set\n                return ret;\n            },\n\n            // Execute a callback for every element in the matched set.\n            // (You can seed the arguments with an array of args, but this is\n            // only used internally.)\n            each: function (callback, args) {\n                return jQuery.each(this, callback, args);\n            },\n\n            ready: function (fn) {\n                // Attach the listeners\n                jQuery.bindReady();\n\n                // Add the callback\n                readyList.add(fn);\n\n                return this;\n            },\n\n            eq: function (i) {\n                i = +i;\n                return i === -1 ?\n\t\t\tthis.slice(i) :\n\t\t\tthis.slice(i, i + 1);\n            },\n\n            first: function () {\n                return this.eq(0);\n            },\n\n            last: function () {\n                return this.eq(-1);\n            },\n\n            slice: function () {\n                return this.pushStack(slice.apply(this, arguments),\n\t\t\t\"slice\", slice.call(arguments).join(\",\"));\n            },\n\n            map: function (callback) {\n                return this.pushStack(jQuery.map(this, function (elem, i) {\n                    return callback.call(elem, i, elem);\n                }));\n            },\n\n            end: function () {\n                return this.prevObject || this.constructor(null);\n            },\n\n            // For internal use only.\n            // Behaves like an Array's method, not like a jQuery method.\n            push: push,\n            sort: [].sort,\n            splice: [].splice\n        };\n\n        // Give the init function the jQuery prototype for later instantiation\n        jQuery.fn.init.prototype = jQuery.fn;\n\n        jQuery.extend = jQuery.fn.extend = function () {\n            var options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n            // Handle a deep copy situation\n            if (typeof target === \"boolean\") {\n                deep = target;\n                target = arguments[1] || {};\n                // skip the boolean and the target\n                i = 2;\n            }\n\n            // Handle case when target is a string or something (possible in deep copy)\n            if (typeof target !== \"object\" && !jQuery.isFunction(target)) {\n                target = {};\n            }\n\n            // extend jQuery itself if only one argument is passed\n            if (length === i) {\n                target = this;\n                --i;\n            }\n\n            for (; i < length; i++) {\n                // Only deal with non-null/undefined values\n                if ((options = arguments[i]) != null) {\n                    // Extend the base object\n                    for (name in options) {\n                        src = target[name];\n                        copy = options[name];\n\n                        // Prevent never-ending loop\n                        if (target === copy) {\n                            continue;\n                        }\n\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {\n                            if (copyIsArray) {\n                                copyIsArray = false;\n                                clone = src && jQuery.isArray(src) ? src : [];\n\n                            } else {\n                                clone = src && jQuery.isPlainObject(src) ? src : {};\n                            }\n\n                            // Never move original objects, clone them\n                            target[name] = jQuery.extend(deep, clone, copy);\n\n                            // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n                            target[name] = copy;\n                        }\n                    }\n                }\n            }\n\n            // Return the modified object\n            return target;\n        };\n\n        jQuery.extend({\n            noConflict: function (deep) {\n                if (window.$ === jQuery) {\n                    window.$ = _$;\n                }\n\n                if (deep && window.jQuery === jQuery) {\n                    window.jQuery = _jQuery;\n                }\n\n                return jQuery;\n            },\n\n            // Is the DOM ready to be used? Set to true once it occurs.\n            isReady: false,\n\n            // A counter to track how many items to wait for before\n            // the ready event fires. See #6781\n            readyWait: 1,\n\n            // Hold (or release) the ready event\n            holdReady: function (hold) {\n                if (hold) {\n                    jQuery.readyWait++;\n                } else {\n                    jQuery.ready(true);\n                }\n            },\n\n            // Handle when the DOM is ready\n            ready: function (wait) {\n                // Either a released hold or an DOMready/load event and not yet ready\n                if ((wait === true && ! --jQuery.readyWait) || (wait !== true && !jQuery.isReady)) {\n                    // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n                    if (!document.body) {\n                        return setTimeout(jQuery.ready, 1);\n                    }\n\n                    // Remember that the DOM is ready\n                    jQuery.isReady = true;\n\n                    // If a normal DOM Ready event fired, decrement, and wait if need be\n                    if (wait !== true && --jQuery.readyWait > 0) {\n                        return;\n                    }\n\n                    // If there are functions bound, to execute\n                    readyList.fireWith(document, [jQuery]);\n\n                    // Trigger any bound ready events\n                    if (jQuery.fn.trigger) {\n                        jQuery(document).trigger(\"ready\").off(\"ready\");\n                    }\n                }\n            },\n\n            bindReady: function () {\n                if (readyList) {\n                    return;\n                }\n\n                readyList = jQuery.Callbacks(\"once memory\");\n\n                // Catch cases where $(document).ready() is called after the\n                // browser event has already occurred.\n                if (document.readyState === \"complete\") {\n                    // Handle it asynchronously to allow scripts the opportunity to delay ready\n                    return setTimeout(jQuery.ready, 1);\n                }\n\n                // Mozilla, Opera and webkit nightlies currently support this event\n                if (document.addEventListener) {\n                    // Use the handy event callback\n                    document.addEventListener(\"DOMContentLoaded\", DOMContentLoaded, false);\n\n                    // A fallback to window.onload, that will always work\n                    window.addEventListener(\"load\", jQuery.ready, false);\n\n                    // If IE event model is used\n                } else if (document.attachEvent) {\n                    // ensure firing before onload,\n                    // maybe late but safe also for iframes\n                    document.attachEvent(\"onreadystatechange\", DOMContentLoaded);\n\n                    // A fallback to window.onload, that will always work\n                    window.attachEvent(\"onload\", jQuery.ready);\n\n                    // If IE and not a frame\n                    // continually check to see if the document is ready\n                    var toplevel = false;\n\n                    try {\n                        toplevel = window.frameElement == null;\n                    } catch (e) { }\n\n                    if (document.documentElement.doScroll && toplevel) {\n                        doScrollCheck();\n                    }\n                }\n            },\n\n            // See test/unit/core.js for details concerning isFunction.\n            // Since version 1.3, DOM methods and functions like alert\n            // aren't supported. They return false on IE (#2968).\n            isFunction: function (obj) {\n                return jQuery.type(obj) === \"function\";\n            },\n\n            isArray: Array.isArray || function (obj) {\n                return jQuery.type(obj) === \"array\";\n            },\n\n            isWindow: function (obj) {\n                return obj != null && obj == obj.window;\n            },\n\n            isNumeric: function (obj) {\n                return !isNaN(parseFloat(obj)) && isFinite(obj);\n            },\n\n            type: function (obj) {\n                return obj == null ?\n\t\t\tString(obj) :\n\t\t\tclass2type[toString.call(obj)] || \"object\";\n            },\n\n            isPlainObject: function (obj) {\n                // Must be an Object.\n                // Because of IE, we also have to check the presence of the constructor property.\n                // Make sure that DOM nodes and window objects don't pass through, as well\n                if (!obj || jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow(obj)) {\n                    return false;\n                }\n\n                try {\n                    // Not own constructor property must be Object\n                    if (obj.constructor &&\n\t\t\t\t!hasOwn.call(obj, \"constructor\") &&\n\t\t\t\t!hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n                        return false;\n                    }\n                } catch (e) {\n                    // IE8,9 Will throw exceptions on certain host objects #9897\n                    return false;\n                }\n\n                // Own properties are enumerated firstly, so to speed up,\n                // if last one is own, then all properties are own.\n\n                var key;\n                for (key in obj) { }\n\n                return key === undefined || hasOwn.call(obj, key);\n            },\n\n            isEmptyObject: function (obj) {\n                for (var name in obj) {\n                    return false;\n                }\n                return true;\n            },\n\n            error: function (msg) {\n                throw new Error(msg);\n            },\n\n            parseJSON: function (data) {\n                if (typeof data !== \"string\" || !data) {\n                    return null;\n                }\n\n                // Make sure leading/trailing whitespace is removed (IE can't handle it)\n                data = jQuery.trim(data);\n\n                // Attempt to parse using the native JSON parser first\n                if (window.JSON && window.JSON.parse) {\n                    return window.JSON.parse(data);\n                }\n\n                // Make sure the incoming data is actual JSON\n                // Logic borrowed from http://json.org/json2.js\n                if (rvalidchars.test(data.replace(rvalidescape, \"@\")\n\t\t\t.replace(rvalidtokens, \"]\")\n\t\t\t.replace(rvalidbraces, \"\"))) {\n\n                    return (new Function(\"return \" + data))();\n\n                }\n                jQuery.error(\"Invalid JSON: \" + data);\n            },\n\n            // Cross-browser xml parsing\n            parseXML: function (data) {\n                if (typeof data !== \"string\" || !data) {\n                    return null;\n                }\n                var xml, tmp;\n                try {\n                    if (window.DOMParser) { // Standard\n                        tmp = new DOMParser();\n                        xml = tmp.parseFromString(data, \"text/xml\");\n                    } else { // IE\n                        xml = new ActiveXObject(\"Microsoft.XMLDOM\");\n                        xml.async = \"false\";\n                        xml.loadXML(data);\n                    }\n                } catch (e) {\n                    xml = undefined;\n                }\n                if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\n                    jQuery.error(\"Invalid XML: \" + data);\n                }\n                return xml;\n            },\n\n            noop: function () { },\n\n            // Evaluates a script in a global context\n            // Workarounds based on findings by Jim Driscoll\n            // http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n            globalEval: function (data) {\n                if (data && rnotwhite.test(data)) {\n                    // We use execScript on Internet Explorer\n                    // We use an anonymous function so that context is window\n                    // rather than jQuery in Firefox\n                    (window.execScript || function (data) {\n                        window[\"eval\"].call(window, data);\n                    })(data);\n                }\n            },\n\n            // Convert dashed to camelCase; used by the css and data modules\n            // Microsoft forgot to hump their vendor prefix (#9572)\n            camelCase: function (string) {\n                return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n            },\n\n            nodeName: function (elem, name) {\n                return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();\n            },\n\n            // args is for internal usage only\n            each: function (object, callback, args) {\n                var name, i = 0,\n\t\t\tlength = object.length,\n\t\t\tisObj = length === undefined || jQuery.isFunction(object);\n\n                if (args) {\n                    if (isObj) {\n                        for (name in object) {\n                            if (callback.apply(object[name], args) === false) {\n                                break;\n                            }\n                        }\n                    } else {\n                        for (; i < length; ) {\n                            if (callback.apply(object[i++], args) === false) {\n                                break;\n                            }\n                        }\n                    }\n\n                    // A special, fast, case for the most common use of each\n                } else {\n                    if (isObj) {\n                        for (name in object) {\n                            if (callback.call(object[name], name, object[name]) === false) {\n                                break;\n                            }\n                        }\n                    } else {\n                        for (; i < length; ) {\n                            if (callback.call(object[i], i, object[i++]) === false) {\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                return object;\n            },\n\n            // Use native String.trim function wherever possible\n            trim: trim ?\n\t\tfunction (text) {\n\t\t    return text == null ?\n\t\t\t\t\"\" :\n\t\t\t\ttrim.call(text);\n\t\t} :\n\n            // Otherwise use our own trimming functionality\n\t\tfunction (text) {\n\t\t    return text == null ?\n\t\t\t\t\"\" :\n\t\t\t\ttext.toString().replace(trimLeft, \"\").replace(trimRight, \"\");\n\t\t},\n\n            // results is for internal usage only\n            makeArray: function (array, results) {\n                var ret = results || [];\n\n                if (array != null) {\n                    // The window, strings (and functions) also have 'length'\n                    // Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930\n                    var type = jQuery.type(array);\n\n                    if (array.length == null || type === \"string\" || type === \"function\" || type === \"regexp\" || jQuery.isWindow(array)) {\n                        push.call(ret, array);\n                    } else {\n                        jQuery.merge(ret, array);\n                    }\n                }\n\n                return ret;\n            },\n\n            inArray: function (elem, array, i) {\n                var len;\n\n                if (array) {\n                    if (indexOf) {\n                        return indexOf.call(array, elem, i);\n                    }\n\n                    len = array.length;\n                    i = i ? i < 0 ? Math.max(0, len + i) : i : 0;\n\n                    for (; i < len; i++) {\n                        // Skip accessing in sparse arrays\n                        if (i in array && array[i] === elem) {\n                            return i;\n                        }\n                    }\n                }\n\n                return -1;\n            },\n\n            merge: function (first, second) {\n                var i = first.length,\n\t\t\tj = 0;\n\n                if (typeof second.length === \"number\") {\n                    for (var l = second.length; j < l; j++) {\n                        first[i++] = second[j];\n                    }\n\n                } else {\n                    while (second[j] !== undefined) {\n                        first[i++] = second[j++];\n                    }\n                }\n\n                first.length = i;\n\n                return first;\n            },\n\n            grep: function (elems, callback, inv) {\n                var ret = [], retVal;\n                inv = !!inv;\n\n                // Go through the array, only saving the items\n                // that pass the validator function\n                for (var i = 0, length = elems.length; i < length; i++) {\n                    retVal = !!callback(elems[i], i);\n                    if (inv !== retVal) {\n                        ret.push(elems[i]);\n                    }\n                }\n\n                return ret;\n            },\n\n            // arg is for internal usage only\n            map: function (elems, callback, arg) {\n                var value, key, ret = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n                // jquery objects are treated as arrays\n\t\t\tisArray = elems instanceof jQuery || length !== undefined && typeof length === \"number\" && ((length > 0 && elems[0] && elems[length - 1]) || length === 0 || jQuery.isArray(elems));\n\n                // Go through the array, translating each of the items to their\n                if (isArray) {\n                    for (; i < length; i++) {\n                        value = callback(elems[i], i, arg);\n\n                        if (value != null) {\n                            ret[ret.length] = value;\n                        }\n                    }\n\n                    // Go through every key on the object,\n                } else {\n                    for (key in elems) {\n                        value = callback(elems[key], key, arg);\n\n                        if (value != null) {\n                            ret[ret.length] = value;\n                        }\n                    }\n                }\n\n                // Flatten any nested arrays\n                return ret.concat.apply([], ret);\n            },\n\n            // A global GUID counter for objects\n            guid: 1,\n\n            // Bind a function to a context, optionally partially applying any\n            // arguments.\n            proxy: function (fn, context) {\n                if (typeof context === \"string\") {\n                    var tmp = fn[context];\n                    context = fn;\n                    fn = tmp;\n                }\n\n                // Quick check to determine if target is callable, in the spec\n                // this throws a TypeError, but we will just return undefined.\n                if (!jQuery.isFunction(fn)) {\n                    return undefined;\n                }\n\n                // Simulated bind\n                var args = slice.call(arguments, 2),\n\t\t\tproxy = function () {\n\t\t\t    return fn.apply(context, args.concat(slice.call(arguments)));\n\t\t\t};\n\n                // Set the guid of unique handler to the same of original handler, so it can be removed\n                proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;\n\n                return proxy;\n            },\n\n            // Mutifunctional method to get and set values to a collection\n            // The value/s can optionally be executed if it's a function\n            access: function (elems, fn, key, value, chainable, emptyGet, pass) {\n                var exec,\n\t\t\tbulk = key == null,\n\t\t\ti = 0,\n\t\t\tlength = elems.length;\n\n                // Sets many values\n                if (key && typeof key === \"object\") {\n                    for (i in key) {\n                        jQuery.access(elems, fn, i, key[i], 1, emptyGet, value);\n                    }\n                    chainable = 1;\n\n                    // Sets one value\n                } else if (value !== undefined) {\n                    // Optionally, function values get executed if exec is true\n                    exec = pass === undefined && jQuery.isFunction(value);\n\n                    if (bulk) {\n                        // Bulk operations only iterate when executing function values\n                        if (exec) {\n                            exec = fn;\n                            fn = function (elem, key, value) {\n                                return exec.call(jQuery(elem), value);\n                            };\n\n                            // Otherwise they run against the entire set\n                        } else {\n                            fn.call(elems, value);\n                            fn = null;\n                        }\n                    }\n\n                    if (fn) {\n                        for (; i < length; i++) {\n                            fn(elems[i], key, exec ? value.call(elems[i], i, fn(elems[i], key)) : value, pass);\n                        }\n                    }\n\n                    chainable = 1;\n                }\n\n                return chainable ?\n\t\t\telems :\n\n                // Gets\n\t\t\tbulk ?\n\t\t\t\tfn.call(elems) :\n\t\t\t\tlength ? fn(elems[0], key) : emptyGet;\n            },\n\n            now: function () {\n                return (new Date()).getTime();\n            },\n\n            // Use of jQuery.browser is frowned upon.\n            // More details: http://docs.jquery.com/Utilities/jQuery.browser\n            uaMatch: function (ua) {\n                ua = ua.toLowerCase();\n\n                var match = rwebkit.exec(ua) ||\n\t\t\tropera.exec(ua) ||\n\t\t\trmsie.exec(ua) ||\n\t\t\tua.indexOf(\"compatible\") < 0 && rmozilla.exec(ua) ||\n\t\t\t[];\n\n                return { browser: match[1] || \"\", version: match[2] || \"0\" };\n            },\n\n            sub: function () {\n                function jQuerySub(selector, context) {\n                    return new jQuerySub.fn.init(selector, context);\n                }\n                jQuery.extend(true, jQuerySub, this);\n                jQuerySub.superclass = this;\n                jQuerySub.fn = jQuerySub.prototype = this();\n                jQuerySub.fn.constructor = jQuerySub;\n                jQuerySub.sub = this.sub;\n                jQuerySub.fn.init = function init(selector, context) {\n                    if (context && context instanceof jQuery && !(context instanceof jQuerySub)) {\n                        context = jQuerySub(context);\n                    }\n\n                    return jQuery.fn.init.call(this, selector, context, rootjQuerySub);\n                };\n                jQuerySub.fn.init.prototype = jQuerySub.fn;\n                var rootjQuerySub = jQuerySub(document);\n                return jQuerySub;\n            },\n\n            browser: {}\n        });\n\n        // Populate the class2type map\n        jQuery.each(\"Boolean Number String Function Array Date RegExp Object\".split(\" \"), function (i, name) {\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n        });\n\n        browserMatch = jQuery.uaMatch(userAgent);\n        if (browserMatch.browser) {\n            jQuery.browser[browserMatch.browser] = true;\n            jQuery.browser.version = browserMatch.version;\n        }\n\n        // Deprecated, use jQuery.browser.webkit instead\n        if (jQuery.browser.webkit) {\n            jQuery.browser.safari = true;\n        }\n\n        // IE doesn't match non-breaking spaces with \\s\n        if (rnotwhite.test(\"\\xA0\")) {\n            trimLeft = /^[\\s\\xA0]+/;\n            trimRight = /[\\s\\xA0]+$/;\n        }\n\n        // All jQuery objects should point back to these\n        rootjQuery = jQuery(document);\n\n        // Cleanup functions for the document ready method\n        if (document.addEventListener) {\n            DOMContentLoaded = function () {\n                document.removeEventListener(\"DOMContentLoaded\", DOMContentLoaded, false);\n                jQuery.ready();\n            };\n\n        } else if (document.attachEvent) {\n            DOMContentLoaded = function () {\n                // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n                if (document.readyState === \"complete\") {\n                    document.detachEvent(\"onreadystatechange\", DOMContentLoaded);\n                    jQuery.ready();\n                }\n            };\n        }\n\n        // The DOM ready check for Internet Explorer\n        function doScrollCheck() {\n            if (jQuery.isReady) {\n                return;\n            }\n\n            try {\n                // If IE is used, use the trick by Diego Perini\n                // http://javascript.nwbox.com/IEContentLoaded/\n                document.documentElement.doScroll(\"left\");\n            } catch (e) {\n                setTimeout(doScrollCheck, 1);\n                return;\n            }\n\n            // and execute any waiting functions\n            jQuery.ready();\n        }\n\n        return jQuery;\n\n    })();\n\n\n    // String to Object flags format cache\n    var flagsCache = {};\n\n    // Convert String-formatted flags into Object-formatted ones and store in cache\n    function createFlags(flags) {\n        var object = flagsCache[flags] = {},\n\t\ti, length;\n        flags = flags.split(/\\s+/);\n        for (i = 0, length = flags.length; i < length; i++) {\n            object[flags[i]] = true;\n        }\n        return object;\n    }\n\n    /*\n    * Create a callback list using the following parameters:\n    *\n    *\tflags:\tan optional list of space-separated flags that will change how\n    *\t\t\tthe callback list behaves\n    *\n    * By default a callback list will act like an event callback list and can be\n    * \"fired\" multiple times.\n    *\n    * Possible flags:\n    *\n    *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n    *\n    *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n    *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n    *\t\t\t\t\tvalues (like a Deferred)\n    *\n    *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n    *\n    *\tstopOnFalse:\tinterrupt callings when a callback returns false\n    *\n    */\n    jQuery.Callbacks = function (flags) {\n\n        // Convert flags from String-formatted to Object-formatted\n        // (we check in cache first)\n        flags = flags ? (flagsCache[flags] || createFlags(flags)) : {};\n\n        var // Actual callback list\n\t\tlist = [],\n        // Stack of fire calls for repeatable lists\n\t\tstack = [],\n        // Last fire value (for non-forgettable lists)\n\t\tmemory,\n        // Flag to know if list was already fired\n\t\tfired,\n        // Flag to know if list is currently firing\n\t\tfiring,\n        // First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n        // End of the loop when firing\n\t\tfiringLength,\n        // Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n        // Add one or several callbacks to the list\n\t\tadd = function (args) {\n\t\t    var i,\n\t\t\t\tlength,\n\t\t\t\telem,\n\t\t\t\ttype,\n\t\t\t\tactual;\n\t\t    for (i = 0, length = args.length; i < length; i++) {\n\t\t        elem = args[i];\n\t\t        type = jQuery.type(elem);\n\t\t        if (type === \"array\") {\n\t\t            // Inspect recursively\n\t\t            add(elem);\n\t\t        } else if (type === \"function\") {\n\t\t            // Add if not in unique mode and callback is not in\n\t\t            if (!flags.unique || !self.has(elem)) {\n\t\t                list.push(elem);\n\t\t            }\n\t\t        }\n\t\t    }\n\t\t},\n        // Fire callbacks\n\t\tfire = function (context, args) {\n\t\t    args = args || [];\n\t\t    memory = !flags.memory || [context, args];\n\t\t    fired = true;\n\t\t    firing = true;\n\t\t    firingIndex = firingStart || 0;\n\t\t    firingStart = 0;\n\t\t    firingLength = list.length;\n\t\t    for (; list && firingIndex < firingLength; firingIndex++) {\n\t\t        if (list[firingIndex].apply(context, args) === false && flags.stopOnFalse) {\n\t\t            memory = true; // Mark as halted\n\t\t            break;\n\t\t        }\n\t\t    }\n\t\t    firing = false;\n\t\t    if (list) {\n\t\t        if (!flags.once) {\n\t\t            if (stack && stack.length) {\n\t\t                memory = stack.shift();\n\t\t                self.fireWith(memory[0], memory[1]);\n\t\t            }\n\t\t        } else if (memory === true) {\n\t\t            self.disable();\n\t\t        } else {\n\t\t            list = [];\n\t\t        }\n\t\t    }\n\t\t},\n        // Actual Callbacks object\n\t\tself = {\n\t\t    // Add a callback or a collection of callbacks to the list\n\t\t    add: function () {\n\t\t        if (list) {\n\t\t            var length = list.length;\n\t\t            add(arguments);\n\t\t            // Do we need to add the callbacks to the\n\t\t            // current firing batch?\n\t\t            if (firing) {\n\t\t                firingLength = list.length;\n\t\t                // With memory, if we're not firing then\n\t\t                // we should call right away, unless previous\n\t\t                // firing was halted (stopOnFalse)\n\t\t            } else if (memory && memory !== true) {\n\t\t                firingStart = length;\n\t\t                fire(memory[0], memory[1]);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    },\n\t\t    // Remove a callback from the list\n\t\t    remove: function () {\n\t\t        if (list) {\n\t\t            var args = arguments,\n\t\t\t\t\t\targIndex = 0,\n\t\t\t\t\t\targLength = args.length;\n\t\t            for (; argIndex < argLength; argIndex++) {\n\t\t                for (var i = 0; i < list.length; i++) {\n\t\t                    if (args[argIndex] === list[i]) {\n\t\t                        // Handle firingIndex and firingLength\n\t\t                        if (firing) {\n\t\t                            if (i <= firingLength) {\n\t\t                                firingLength--;\n\t\t                                if (i <= firingIndex) {\n\t\t                                    firingIndex--;\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                        // Remove the element\n\t\t                        list.splice(i--, 1);\n\t\t                        // If we have some unicity property then\n\t\t                        // we only need to do this once\n\t\t                        if (flags.unique) {\n\t\t                            break;\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    },\n\t\t    // Control if a given callback is in the list\n\t\t    has: function (fn) {\n\t\t        if (list) {\n\t\t            var i = 0,\n\t\t\t\t\t\tlength = list.length;\n\t\t            for (; i < length; i++) {\n\t\t                if (fn === list[i]) {\n\t\t                    return true;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return false;\n\t\t    },\n\t\t    // Remove all callbacks from the list\n\t\t    empty: function () {\n\t\t        list = [];\n\t\t        return this;\n\t\t    },\n\t\t    // Have the list do nothing anymore\n\t\t    disable: function () {\n\t\t        list = stack = memory = undefined;\n\t\t        return this;\n\t\t    },\n\t\t    // Is it disabled?\n\t\t    disabled: function () {\n\t\t        return !list;\n\t\t    },\n\t\t    // Lock the list in its current state\n\t\t    lock: function () {\n\t\t        stack = undefined;\n\t\t        if (!memory || memory === true) {\n\t\t            self.disable();\n\t\t        }\n\t\t        return this;\n\t\t    },\n\t\t    // Is it locked?\n\t\t    locked: function () {\n\t\t        return !stack;\n\t\t    },\n\t\t    // Call all callbacks with the given context and arguments\n\t\t    fireWith: function (context, args) {\n\t\t        if (stack) {\n\t\t            if (firing) {\n\t\t                if (!flags.once) {\n\t\t                    stack.push([context, args]);\n\t\t                }\n\t\t            } else if (!(flags.once && memory)) {\n\t\t                fire(context, args);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    },\n\t\t    // Call all the callbacks with the given arguments\n\t\t    fire: function () {\n\t\t        self.fireWith(this, arguments);\n\t\t        return this;\n\t\t    },\n\t\t    // To know if the callbacks have already been called at least once\n\t\t    fired: function () {\n\t\t        return !!fired;\n\t\t    }\n\t\t};\n\n        return self;\n    };\n\n\n\n\n    var // Static reference to slice\n\tsliceDeferred = [].slice;\n\n    jQuery.extend({\n\n        Deferred: function (func) {\n            var doneList = jQuery.Callbacks(\"once memory\"),\n\t\t\tfailList = jQuery.Callbacks(\"once memory\"),\n\t\t\tprogressList = jQuery.Callbacks(\"memory\"),\n\t\t\tstate = \"pending\",\n\t\t\tlists = {\n\t\t\t    resolve: doneList,\n\t\t\t    reject: failList,\n\t\t\t    notify: progressList\n\t\t\t},\n\t\t\tpromise = {\n\t\t\t    done: doneList.add,\n\t\t\t    fail: failList.add,\n\t\t\t    progress: progressList.add,\n\n\t\t\t    state: function () {\n\t\t\t        return state;\n\t\t\t    },\n\n\t\t\t    // Deprecated\n\t\t\t    isResolved: doneList.fired,\n\t\t\t    isRejected: failList.fired,\n\n\t\t\t    then: function (doneCallbacks, failCallbacks, progressCallbacks) {\n\t\t\t        deferred.done(doneCallbacks).fail(failCallbacks).progress(progressCallbacks);\n\t\t\t        return this;\n\t\t\t    },\n\t\t\t    always: function () {\n\t\t\t        deferred.done.apply(deferred, arguments).fail.apply(deferred, arguments);\n\t\t\t        return this;\n\t\t\t    },\n\t\t\t    pipe: function (fnDone, fnFail, fnProgress) {\n\t\t\t        return jQuery.Deferred(function (newDefer) {\n\t\t\t            jQuery.each({\n\t\t\t                done: [fnDone, \"resolve\"],\n\t\t\t                fail: [fnFail, \"reject\"],\n\t\t\t                progress: [fnProgress, \"notify\"]\n\t\t\t            }, function (handler, data) {\n\t\t\t                var fn = data[0],\n\t\t\t\t\t\t\t\taction = data[1],\n\t\t\t\t\t\t\t\treturned;\n\t\t\t                if (jQuery.isFunction(fn)) {\n\t\t\t                    deferred[handler](function () {\n\t\t\t                        returned = fn.apply(this, arguments);\n\t\t\t                        if (returned && jQuery.isFunction(returned.promise)) {\n\t\t\t                            returned.promise().then(newDefer.resolve, newDefer.reject, newDefer.notify);\n\t\t\t                        } else {\n\t\t\t                            newDefer[action + \"With\"](this === deferred ? newDefer : this, [returned]);\n\t\t\t                        }\n\t\t\t                    });\n\t\t\t                } else {\n\t\t\t                    deferred[handler](newDefer[action]);\n\t\t\t                }\n\t\t\t            });\n\t\t\t        }).promise();\n\t\t\t    },\n\t\t\t    // Get a promise for this deferred\n\t\t\t    // If obj is provided, the promise aspect is added to the object\n\t\t\t    promise: function (obj) {\n\t\t\t        if (obj == null) {\n\t\t\t            obj = promise;\n\t\t\t        } else {\n\t\t\t            for (var key in promise) {\n\t\t\t                obj[key] = promise[key];\n\t\t\t            }\n\t\t\t        }\n\t\t\t        return obj;\n\t\t\t    }\n\t\t\t},\n\t\t\tdeferred = promise.promise({}),\n\t\t\tkey;\n\n            for (key in lists) {\n                deferred[key] = lists[key].fire;\n                deferred[key + \"With\"] = lists[key].fireWith;\n            }\n\n            // Handle state\n            deferred.done(function () {\n                state = \"resolved\";\n            }, failList.disable, progressList.lock).fail(function () {\n                state = \"rejected\";\n            }, doneList.disable, progressList.lock);\n\n            // Call given func if any\n            if (func) {\n                func.call(deferred, deferred);\n            }\n\n            // All done!\n            return deferred;\n        },\n\n        // Deferred helper\n        when: function (firstParam) {\n            var args = sliceDeferred.call(arguments, 0),\n\t\t\ti = 0,\n\t\t\tlength = args.length,\n\t\t\tpValues = new Array(length),\n\t\t\tcount = length,\n\t\t\tpCount = length,\n\t\t\tdeferred = length <= 1 && firstParam && jQuery.isFunction(firstParam.promise) ?\n\t\t\t\tfirstParam :\n\t\t\t\tjQuery.Deferred(),\n\t\t\tpromise = deferred.promise();\n            function resolveFunc(i) {\n                return function (value) {\n                    args[i] = arguments.length > 1 ? sliceDeferred.call(arguments, 0) : value;\n                    if (!(--count)) {\n                        deferred.resolveWith(deferred, args);\n                    }\n                };\n            }\n            function progressFunc(i) {\n                return function (value) {\n                    pValues[i] = arguments.length > 1 ? sliceDeferred.call(arguments, 0) : value;\n                    deferred.notifyWith(promise, pValues);\n                };\n            }\n            if (length > 1) {\n                for (; i < length; i++) {\n                    if (args[i] && args[i].promise && jQuery.isFunction(args[i].promise)) {\n                        args[i].promise().then(resolveFunc(i), deferred.reject, progressFunc(i));\n                    } else {\n                        --count;\n                    }\n                }\n                if (!count) {\n                    deferred.resolveWith(deferred, args);\n                }\n            } else if (deferred !== firstParam) {\n                deferred.resolveWith(deferred, length ? [firstParam] : []);\n            }\n            return promise;\n        }\n    });\n\n\n\n\n    jQuery.support = (function () {\n\n        var support,\n\t\tall,\n\t\ta,\n\t\tselect,\n\t\topt,\n\t\tinput,\n\t\tfragment,\n\t\ttds,\n\t\tevents,\n\t\teventName,\n\t\ti,\n\t\tisSupported,\n\t\tdiv = document.createElement(\"div\"),\n\t\tdocumentElement = document.documentElement;\n\n        // Preliminary tests\n        div.setAttribute(\"className\", \"t\");\n        div.innerHTML = \"   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>\";\n\n        all = div.getElementsByTagName(\"*\");\n        a = div.getElementsByTagName(\"a\")[0];\n\n        // Can't get basic test support\n        if (!all || !all.length || !a) {\n            return {};\n        }\n\n        // First batch of supports tests\n        select = document.createElement(\"select\");\n        opt = select.appendChild(document.createElement(\"option\"));\n        input = div.getElementsByTagName(\"input\")[0];\n\n        support = {\n            // IE strips leading whitespace when .innerHTML is used\n            leadingWhitespace: (div.firstChild.nodeType === 3),\n\n            // Make sure that tbody elements aren't automatically inserted\n            // IE will insert them into empty tables\n            tbody: !div.getElementsByTagName(\"tbody\").length,\n\n            // Make sure that link elements get serialized correctly by innerHTML\n            // This requires a wrapper element in IE\n            htmlSerialize: !!div.getElementsByTagName(\"link\").length,\n\n            // Get the style information from getAttribute\n            // (IE uses .cssText instead)\n            style: /top/.test(a.getAttribute(\"style\")),\n\n            // Make sure that URLs aren't manipulated\n            // (IE normalizes it by default)\n            hrefNormalized: (a.getAttribute(\"href\") === \"/a\"),\n\n            // Make sure that element opacity exists\n            // (IE uses filter instead)\n            // Use a regex to work around a WebKit issue. See #5145\n            opacity: /^0.55/.test(a.style.opacity),\n\n            // Verify style float existence\n            // (IE uses styleFloat instead of cssFloat)\n            cssFloat: !!a.style.cssFloat,\n\n            // Make sure that if no value is specified for a checkbox\n            // that it defaults to \"on\".\n            // (WebKit defaults to \"\" instead)\n            checkOn: (input.value === \"on\"),\n\n            // Make sure that a selected-by-default option has a working selected property.\n            // (WebKit defaults to false instead of true, IE too, if it's in an optgroup)\n            optSelected: opt.selected,\n\n            // Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)\n            getSetAttribute: div.className !== \"t\",\n\n            // Tests for enctype support on a form(#6743)\n            enctype: !!document.createElement(\"form\").enctype,\n\n            // Makes sure cloning an html5 element does not cause problems\n            // Where outerHTML is undefined, this still works\n            html5Clone: document.createElement(\"nav\").cloneNode(true).outerHTML !== \"<:nav></:nav>\",\n\n            // Will be defined later\n            submitBubbles: true,\n            changeBubbles: true,\n            focusinBubbles: false,\n            deleteExpando: true,\n            noCloneEvent: true,\n            inlineBlockNeedsLayout: false,\n            shrinkWrapBlocks: false,\n            reliableMarginRight: true,\n            pixelMargin: true\n        };\n\n        // jQuery.boxModel DEPRECATED in 1.3, use jQuery.support.boxModel instead\n        jQuery.boxModel = support.boxModel = (document.compatMode === \"CSS1Compat\");\n\n        // Make sure checked status is properly cloned\n        input.checked = true;\n        support.noCloneChecked = input.cloneNode(true).checked;\n\n        // Make sure that the options inside disabled selects aren't marked as disabled\n        // (WebKit marks them as disabled)\n        select.disabled = true;\n        support.optDisabled = !opt.disabled;\n\n        // Test to see if it's possible to delete an expando from an element\n        // Fails in Internet Explorer\n        try {\n            delete div.test;\n        } catch (e) {\n            support.deleteExpando = false;\n        }\n\n        if (!div.addEventListener && div.attachEvent && div.fireEvent) {\n            div.attachEvent(\"onclick\", function () {\n                // Cloning a node shouldn't copy over any\n                // bound event handlers (IE does this)\n                support.noCloneEvent = false;\n            });\n            div.cloneNode(true).fireEvent(\"onclick\");\n        }\n\n        // Check if a radio maintains its value\n        // after being appended to the DOM\n        input = document.createElement(\"input\");\n        input.value = \"t\";\n        input.setAttribute(\"type\", \"radio\");\n        support.radioValue = input.value === \"t\";\n\n        input.setAttribute(\"checked\", \"checked\");\n\n        // #11217 - WebKit loses check when the name is after the checked attribute\n        input.setAttribute(\"name\", \"t\");\n\n        div.appendChild(input);\n        fragment = document.createDocumentFragment();\n        fragment.appendChild(div.lastChild);\n\n        // WebKit doesn't clone checked state correctly in fragments\n        support.checkClone = fragment.cloneNode(true).cloneNode(true).lastChild.checked;\n\n        // Check if a disconnected checkbox will retain its checked\n        // value of true after appended to the DOM (IE6/7)\n        support.appendChecked = input.checked;\n\n        fragment.removeChild(input);\n        fragment.appendChild(div);\n\n        // Technique from Juriy Zaytsev\n        // http://perfectionkills.com/detecting-event-support-without-browser-sniffing/\n        // We only care about the case where non-standard event systems\n        // are used, namely in IE. Short-circuiting here helps us to\n        // avoid an eval call (in setAttribute) which can cause CSP\n        // to go haywire. See: https://developer.mozilla.org/en/Security/CSP\n        if (div.attachEvent) {\n            for (i in {\n                submit: 1,\n                change: 1,\n                focusin: 1\n            }) {\n                eventName = \"on\" + i;\n                isSupported = (eventName in div);\n                if (!isSupported) {\n                    div.setAttribute(eventName, \"return;\");\n                    isSupported = (typeof div[eventName] === \"function\");\n                }\n                support[i + \"Bubbles\"] = isSupported;\n            }\n        }\n\n        fragment.removeChild(div);\n\n        // Null elements to avoid leaks in IE\n        fragment = select = opt = div = input = null;\n\n        // Run tests that need a body at doc ready\n        jQuery(function () {\n            var container, outer, inner, table, td, offsetSupport,\n\t\t\tmarginDiv, conMarginTop, style, html, positionTopLeftWidthHeight,\n\t\t\tpaddingMarginBorderVisibility, paddingMarginBorder,\n\t\t\tbody = document.getElementsByTagName(\"body\")[0];\n\n            if (!body) {\n                // Return for frameset docs that don't have a body\n                return;\n            }\n\n            conMarginTop = 1;\n            paddingMarginBorder = \"padding:0;margin:0;border:\";\n            positionTopLeftWidthHeight = \"position:absolute;top:0;left:0;width:1px;height:1px;\";\n            paddingMarginBorderVisibility = paddingMarginBorder + \"0;visibility:hidden;\";\n            style = \"style='\" + positionTopLeftWidthHeight + paddingMarginBorder + \"5px solid #000;\";\n            html = \"<div \" + style + \"display:block;'><div style='\" + paddingMarginBorder + \"0;display:block;overflow:hidden;'></div></div>\" +\n\t\t\t\"<table \" + style + \"' cellpadding='0' cellspacing='0'>\" +\n\t\t\t\"<tr><td></td></tr></table>\";\n\n            container = document.createElement(\"div\");\n            container.style.cssText = paddingMarginBorderVisibility + \"width:0;height:0;position:static;top:0;margin-top:\" + conMarginTop + \"px\";\n            body.insertBefore(container, body.firstChild);\n\n            // Construct the test element\n            div = document.createElement(\"div\");\n            container.appendChild(div);\n\n            // Check if table cells still have offsetWidth/Height when they are set\n            // to display:none and there are still other visible table cells in a\n            // table row; if so, offsetWidth/Height are not reliable for use when\n            // determining if an element has been hidden directly using\n            // display:none (it is still safe to use offsets if a parent element is\n            // hidden; don safety goggles and see bug #4512 for more information).\n            // (only IE 8 fails this test)\n            div.innerHTML = \"<table><tr><td style='\" + paddingMarginBorder + \"0;display:none'></td><td>t</td></tr></table>\";\n            tds = div.getElementsByTagName(\"td\");\n            isSupported = (tds[0].offsetHeight === 0);\n\n            tds[0].style.display = \"\";\n            tds[1].style.display = \"none\";\n\n            // Check if empty table cells still have offsetWidth/Height\n            // (IE <= 8 fail this test)\n            support.reliableHiddenOffsets = isSupported && (tds[0].offsetHeight === 0);\n\n            // Check if div with explicit width and no margin-right incorrectly\n            // gets computed margin-right based on width of container. For more\n            // info see bug #3333\n            // Fails in WebKit before Feb 2011 nightlies\n            // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n            if (window.getComputedStyle) {\n                div.innerHTML = \"\";\n                marginDiv = document.createElement(\"div\");\n                marginDiv.style.width = \"0\";\n                marginDiv.style.marginRight = \"0\";\n                div.style.width = \"2px\";\n                div.appendChild(marginDiv);\n                support.reliableMarginRight =\n\t\t\t\t(parseInt((window.getComputedStyle(marginDiv, null) || { marginRight: 0 }).marginRight, 10) || 0) === 0;\n            }\n\n            if (typeof div.style.zoom !== \"undefined\") {\n                // Check if natively block-level elements act like inline-block\n                // elements when setting their display to 'inline' and giving\n                // them layout\n                // (IE < 8 does this)\n                div.innerHTML = \"\";\n                div.style.width = div.style.padding = \"1px\";\n                div.style.border = 0;\n                div.style.overflow = \"hidden\";\n                div.style.display = \"inline\";\n                div.style.zoom = 1;\n                support.inlineBlockNeedsLayout = (div.offsetWidth === 3);\n\n                // Check if elements with layout shrink-wrap their children\n                // (IE 6 does this)\n                div.style.display = \"block\";\n                div.style.overflow = \"visible\";\n                div.innerHTML = \"<div style='width:5px;'></div>\";\n                support.shrinkWrapBlocks = (div.offsetWidth !== 3);\n            }\n\n            div.style.cssText = positionTopLeftWidthHeight + paddingMarginBorderVisibility;\n            div.innerHTML = html;\n\n            outer = div.firstChild;\n            inner = outer.firstChild;\n            td = outer.nextSibling.firstChild.firstChild;\n\n            offsetSupport = {\n                doesNotAddBorder: (inner.offsetTop !== 5),\n                doesAddBorderForTableAndCells: (td.offsetTop === 5)\n            };\n\n            inner.style.position = \"fixed\";\n            inner.style.top = \"20px\";\n\n            // safari subtracts parent border width here which is 5px\n            offsetSupport.fixedPosition = (inner.offsetTop === 20 || inner.offsetTop === 15);\n            inner.style.position = inner.style.top = \"\";\n\n            outer.style.overflow = \"hidden\";\n            outer.style.position = \"relative\";\n\n            offsetSupport.subtractsBorderForOverflowNotVisible = (inner.offsetTop === -5);\n            offsetSupport.doesNotIncludeMarginInBodyOffset = (body.offsetTop !== conMarginTop);\n\n            if (window.getComputedStyle) {\n                div.style.marginTop = \"1%\";\n                support.pixelMargin = (window.getComputedStyle(div, null) || { marginTop: 0 }).marginTop !== \"1%\";\n            }\n\n            if (typeof container.style.zoom !== \"undefined\") {\n                container.style.zoom = 1;\n            }\n\n            body.removeChild(container);\n            marginDiv = div = container = null;\n\n            jQuery.extend(support, offsetSupport);\n        });\n\n        return support;\n    })();\n\n\n\n\n    var rbrace = /^(?:\\{.*\\}|\\[.*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\n    jQuery.extend({\n        cache: {},\n\n        // Please use with caution\n        uuid: 0,\n\n        // Unique for each copy of jQuery on the page\n        // Non-digits removed to match rinlinejQuery\n        expando: \"jQuery\" + (jQuery.fn.jquery + Math.random()).replace(/\\D/g, \"\"),\n\n        // The following elements throw uncatchable exceptions if you\n        // attempt to add expando properties to them.\n        noData: {\n            \"embed\": true,\n            // Ban all objects except for Flash (which handle expandos)\n            \"object\": \"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",\n            \"applet\": true\n        },\n\n        hasData: function (elem) {\n            elem = elem.nodeType ? jQuery.cache[elem[jQuery.expando]] : elem[jQuery.expando];\n            return !!elem && !isEmptyDataObject(elem);\n        },\n\n        data: function (elem, name, data, pvt /* Internal Use Only */) {\n            if (!jQuery.acceptData(elem)) {\n                return;\n            }\n\n            var privateCache, thisCache, ret,\n\t\t\tinternalKey = jQuery.expando,\n\t\t\tgetByName = typeof name === \"string\",\n\n            // We have to handle DOM nodes and JS objects differently because IE6-7\n            // can't GC object references properly across the DOM-JS boundary\n\t\t\tisNode = elem.nodeType,\n\n            // Only DOM nodes need the global jQuery cache; JS object data is\n            // attached directly to the object so GC can occur automatically\n\t\t\tcache = isNode ? jQuery.cache : elem,\n\n            // Only defining an ID for JS objects if its cache already exists allows\n            // the code to shortcut on the same path as a DOM node with no cache\n\t\t\tid = isNode ? elem[internalKey] : elem[internalKey] && internalKey,\n\t\t\tisEvents = name === \"events\";\n\n            // Avoid doing any more work than we need to when trying to get data on an\n            // object that has no data at all\n            if ((!id || !cache[id] || (!isEvents && !pvt && !cache[id].data)) && getByName && data === undefined) {\n                return;\n            }\n\n            if (!id) {\n                // Only DOM nodes need a new unique ID for each element since their data\n                // ends up in the global cache\n                if (isNode) {\n                    elem[internalKey] = id = ++jQuery.uuid;\n                } else {\n                    id = internalKey;\n                }\n            }\n\n            if (!cache[id]) {\n                cache[id] = {};\n\n                // Avoids exposing jQuery metadata on plain JS objects when the object\n                // is serialized using JSON.stringify\n                if (!isNode) {\n                    cache[id].toJSON = jQuery.noop;\n                }\n            }\n\n            // An object can be passed to jQuery.data instead of a key/value pair; this gets\n            // shallow copied over onto the existing cache\n            if (typeof name === \"object\" || typeof name === \"function\") {\n                if (pvt) {\n                    cache[id] = jQuery.extend(cache[id], name);\n                } else {\n                    cache[id].data = jQuery.extend(cache[id].data, name);\n                }\n            }\n\n            privateCache = thisCache = cache[id];\n\n            // jQuery data() is stored in a separate object inside the object's internal data\n            // cache in order to avoid key collisions between internal data and user-defined\n            // data.\n            if (!pvt) {\n                if (!thisCache.data) {\n                    thisCache.data = {};\n                }\n\n                thisCache = thisCache.data;\n            }\n\n            if (data !== undefined) {\n                thisCache[jQuery.camelCase(name)] = data;\n            }\n\n            // Users should not attempt to inspect the internal events object using jQuery.data,\n            // it is undocumented and subject to change. But does anyone listen? No.\n            if (isEvents && !thisCache[name]) {\n                return privateCache.events;\n            }\n\n            // Check for both converted-to-camel and non-converted data property names\n            // If a data property was specified\n            if (getByName) {\n\n                // First Try to find as-is property data\n                ret = thisCache[name];\n\n                // Test for null|undefined property data\n                if (ret == null) {\n\n                    // Try to find the camelCased property\n                    ret = thisCache[jQuery.camelCase(name)];\n                }\n            } else {\n                ret = thisCache;\n            }\n\n            return ret;\n        },\n\n        removeData: function (elem, name, pvt /* Internal Use Only */) {\n            if (!jQuery.acceptData(elem)) {\n                return;\n            }\n\n            var thisCache, i, l,\n\n            // Reference to internal data cache key\n\t\t\tinternalKey = jQuery.expando,\n\n\t\t\tisNode = elem.nodeType,\n\n            // See jQuery.data for more information\n\t\t\tcache = isNode ? jQuery.cache : elem,\n\n            // See jQuery.data for more information\n\t\t\tid = isNode ? elem[internalKey] : internalKey;\n\n            // If there is already no cache entry for this object, there is no\n            // purpose in continuing\n            if (!cache[id]) {\n                return;\n            }\n\n            if (name) {\n\n                thisCache = pvt ? cache[id] : cache[id].data;\n\n                if (thisCache) {\n\n                    // Support array or space separated string names for data keys\n                    if (!jQuery.isArray(name)) {\n\n                        // try the string as a key before any manipulation\n                        if (name in thisCache) {\n                            name = [name];\n                        } else {\n\n                            // split the camel cased version by spaces unless a key with the spaces exists\n                            name = jQuery.camelCase(name);\n                            if (name in thisCache) {\n                                name = [name];\n                            } else {\n                                name = name.split(\" \");\n                            }\n                        }\n                    }\n\n                    for (i = 0, l = name.length; i < l; i++) {\n                        delete thisCache[name[i]];\n                    }\n\n                    // If there is no data left in the cache, we want to continue\n                    // and let the cache object itself get destroyed\n                    if (!(pvt ? isEmptyDataObject : jQuery.isEmptyObject)(thisCache)) {\n                        return;\n                    }\n                }\n            }\n\n            // See jQuery.data for more information\n            if (!pvt) {\n                delete cache[id].data;\n\n                // Don't destroy the parent cache unless the internal data object\n                // had been the only thing left in it\n                if (!isEmptyDataObject(cache[id])) {\n                    return;\n                }\n            }\n\n            // Browsers that fail expando deletion also refuse to delete expandos on\n            // the window, but it will allow it on all other JS objects; other browsers\n            // don't care\n            // Ensure that `cache` is not a window object #10080\n            if (jQuery.support.deleteExpando || !cache.setInterval) {\n                delete cache[id];\n            } else {\n                cache[id] = null;\n            }\n\n            // We destroyed the cache and need to eliminate the expando on the node to avoid\n            // false lookups in the cache for entries that no longer exist\n            if (isNode) {\n                // IE does not allow us to delete expando properties from nodes,\n                // nor does it have a removeAttribute function on Document nodes;\n                // we must handle all of these cases\n                if (jQuery.support.deleteExpando) {\n                    delete elem[internalKey];\n                } else if (elem.removeAttribute) {\n                    elem.removeAttribute(internalKey);\n                } else {\n                    elem[internalKey] = null;\n                }\n            }\n        },\n\n        // For internal use only.\n        _data: function (elem, name, data) {\n            return jQuery.data(elem, name, data, true);\n        },\n\n        // A method for determining if a DOM node can handle the data expando\n        acceptData: function (elem) {\n            if (elem.nodeName) {\n                var match = jQuery.noData[elem.nodeName.toLowerCase()];\n\n                if (match) {\n                    return !(match === true || elem.getAttribute(\"classid\") !== match);\n                }\n            }\n\n            return true;\n        }\n    });\n\n    jQuery.fn.extend({\n        data: function (key, value) {\n            var parts, part, attr, name, l,\n\t\t\telem = this[0],\n\t\t\ti = 0,\n\t\t\tdata = null;\n\n            // Gets all values\n            if (key === undefined) {\n                if (this.length) {\n                    data = jQuery.data(elem);\n\n                    if (elem.nodeType === 1 && !jQuery._data(elem, \"parsedAttrs\")) {\n                        attr = elem.attributes;\n                        for (l = attr.length; i < l; i++) {\n                            name = attr[i].name;\n\n                            if (name.indexOf(\"data-\") === 0) {\n                                name = jQuery.camelCase(name.substring(5));\n\n                                dataAttr(elem, name, data[name]);\n                            }\n                        }\n                        jQuery._data(elem, \"parsedAttrs\", true);\n                    }\n                }\n\n                return data;\n            }\n\n            // Sets multiple values\n            if (typeof key === \"object\") {\n                return this.each(function () {\n                    jQuery.data(this, key);\n                });\n            }\n\n            parts = key.split(\".\", 2);\n            parts[1] = parts[1] ? \".\" + parts[1] : \"\";\n            part = parts[1] + \"!\";\n\n            return jQuery.access(this, function (value) {\n\n                if (value === undefined) {\n                    data = this.triggerHandler(\"getData\" + part, [parts[0]]);\n\n                    // Try to fetch any internally stored data first\n                    if (data === undefined && elem) {\n                        data = jQuery.data(elem, key);\n                        data = dataAttr(elem, key, data);\n                    }\n\n                    return data === undefined && parts[1] ?\n\t\t\t\t\tthis.data(parts[0]) :\n\t\t\t\t\tdata;\n                }\n\n                parts[1] = value;\n                this.each(function () {\n                    var self = jQuery(this);\n\n                    self.triggerHandler(\"setData\" + part, parts);\n                    jQuery.data(this, key, value);\n                    self.triggerHandler(\"changeData\" + part, parts);\n                });\n            }, null, value, arguments.length > 1, null, false);\n        },\n\n        removeData: function (key) {\n            return this.each(function () {\n                jQuery.removeData(this, key);\n            });\n        }\n    });\n\n    function dataAttr(elem, key, data) {\n        // If nothing was found internally, try to fetch any\n        // data from the HTML5 data-* attribute\n        if (data === undefined && elem.nodeType === 1) {\n\n            var name = \"data-\" + key.replace(rmultiDash, \"-$1\").toLowerCase();\n\n            data = elem.getAttribute(name);\n\n            if (typeof data === \"string\") {\n                try {\n                    data = data === \"true\" ? true :\n\t\t\t\tdata === \"false\" ? false :\n\t\t\t\tdata === \"null\" ? null :\n\t\t\t\tjQuery.isNumeric(data) ? +data :\n\t\t\t\t\trbrace.test(data) ? jQuery.parseJSON(data) :\n\t\t\t\t\tdata;\n                } catch (e) { }\n\n                // Make sure we set the data so it isn't changed later\n                jQuery.data(elem, key, data);\n\n            } else {\n                data = undefined;\n            }\n        }\n\n        return data;\n    }\n\n    // checks a cache object for emptiness\n    function isEmptyDataObject(obj) {\n        for (var name in obj) {\n\n            // if the public data object is empty, the private is still empty\n            if (name === \"data\" && jQuery.isEmptyObject(obj[name])) {\n                continue;\n            }\n            if (name !== \"toJSON\") {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n\n\n\n    function handleQueueMarkDefer(elem, type, src) {\n        var deferDataKey = type + \"defer\",\n\t\tqueueDataKey = type + \"queue\",\n\t\tmarkDataKey = type + \"mark\",\n\t\tdefer = jQuery._data(elem, deferDataKey);\n        if (defer &&\n\t\t(src === \"queue\" || !jQuery._data(elem, queueDataKey)) &&\n\t\t(src === \"mark\" || !jQuery._data(elem, markDataKey))) {\n            // Give room for hard-coded callbacks to fire first\n            // and eventually mark/queue something else on the element\n            setTimeout(function () {\n                if (!jQuery._data(elem, queueDataKey) &&\n\t\t\t\t!jQuery._data(elem, markDataKey)) {\n                    jQuery.removeData(elem, deferDataKey, true);\n                    defer.fire();\n                }\n            }, 0);\n        }\n    }\n\n    jQuery.extend({\n\n        _mark: function (elem, type) {\n            if (elem) {\n                type = (type || \"fx\") + \"mark\";\n                jQuery._data(elem, type, (jQuery._data(elem, type) || 0) + 1);\n            }\n        },\n\n        _unmark: function (force, elem, type) {\n            if (force !== true) {\n                type = elem;\n                elem = force;\n                force = false;\n            }\n            if (elem) {\n                type = type || \"fx\";\n                var key = type + \"mark\",\n\t\t\t\tcount = force ? 0 : ((jQuery._data(elem, key) || 1) - 1);\n                if (count) {\n                    jQuery._data(elem, key, count);\n                } else {\n                    jQuery.removeData(elem, key, true);\n                    handleQueueMarkDefer(elem, type, \"mark\");\n                }\n            }\n        },\n\n        queue: function (elem, type, data) {\n            var q;\n            if (elem) {\n                type = (type || \"fx\") + \"queue\";\n                q = jQuery._data(elem, type);\n\n                // Speed up dequeue by getting out quickly if this is just a lookup\n                if (data) {\n                    if (!q || jQuery.isArray(data)) {\n                        q = jQuery._data(elem, type, jQuery.makeArray(data));\n                    } else {\n                        q.push(data);\n                    }\n                }\n                return q || [];\n            }\n        },\n\n        dequeue: function (elem, type) {\n            type = type || \"fx\";\n\n            var queue = jQuery.queue(elem, type),\n\t\t\tfn = queue.shift(),\n\t\t\thooks = {};\n\n            // If the fx queue is dequeued, always remove the progress sentinel\n            if (fn === \"inprogress\") {\n                fn = queue.shift();\n            }\n\n            if (fn) {\n                // Add a progress sentinel to prevent the fx queue from being\n                // automatically dequeued\n                if (type === \"fx\") {\n                    queue.unshift(\"inprogress\");\n                }\n\n                jQuery._data(elem, type + \".run\", hooks);\n                fn.call(elem, function () {\n                    jQuery.dequeue(elem, type);\n                }, hooks);\n            }\n\n            if (!queue.length) {\n                jQuery.removeData(elem, type + \"queue \" + type + \".run\", true);\n                handleQueueMarkDefer(elem, type, \"queue\");\n            }\n        }\n    });\n\n    jQuery.fn.extend({\n        queue: function (type, data) {\n            var setter = 2;\n\n            if (typeof type !== \"string\") {\n                data = type;\n                type = \"fx\";\n                setter--;\n            }\n\n            if (arguments.length < setter) {\n                return jQuery.queue(this[0], type);\n            }\n\n            return data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function () {\n\t\t\t    var queue = jQuery.queue(this, type, data);\n\n\t\t\t    if (type === \"fx\" && queue[0] !== \"inprogress\") {\n\t\t\t        jQuery.dequeue(this, type);\n\t\t\t    }\n\t\t\t});\n        },\n        dequeue: function (type) {\n            return this.each(function () {\n                jQuery.dequeue(this, type);\n            });\n        },\n        // Based off of the plugin by Clint Helfers, with permission.\n        // http://blindsignals.com/index.php/2009/07/jquery-delay/\n        delay: function (time, type) {\n            time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n            type = type || \"fx\";\n\n            return this.queue(type, function (next, hooks) {\n                var timeout = setTimeout(next, time);\n                hooks.stop = function () {\n                    clearTimeout(timeout);\n                };\n            });\n        },\n        clearQueue: function (type) {\n            return this.queue(type || \"fx\", []);\n        },\n        // Get a promise resolved when queues of a certain type\n        // are emptied (fx is the type by default)\n        promise: function (type, object) {\n            if (typeof type !== \"string\") {\n                object = type;\n                type = undefined;\n            }\n            type = type || \"fx\";\n            var defer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = elements.length,\n\t\t\tcount = 1,\n\t\t\tdeferDataKey = type + \"defer\",\n\t\t\tqueueDataKey = type + \"queue\",\n\t\t\tmarkDataKey = type + \"mark\",\n\t\t\ttmp;\n            function resolve() {\n                if (!(--count)) {\n                    defer.resolveWith(elements, [elements]);\n                }\n            }\n            while (i--) {\n                if ((tmp = jQuery.data(elements[i], deferDataKey, undefined, true) ||\n\t\t\t\t\t(jQuery.data(elements[i], queueDataKey, undefined, true) ||\n\t\t\t\t\t\tjQuery.data(elements[i], markDataKey, undefined, true)) &&\n\t\t\t\t\tjQuery.data(elements[i], deferDataKey, jQuery.Callbacks(\"once memory\"), true))) {\n                    count++;\n                    tmp.add(resolve);\n                }\n            }\n            resolve();\n            return defer.promise(object);\n        }\n    });\n\n\n\n\n    var rclass = /[\\n\\t\\r]/g,\n\trspace = /\\s+/,\n\trreturn = /\\r/g,\n\trtype = /^(?:button|input)$/i,\n\trfocusable = /^(?:button|input|object|select|textarea)$/i,\n\trclickable = /^a(?:rea)?$/i,\n\trboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,\n\tgetSetAttribute = jQuery.support.getSetAttribute,\n\tnodeHook, boolHook, fixSpecified;\n\n    jQuery.fn.extend({\n        attr: function (name, value) {\n            return jQuery.access(this, jQuery.attr, name, value, arguments.length > 1);\n        },\n\n        removeAttr: function (name) {\n            return this.each(function () {\n                jQuery.removeAttr(this, name);\n            });\n        },\n\n        prop: function (name, value) {\n            return jQuery.access(this, jQuery.prop, name, value, arguments.length > 1);\n        },\n\n        removeProp: function (name) {\n            name = jQuery.propFix[name] || name;\n            return this.each(function () {\n                // try/catch handles cases where IE balks (such as removing a property on window)\n                try {\n                    this[name] = undefined;\n                    delete this[name];\n                } catch (e) { }\n            });\n        },\n\n        addClass: function (value) {\n            var classNames, i, l, elem,\n\t\t\tsetClass, c, cl;\n\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).addClass(value.call(this, j, this.className));\n                });\n            }\n\n            if (value && typeof value === \"string\") {\n                classNames = value.split(rspace);\n\n                for (i = 0, l = this.length; i < l; i++) {\n                    elem = this[i];\n\n                    if (elem.nodeType === 1) {\n                        if (!elem.className && classNames.length === 1) {\n                            elem.className = value;\n\n                        } else {\n                            setClass = \" \" + elem.className + \" \";\n\n                            for (c = 0, cl = classNames.length; c < cl; c++) {\n                                if (! ~setClass.indexOf(\" \" + classNames[c] + \" \")) {\n                                    setClass += classNames[c] + \" \";\n                                }\n                            }\n                            elem.className = jQuery.trim(setClass);\n                        }\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        removeClass: function (value) {\n            var classNames, i, l, elem, className, c, cl;\n\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).removeClass(value.call(this, j, this.className));\n                });\n            }\n\n            if ((value && typeof value === \"string\") || value === undefined) {\n                classNames = (value || \"\").split(rspace);\n\n                for (i = 0, l = this.length; i < l; i++) {\n                    elem = this[i];\n\n                    if (elem.nodeType === 1 && elem.className) {\n                        if (value) {\n                            className = (\" \" + elem.className + \" \").replace(rclass, \" \");\n                            for (c = 0, cl = classNames.length; c < cl; c++) {\n                                className = className.replace(\" \" + classNames[c] + \" \", \" \");\n                            }\n                            elem.className = jQuery.trim(className);\n\n                        } else {\n                            elem.className = \"\";\n                        }\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        toggleClass: function (value, stateVal) {\n            var type = typeof value,\n\t\t\tisBool = typeof stateVal === \"boolean\";\n\n            if (jQuery.isFunction(value)) {\n                return this.each(function (i) {\n                    jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);\n                });\n            }\n\n            return this.each(function () {\n                if (type === \"string\") {\n                    // toggle individual class names\n                    var className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery(this),\n\t\t\t\t\tstate = stateVal,\n\t\t\t\t\tclassNames = value.split(rspace);\n\n                    while ((className = classNames[i++])) {\n                        // check each className given, space seperated list\n                        state = isBool ? state : !self.hasClass(className);\n                        self[state ? \"addClass\" : \"removeClass\"](className);\n                    }\n\n                } else if (type === \"undefined\" || type === \"boolean\") {\n                    if (this.className) {\n                        // store className if set\n                        jQuery._data(this, \"__className__\", this.className);\n                    }\n\n                    // toggle whole className\n                    this.className = this.className || value === false ? \"\" : jQuery._data(this, \"__className__\") || \"\";\n                }\n            });\n        },\n\n        hasClass: function (selector) {\n            var className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n            for (; i < l; i++) {\n                if (this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf(className) > -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        val: function (value) {\n            var hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n            if (!arguments.length) {\n                if (elem) {\n                    hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n                    if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n                        return ret;\n                    }\n\n                    ret = elem.value;\n\n                    return typeof ret === \"string\" ?\n                    // handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n                    // handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n                }\n\n                return;\n            }\n\n            isFunction = jQuery.isFunction(value);\n\n            return this.each(function (i) {\n                var self = jQuery(this), val;\n\n                if (this.nodeType !== 1) {\n                    return;\n                }\n\n                if (isFunction) {\n                    val = value.call(this, i, self.val());\n                } else {\n                    val = value;\n                }\n\n                // Treat null/undefined as \"\"; convert numbers to string\n                if (val == null) {\n                    val = \"\";\n                } else if (typeof val === \"number\") {\n                    val += \"\";\n                } else if (jQuery.isArray(val)) {\n                    val = jQuery.map(val, function (value) {\n                        return value == null ? \"\" : value + \"\";\n                    });\n                }\n\n                hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n\n                // If set returns undefined, fall back to normal setting\n                if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n                    this.value = val;\n                }\n            });\n        }\n    });\n\n    jQuery.extend({\n        valHooks: {\n            option: {\n                get: function (elem) {\n                    // attributes.value is undefined in Blackberry 4.7 but\n                    // uses .value. See #6932\n                    var val = elem.attributes.value;\n                    return !val || val.specified ? elem.value : elem.text;\n                }\n            },\n            select: {\n                get: function (elem) {\n                    var value, i, max, option,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tvalues = [],\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tone = elem.type === \"select-one\";\n\n                    // Nothing was selected\n                    if (index < 0) {\n                        return null;\n                    }\n\n                    // Loop through all the selected options\n                    i = one ? index : 0;\n                    max = one ? index + 1 : options.length;\n                    for (; i < max; i++) {\n                        option = options[i];\n\n                        // Don't return options that are disabled or in a disabled optgroup\n                        if (option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null) &&\n\t\t\t\t\t\t\t(!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, \"optgroup\"))) {\n\n                            // Get the specific value for the option\n                            value = jQuery(option).val();\n\n                            // We don't need an array for one selects\n                            if (one) {\n                                return value;\n                            }\n\n                            // Multi-Selects return an array\n                            values.push(value);\n                        }\n                    }\n\n                    // Fixes Bug #2551 -- select.val() broken in IE after form.reset()\n                    if (one && !values.length && options.length) {\n                        return jQuery(options[index]).val();\n                    }\n\n                    return values;\n                },\n\n                set: function (elem, value) {\n                    var values = jQuery.makeArray(value);\n\n                    jQuery(elem).find(\"option\").each(function () {\n                        this.selected = jQuery.inArray(jQuery(this).val(), values) >= 0;\n                    });\n\n                    if (!values.length) {\n                        elem.selectedIndex = -1;\n                    }\n                    return values;\n                }\n            }\n        },\n\n        attrFn: {\n            val: true,\n            css: true,\n            html: true,\n            text: true,\n            data: true,\n            width: true,\n            height: true,\n            offset: true\n        },\n\n        attr: function (elem, name, value, pass) {\n            var ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n            // don't get/set attributes on text, comment and attribute nodes\n            if (!elem || nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n\n            if (pass && name in jQuery.attrFn) {\n                return jQuery(elem)[name](value);\n            }\n\n            // Fallback to prop when attributes are not supported\n            if (typeof elem.getAttribute === \"undefined\") {\n                return jQuery.prop(elem, name, value);\n            }\n\n            notxml = nType !== 1 || !jQuery.isXMLDoc(elem);\n\n            // All attributes are lowercase\n            // Grab necessary hook if one is defined\n            if (notxml) {\n                name = name.toLowerCase();\n                hooks = jQuery.attrHooks[name] || (rboolean.test(name) ? boolHook : nodeHook);\n            }\n\n            if (value !== undefined) {\n\n                if (value === null) {\n                    jQuery.removeAttr(elem, name);\n                    return;\n\n                } else if (hooks && \"set\" in hooks && notxml && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n\n                } else {\n                    elem.setAttribute(name, \"\" + value);\n                    return value;\n                }\n\n            } else if (hooks && \"get\" in hooks && notxml && (ret = hooks.get(elem, name)) !== null) {\n                return ret;\n\n            } else {\n\n                ret = elem.getAttribute(name);\n\n                // Non-existent attributes return null, we normalize to undefined\n                return ret === null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n            }\n        },\n\n        removeAttr: function (elem, value) {\n            var propName, attrNames, name, l, isBool,\n\t\t\ti = 0;\n\n            if (value && elem.nodeType === 1) {\n                attrNames = value.toLowerCase().split(rspace);\n                l = attrNames.length;\n\n                for (; i < l; i++) {\n                    name = attrNames[i];\n\n                    if (name) {\n                        propName = jQuery.propFix[name] || name;\n                        isBool = rboolean.test(name);\n\n                        // See #9699 for explanation of this approach (setting first, then removal)\n                        // Do not do this for boolean attributes (see #10870)\n                        if (!isBool) {\n                            jQuery.attr(elem, name, \"\");\n                        }\n                        elem.removeAttribute(getSetAttribute ? name : propName);\n\n                        // Set corresponding property to false for boolean attributes\n                        if (isBool && propName in elem) {\n                            elem[propName] = false;\n                        }\n                    }\n                }\n            }\n        },\n\n        attrHooks: {\n            type: {\n                set: function (elem, value) {\n                    // We can't allow the type property to be changed (since it causes problems in IE)\n                    if (rtype.test(elem.nodeName) && elem.parentNode) {\n                        jQuery.error(\"type property can't be changed\");\n                    } else if (!jQuery.support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\")) {\n                        // Setting the type on a radio button after the value resets the value in IE6-9\n                        // Reset value to it's default in case type is set after value\n                        // This is for element creation\n                        var val = elem.value;\n                        elem.setAttribute(\"type\", value);\n                        if (val) {\n                            elem.value = val;\n                        }\n                        return value;\n                    }\n                }\n            },\n            // Use the value property for back compat\n            // Use the nodeHook for button elements in IE6/7 (#1954)\n            value: {\n                get: function (elem, name) {\n                    if (nodeHook && jQuery.nodeName(elem, \"button\")) {\n                        return nodeHook.get(elem, name);\n                    }\n                    return name in elem ?\n\t\t\t\t\telem.value :\n\t\t\t\t\tnull;\n                },\n                set: function (elem, value, name) {\n                    if (nodeHook && jQuery.nodeName(elem, \"button\")) {\n                        return nodeHook.set(elem, value, name);\n                    }\n                    // Does not return so that setAttribute is also used\n                    elem.value = value;\n                }\n            }\n        },\n\n        propFix: {\n            tabindex: \"tabIndex\",\n            readonly: \"readOnly\",\n            \"for\": \"htmlFor\",\n            \"class\": \"className\",\n            maxlength: \"maxLength\",\n            cellspacing: \"cellSpacing\",\n            cellpadding: \"cellPadding\",\n            rowspan: \"rowSpan\",\n            colspan: \"colSpan\",\n            usemap: \"useMap\",\n            frameborder: \"frameBorder\",\n            contenteditable: \"contentEditable\"\n        },\n\n        prop: function (elem, name, value) {\n            var ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n            // don't get/set properties on text, comment and attribute nodes\n            if (!elem || nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n\n            notxml = nType !== 1 || !jQuery.isXMLDoc(elem);\n\n            if (notxml) {\n                // Fix name and attach hooks\n                name = jQuery.propFix[name] || name;\n                hooks = jQuery.propHooks[name];\n            }\n\n            if (value !== undefined) {\n                if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n\n                } else {\n                    return (elem[name] = value);\n                }\n\n            } else {\n                if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n                    return ret;\n\n                } else {\n                    return elem[name];\n                }\n            }\n        },\n\n        propHooks: {\n            tabIndex: {\n                get: function (elem) {\n                    // elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n                    // http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n                    var attributeNode = elem.getAttributeNode(\"tabindex\");\n\n                    return attributeNode && attributeNode.specified ?\n\t\t\t\t\tparseInt(attributeNode.value, 10) :\n\t\t\t\t\trfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ?\n\t\t\t\t\t\t0 :\n\t\t\t\t\t\tundefined;\n                }\n            }\n        }\n    });\n\n    // Add the tabIndex propHook to attrHooks for back-compat (different case is intentional)\n    jQuery.attrHooks.tabindex = jQuery.propHooks.tabIndex;\n\n    // Hook for boolean attributes\n    boolHook = {\n        get: function (elem, name) {\n            // Align boolean attributes with corresponding properties\n            // Fall back to attribute presence where some booleans are not supported\n            var attrNode,\n\t\t\tproperty = jQuery.prop(elem, name);\n            return property === true || typeof property !== \"boolean\" && (attrNode = elem.getAttributeNode(name)) && attrNode.nodeValue !== false ?\n\t\t\tname.toLowerCase() :\n\t\t\tundefined;\n        },\n        set: function (elem, value, name) {\n            var propName;\n            if (value === false) {\n                // Remove boolean attributes when set to false\n                jQuery.removeAttr(elem, name);\n            } else {\n                // value is true since we know at this point it's type boolean and not false\n                // Set boolean attributes to the same name and set the DOM property\n                propName = jQuery.propFix[name] || name;\n                if (propName in elem) {\n                    // Only set the IDL specifically if it already exists on the element\n                    elem[propName] = true;\n                }\n\n                elem.setAttribute(name, name.toLowerCase());\n            }\n            return name;\n        }\n    };\n\n    // IE6/7 do not support getting/setting some attributes with get/setAttribute\n    if (!getSetAttribute) {\n\n        fixSpecified = {\n            name: true,\n            id: true,\n            coords: true\n        };\n\n        // Use this for any attribute in IE6/7\n        // This fixes almost every IE6/7 issue\n        nodeHook = jQuery.valHooks.button = {\n            get: function (elem, name) {\n                var ret;\n                ret = elem.getAttributeNode(name);\n                return ret && (fixSpecified[name] ? ret.nodeValue !== \"\" : ret.specified) ?\n\t\t\t\tret.nodeValue :\n\t\t\t\tundefined;\n            },\n            set: function (elem, value, name) {\n                // Set the existing or create a new attribute node\n                var ret = elem.getAttributeNode(name);\n                if (!ret) {\n                    ret = document.createAttribute(name);\n                    elem.setAttributeNode(ret);\n                }\n                return (ret.nodeValue = value + \"\");\n            }\n        };\n\n        // Apply the nodeHook to tabindex\n        jQuery.attrHooks.tabindex.set = nodeHook.set;\n\n        // Set width and height to auto instead of 0 on empty string( Bug #8150 )\n        // This is for removals\n        jQuery.each([\"width\", \"height\"], function (i, name) {\n            jQuery.attrHooks[name] = jQuery.extend(jQuery.attrHooks[name], {\n                set: function (elem, value) {\n                    if (value === \"\") {\n                        elem.setAttribute(name, \"auto\");\n                        return value;\n                    }\n                }\n            });\n        });\n\n        // Set contenteditable to false on removals(#10429)\n        // Setting to empty string throws an error as an invalid value\n        jQuery.attrHooks.contenteditable = {\n            get: nodeHook.get,\n            set: function (elem, value, name) {\n                if (value === \"\") {\n                    value = \"false\";\n                }\n                nodeHook.set(elem, value, name);\n            }\n        };\n    }\n\n\n    // Some attributes require a special call on IE\n    if (!jQuery.support.hrefNormalized) {\n        jQuery.each([\"href\", \"src\", \"width\", \"height\"], function (i, name) {\n            jQuery.attrHooks[name] = jQuery.extend(jQuery.attrHooks[name], {\n                get: function (elem) {\n                    var ret = elem.getAttribute(name, 2);\n                    return ret === null ? undefined : ret;\n                }\n            });\n        });\n    }\n\n    if (!jQuery.support.style) {\n        jQuery.attrHooks.style = {\n            get: function (elem) {\n                // Return undefined in the case of empty string\n                // Normalize to lowercase since IE uppercases css property names\n                return elem.style.cssText.toLowerCase() || undefined;\n            },\n            set: function (elem, value) {\n                return (elem.style.cssText = \"\" + value);\n            }\n        };\n    }\n\n    // Safari mis-reports the default selected property of an option\n    // Accessing the parent's selectedIndex property fixes it\n    if (!jQuery.support.optSelected) {\n        jQuery.propHooks.selected = jQuery.extend(jQuery.propHooks.selected, {\n            get: function (elem) {\n                var parent = elem.parentNode;\n\n                if (parent) {\n                    parent.selectedIndex;\n\n                    // Make sure that it also works with optgroups, see #5701\n                    if (parent.parentNode) {\n                        parent.parentNode.selectedIndex;\n                    }\n                }\n                return null;\n            }\n        });\n    }\n\n    // IE6/7 call enctype encoding\n    if (!jQuery.support.enctype) {\n        jQuery.propFix.enctype = \"encoding\";\n    }\n\n    // Radios and checkboxes getter/setter\n    if (!jQuery.support.checkOn) {\n        jQuery.each([\"radio\", \"checkbox\"], function () {\n            jQuery.valHooks[this] = {\n                get: function (elem) {\n                    // Handle the case where in Webkit \"\" is returned instead of \"on\" if a value isn't specified\n                    return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n                }\n            };\n        });\n    }\n    jQuery.each([\"radio\", \"checkbox\"], function () {\n        jQuery.valHooks[this] = jQuery.extend(jQuery.valHooks[this], {\n            set: function (elem, value) {\n                if (jQuery.isArray(value)) {\n                    return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0);\n                }\n            }\n        });\n    });\n\n\n\n\n    var rformElems = /^(?:textarea|input|select)$/i,\n\trtypenamespace = /^([^\\.]*)?(?:\\.(.+))?$/,\n\trhoverHack = /(?:^|\\s)hover(\\.\\S+)?\\b/,\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trquickIs = /^(\\w*)(?:#([\\w\\-]+))?(?:\\.([\\w\\-]+))?$/,\n\tquickParse = function (selector) {\n\t    var quick = rquickIs.exec(selector);\n\t    if (quick) {\n\t        //   0  1    2   3\n\t        // [ _, tag, id, class ]\n\t        quick[1] = (quick[1] || \"\").toLowerCase();\n\t        quick[3] = quick[3] && new RegExp(\"(?:^|\\\\s)\" + quick[3] + \"(?:\\\\s|$)\");\n\t    }\n\t    return quick;\n\t},\n\tquickIs = function (elem, m) {\n\t    var attrs = elem.attributes || {};\n\t    return (\n\t\t\t(!m[1] || elem.nodeName.toLowerCase() === m[1]) &&\n\t\t\t(!m[2] || (attrs.id || {}).value === m[2]) &&\n\t\t\t(!m[3] || m[3].test((attrs[\"class\"] || {}).value))\n\t\t);\n\t},\n\thoverHack = function (events) {\n\t    return jQuery.event.special.hover ? events : events.replace(rhoverHack, \"mouseenter$1 mouseleave$1\");\n\t};\n\n    /*\n    * Helper functions for managing events -- not part of the public interface.\n    * Props to Dean Edwards' addEvent library for many of the ideas.\n    */\n    jQuery.event = {\n\n        add: function (elem, types, handler, data, selector) {\n\n            var elemData, eventHandle, events,\n\t\t\tt, tns, type, namespaces, handleObj,\n\t\t\thandleObjIn, quick, handlers, special;\n\n            // Don't attach events to noData or text/comment nodes (allow plain objects tho)\n            if (elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data(elem))) {\n                return;\n            }\n\n            // Caller can pass in an object of custom data in lieu of the handler\n            if (handler.handler) {\n                handleObjIn = handler;\n                handler = handleObjIn.handler;\n                selector = handleObjIn.selector;\n            }\n\n            // Make sure that the handler has a unique ID, used to find/remove it later\n            if (!handler.guid) {\n                handler.guid = jQuery.guid++;\n            }\n\n            // Init the element's event structure and main handler, if this is the first\n            events = elemData.events;\n            if (!events) {\n                elemData.events = events = {};\n            }\n            eventHandle = elemData.handle;\n            if (!eventHandle) {\n                elemData.handle = eventHandle = function (e) {\n                    // Discard the second event of a jQuery.event.trigger() and\n                    // when an event is called after a page has unloaded\n                    return typeof jQuery !== \"undefined\" && (!e || jQuery.event.triggered !== e.type) ?\n\t\t\t\t\tjQuery.event.dispatch.apply(eventHandle.elem, arguments) :\n\t\t\t\t\tundefined;\n                };\n                // Add elem as a property of the handle fn to prevent a memory leak with IE non-native events\n                eventHandle.elem = elem;\n            }\n\n            // Handle multiple events separated by a space\n            // jQuery(...).bind(\"mouseover mouseout\", fn);\n            types = jQuery.trim(hoverHack(types)).split(\" \");\n            for (t = 0; t < types.length; t++) {\n\n                tns = rtypenamespace.exec(types[t]) || [];\n                type = tns[1];\n                namespaces = (tns[2] || \"\").split(\".\").sort();\n\n                // If event changes its type, use the special event handlers for the changed type\n                special = jQuery.event.special[type] || {};\n\n                // If selector defined, determine special event api type, otherwise given type\n                type = (selector ? special.delegateType : special.bindType) || type;\n\n                // Update special based on newly reset type\n                special = jQuery.event.special[type] || {};\n\n                // handleObj is passed to all event handlers\n                handleObj = jQuery.extend({\n                    type: type,\n                    origType: tns[1],\n                    data: data,\n                    handler: handler,\n                    guid: handler.guid,\n                    selector: selector,\n                    quick: selector && quickParse(selector),\n                    namespace: namespaces.join(\".\")\n                }, handleObjIn);\n\n                // Init the event handler queue if we're the first\n                handlers = events[type];\n                if (!handlers) {\n                    handlers = events[type] = [];\n                    handlers.delegateCount = 0;\n\n                    // Only use addEventListener/attachEvent if the special events handler returns false\n                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n                        // Bind the global event handler to the element\n                        if (elem.addEventListener) {\n                            elem.addEventListener(type, eventHandle, false);\n\n                        } else if (elem.attachEvent) {\n                            elem.attachEvent(\"on\" + type, eventHandle);\n                        }\n                    }\n                }\n\n                if (special.add) {\n                    special.add.call(elem, handleObj);\n\n                    if (!handleObj.handler.guid) {\n                        handleObj.handler.guid = handler.guid;\n                    }\n                }\n\n                // Add to the element's handler list, delegates in front\n                if (selector) {\n                    handlers.splice(handlers.delegateCount++, 0, handleObj);\n                } else {\n                    handlers.push(handleObj);\n                }\n\n                // Keep track of which events have ever been used, for event optimization\n                jQuery.event.global[type] = true;\n            }\n\n            // Nullify elem to prevent memory leaks in IE\n            elem = null;\n        },\n\n        global: {},\n\n        // Detach an event or set of events from an element\n        remove: function (elem, types, handler, selector, mappedTypes) {\n\n            var elemData = jQuery.hasData(elem) && jQuery._data(elem),\n\t\t\tt, tns, type, origType, namespaces, origCount,\n\t\t\tj, events, special, handle, eventType, handleObj;\n\n            if (!elemData || !(events = elemData.events)) {\n                return;\n            }\n\n            // Once for each type.namespace in types; type may be omitted\n            types = jQuery.trim(hoverHack(types || \"\")).split(\" \");\n            for (t = 0; t < types.length; t++) {\n                tns = rtypenamespace.exec(types[t]) || [];\n                type = origType = tns[1];\n                namespaces = tns[2];\n\n                // Unbind all events (on this namespace, if provided) for the element\n                if (!type) {\n                    for (type in events) {\n                        jQuery.event.remove(elem, type + types[t], handler, selector, true);\n                    }\n                    continue;\n                }\n\n                special = jQuery.event.special[type] || {};\n                type = (selector ? special.delegateType : special.bindType) || type;\n                eventType = events[type] || [];\n                origCount = eventType.length;\n                namespaces = namespaces ? new RegExp(\"(^|\\\\.)\" + namespaces.split(\".\").sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\") : null;\n\n                // Remove matching events\n                for (j = 0; j < eventType.length; j++) {\n                    handleObj = eventType[j];\n\n                    if ((mappedTypes || origType === handleObj.origType) &&\n\t\t\t\t\t (!handler || handler.guid === handleObj.guid) &&\n\t\t\t\t\t (!namespaces || namespaces.test(handleObj.namespace)) &&\n\t\t\t\t\t (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n                        eventType.splice(j--, 1);\n\n                        if (handleObj.selector) {\n                            eventType.delegateCount--;\n                        }\n                        if (special.remove) {\n                            special.remove.call(elem, handleObj);\n                        }\n                    }\n                }\n\n                // Remove generic event handler if we removed something and no more handlers exist\n                // (avoids potential for endless recursion during removal of special event handlers)\n                if (eventType.length === 0 && origCount !== eventType.length) {\n                    if (!special.teardown || special.teardown.call(elem, namespaces) === false) {\n                        jQuery.removeEvent(elem, type, elemData.handle);\n                    }\n\n                    delete events[type];\n                }\n            }\n\n            // Remove the expando if it's no longer used\n            if (jQuery.isEmptyObject(events)) {\n                handle = elemData.handle;\n                if (handle) {\n                    handle.elem = null;\n                }\n\n                // removeData also checks for emptiness and clears the expando if empty\n                // so use it instead of delete\n                jQuery.removeData(elem, [\"events\", \"handle\"], true);\n            }\n        },\n\n        // Events that are safe to short-circuit if no handlers are attached.\n        // Native DOM events should not be added, they may have inline handlers.\n        customEvent: {\n            \"getData\": true,\n            \"setData\": true,\n            \"changeData\": true\n        },\n\n        trigger: function (event, data, elem, onlyHandlers) {\n            // Don't do events on text and comment nodes\n            if (elem && (elem.nodeType === 3 || elem.nodeType === 8)) {\n                return;\n            }\n\n            // Event object or event type\n            var type = event.type || event,\n\t\t\tnamespaces = [],\n\t\t\tcache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType;\n\n            // focus/blur morphs to focusin/out; ensure we're not firing them right now\n            if (rfocusMorph.test(type + jQuery.event.triggered)) {\n                return;\n            }\n\n            if (type.indexOf(\"!\") >= 0) {\n                // Exclusive events trigger only for the exact event (no namespaces)\n                type = type.slice(0, -1);\n                exclusive = true;\n            }\n\n            if (type.indexOf(\".\") >= 0) {\n                // Namespaced trigger; create a regexp to match event type in handle()\n                namespaces = type.split(\".\");\n                type = namespaces.shift();\n                namespaces.sort();\n            }\n\n            if ((!elem || jQuery.event.customEvent[type]) && !jQuery.event.global[type]) {\n                // No jQuery handlers for this event type, and it can't have inline handlers\n                return;\n            }\n\n            // Caller can pass in an Event, Object, or just an event type string\n            event = typeof event === \"object\" ?\n            // jQuery.Event object\n\t\t\tevent[jQuery.expando] ? event :\n            // Object literal\n\t\t\tnew jQuery.Event(type, event) :\n            // Just the event type (string)\n\t\t\tnew jQuery.Event(type);\n\n            event.type = type;\n            event.isTrigger = true;\n            event.exclusive = exclusive;\n            event.namespace = namespaces.join(\".\");\n            event.namespace_re = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\") : null;\n            ontype = type.indexOf(\":\") < 0 ? \"on\" + type : \"\";\n\n            // Handle a global trigger\n            if (!elem) {\n\n                // TODO: Stop taunting the data cache; remove global events and always attach to document\n                cache = jQuery.cache;\n                for (i in cache) {\n                    if (cache[i].events && cache[i].events[type]) {\n                        jQuery.event.trigger(event, data, cache[i].handle.elem, true);\n                    }\n                }\n                return;\n            }\n\n            // Clean up the event in case it is being reused\n            event.result = undefined;\n            if (!event.target) {\n                event.target = elem;\n            }\n\n            // Clone any incoming data and prepend the event, creating the handler arg list\n            data = data != null ? jQuery.makeArray(data) : [];\n            data.unshift(event);\n\n            // Allow special events to draw outside the lines\n            special = jQuery.event.special[type] || {};\n            if (special.trigger && special.trigger.apply(elem, data) === false) {\n                return;\n            }\n\n            // Determine event propagation path in advance, per W3C events spec (#9951)\n            // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n            eventPath = [[elem, special.bindType || type]];\n            if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\n\n                bubbleType = special.delegateType || type;\n                cur = rfocusMorph.test(bubbleType + type) ? elem : elem.parentNode;\n                old = null;\n                for (; cur; cur = cur.parentNode) {\n                    eventPath.push([cur, bubbleType]);\n                    old = cur;\n                }\n\n                // Only add window if we got to document (e.g., not plain obj or detached DOM)\n                if (old && old === elem.ownerDocument) {\n                    eventPath.push([old.defaultView || old.parentWindow || window, bubbleType]);\n                }\n            }\n\n            // Fire handlers on the event path\n            for (i = 0; i < eventPath.length && !event.isPropagationStopped(); i++) {\n\n                cur = eventPath[i][0];\n                event.type = eventPath[i][1];\n\n                handle = (jQuery._data(cur, \"events\") || {})[event.type] && jQuery._data(cur, \"handle\");\n                if (handle) {\n                    handle.apply(cur, data);\n                }\n                // Note that this is a bare JS function and not a jQuery handler\n                handle = ontype && cur[ontype];\n                if (handle && jQuery.acceptData(cur) && handle.apply(cur, data) === false) {\n                    event.preventDefault();\n                }\n            }\n            event.type = type;\n\n            // If nobody prevented the default action, do it now\n            if (!onlyHandlers && !event.isDefaultPrevented()) {\n\n                if ((!special._default || special._default.apply(elem.ownerDocument, data) === false) &&\n\t\t\t\t!(type === \"click\" && jQuery.nodeName(elem, \"a\")) && jQuery.acceptData(elem)) {\n\n                    // Call a native DOM method on the target with the same name name as the event.\n                    // Can't use an .isFunction() check here because IE6/7 fails that test.\n                    // Don't do default actions on window, that's where global variables be (#6170)\n                    // IE<9 dies on focus/blur to hidden element (#1486)\n                    if (ontype && elem[type] && ((type !== \"focus\" && type !== \"blur\") || event.target.offsetWidth !== 0) && !jQuery.isWindow(elem)) {\n\n                        // Don't re-trigger an onFOO event when we call its FOO() method\n                        old = elem[ontype];\n\n                        if (old) {\n                            elem[ontype] = null;\n                        }\n\n                        // Prevent re-triggering of the same event, since we already bubbled it above\n                        jQuery.event.triggered = type;\n                        elem[type]();\n                        jQuery.event.triggered = undefined;\n\n                        if (old) {\n                            elem[ontype] = old;\n                        }\n                    }\n                }\n            }\n\n            return event.result;\n        },\n\n        dispatch: function (event) {\n\n            // Make a writable jQuery.Event from the native event object\n            event = jQuery.event.fix(event || window.event);\n\n            var handlers = ((jQuery._data(this, \"events\") || {})[event.type] || []),\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\targs = [].slice.call(arguments, 0),\n\t\t\trun_all = !event.exclusive && !event.namespace,\n\t\t\tspecial = jQuery.event.special[event.type] || {},\n\t\t\thandlerQueue = [],\n\t\t\ti, j, cur, jqcur, ret, selMatch, matched, matches, handleObj, sel, related;\n\n            // Use the fix-ed jQuery.Event rather than the (read-only) native event\n            args[0] = event;\n            event.delegateTarget = this;\n\n            // Call the preDispatch hook for the mapped type, and let it bail if desired\n            if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n                return;\n            }\n\n            // Determine handlers that should run if there are delegated events\n            // Avoid non-left-click bubbling in Firefox (#3861)\n            if (delegateCount && !(event.button && event.type === \"click\")) {\n\n                // Pregenerate a single jQuery object for reuse with .is()\n                jqcur = jQuery(this);\n                jqcur.context = this.ownerDocument || this;\n\n                for (cur = event.target; cur != this; cur = cur.parentNode || this) {\n\n                    // Don't process events on disabled elements (#6911, #8165)\n                    if (cur.disabled !== true) {\n                        selMatch = {};\n                        matches = [];\n                        jqcur[0] = cur;\n                        for (i = 0; i < delegateCount; i++) {\n                            handleObj = handlers[i];\n                            sel = handleObj.selector;\n\n                            if (selMatch[sel] === undefined) {\n                                selMatch[sel] = (\n\t\t\t\t\t\t\t\thandleObj.quick ? quickIs(cur, handleObj.quick) : jqcur.is(sel)\n\t\t\t\t\t\t\t);\n                            }\n                            if (selMatch[sel]) {\n                                matches.push(handleObj);\n                            }\n                        }\n                        if (matches.length) {\n                            handlerQueue.push({ elem: cur, matches: matches });\n                        }\n                    }\n                }\n            }\n\n            // Add the remaining (directly-bound) handlers\n            if (handlers.length > delegateCount) {\n                handlerQueue.push({ elem: this, matches: handlers.slice(delegateCount) });\n            }\n\n            // Run delegates first; they may want to stop propagation beneath us\n            for (i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++) {\n                matched = handlerQueue[i];\n                event.currentTarget = matched.elem;\n\n                for (j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++) {\n                    handleObj = matched.matches[j];\n\n                    // Triggered event must either 1) be non-exclusive and have no namespace, or\n                    // 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\n                    if (run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test(handleObj.namespace)) {\n\n                        event.data = handleObj.data;\n                        event.handleObj = handleObj;\n\n                        ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler)\n\t\t\t\t\t\t\t.apply(matched.elem, args);\n\n                        if (ret !== undefined) {\n                            event.result = ret;\n                            if (ret === false) {\n                                event.preventDefault();\n                                event.stopPropagation();\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Call the postDispatch hook for the mapped type\n            if (special.postDispatch) {\n                special.postDispatch.call(this, event);\n            }\n\n            return event.result;\n        },\n\n        // Includes some event props shared by KeyEvent and MouseEvent\n        // *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***\n        props: \"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n        fixHooks: {},\n\n        keyHooks: {\n            props: \"char charCode key keyCode\".split(\" \"),\n            filter: function (event, original) {\n\n                // Add which for key events\n                if (event.which == null) {\n                    event.which = original.charCode != null ? original.charCode : original.keyCode;\n                }\n\n                return event;\n            }\n        },\n\n        mouseHooks: {\n            props: \"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n            filter: function (event, original) {\n                var eventDoc, doc, body,\n\t\t\t\tbutton = original.button,\n\t\t\t\tfromElement = original.fromElement;\n\n                // Calculate pageX/Y if missing and clientX/Y available\n                if (event.pageX == null && original.clientX != null) {\n                    eventDoc = event.target.ownerDocument || document;\n                    doc = eventDoc.documentElement;\n                    body = eventDoc.body;\n\n                    event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n                    event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n                }\n\n                // Add relatedTarget, if necessary\n                if (!event.relatedTarget && fromElement) {\n                    event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;\n                }\n\n                // Add which for click: 1 === left; 2 === middle; 3 === right\n                // Note: button is not normalized, so don't use it\n                if (!event.which && button !== undefined) {\n                    event.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n                }\n\n                return event;\n            }\n        },\n\n        fix: function (event) {\n            if (event[jQuery.expando]) {\n                return event;\n            }\n\n            // Create a writable copy of the event object and normalize some properties\n            var i, prop,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = jQuery.event.fixHooks[event.type] || {},\n\t\t\tcopy = fixHook.props ? this.props.concat(fixHook.props) : this.props;\n\n            event = jQuery.Event(originalEvent);\n\n            for (i = copy.length; i; ) {\n                prop = copy[--i];\n                event[prop] = originalEvent[prop];\n            }\n\n            // Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)\n            if (!event.target) {\n                event.target = originalEvent.srcElement || document;\n            }\n\n            // Target should not be a text node (#504, Safari)\n            if (event.target.nodeType === 3) {\n                event.target = event.target.parentNode;\n            }\n\n            // For mouse/key events; add metaKey if it's not there (#3368, IE6/7/8)\n            if (event.metaKey === undefined) {\n                event.metaKey = event.ctrlKey;\n            }\n\n            return fixHook.filter ? fixHook.filter(event, originalEvent) : event;\n        },\n\n        special: {\n            ready: {\n                // Make sure the ready event is setup\n                setup: jQuery.bindReady\n            },\n\n            load: {\n                // Prevent triggered image.load events from bubbling to window.load\n                noBubble: true\n            },\n\n            focus: {\n                delegateType: \"focusin\"\n            },\n            blur: {\n                delegateType: \"focusout\"\n            },\n\n            beforeunload: {\n                setup: function (data, namespaces, eventHandle) {\n                    // We only want to do this special case on windows\n                    if (jQuery.isWindow(this)) {\n                        this.onbeforeunload = eventHandle;\n                    }\n                },\n\n                teardown: function (namespaces, eventHandle) {\n                    if (this.onbeforeunload === eventHandle) {\n                        this.onbeforeunload = null;\n                    }\n                }\n            }\n        },\n\n        simulate: function (type, elem, event, bubble) {\n            // Piggyback on a donor event to simulate a different one.\n            // Fake originalEvent to avoid donor's stopPropagation, but if the\n            // simulated event prevents default then we do the same on the donor.\n            var e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{ type: type,\n\t\t\t    isSimulated: true,\n\t\t\t    originalEvent: {}\n\t\t\t}\n\t\t);\n            if (bubble) {\n                jQuery.event.trigger(e, null, elem);\n            } else {\n                jQuery.event.dispatch.call(elem, e);\n            }\n            if (e.isDefaultPrevented()) {\n                event.preventDefault();\n            }\n        }\n    };\n\n    // Some plugins are using, but it's undocumented/deprecated and will be removed.\n    // The 1.7 special event interface should provide all the hooks needed now.\n    jQuery.event.handle = jQuery.event.dispatch;\n\n    jQuery.removeEvent = document.removeEventListener ?\n\tfunction (elem, type, handle) {\n\t    if (elem.removeEventListener) {\n\t        elem.removeEventListener(type, handle, false);\n\t    }\n\t} :\n\tfunction (elem, type, handle) {\n\t    if (elem.detachEvent) {\n\t        elem.detachEvent(\"on\" + type, handle);\n\t    }\n\t};\n\n    jQuery.Event = function (src, props) {\n        // Allow instantiation without the 'new' keyword\n        if (!(this instanceof jQuery.Event)) {\n            return new jQuery.Event(src, props);\n        }\n\n        // Event object\n        if (src && src.type) {\n            this.originalEvent = src;\n            this.type = src.type;\n\n            // Events bubbling up the document may have been marked as prevented\n            // by a handler lower down the tree; reflect the correct value.\n            this.isDefaultPrevented = (src.defaultPrevented || src.returnValue === false ||\n\t\t\tsrc.getPreventDefault && src.getPreventDefault()) ? returnTrue : returnFalse;\n\n            // Event type\n        } else {\n            this.type = src;\n        }\n\n        // Put explicitly provided properties onto the event object\n        if (props) {\n            jQuery.extend(this, props);\n        }\n\n        // Create a timestamp if incoming event doesn't have one\n        this.timeStamp = src && src.timeStamp || jQuery.now();\n\n        // Mark it as fixed\n        this[jQuery.expando] = true;\n    };\n\n    function returnFalse() {\n        return false;\n    }\n    function returnTrue() {\n        return true;\n    }\n\n    // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n    // http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n    jQuery.Event.prototype = {\n        preventDefault: function () {\n            this.isDefaultPrevented = returnTrue;\n\n            var e = this.originalEvent;\n            if (!e) {\n                return;\n            }\n\n            // if preventDefault exists run it on the original event\n            if (e.preventDefault) {\n                e.preventDefault();\n\n                // otherwise set the returnValue property of the original event to false (IE)\n            } else {\n                e.returnValue = false;\n            }\n        },\n        stopPropagation: function () {\n            this.isPropagationStopped = returnTrue;\n\n            var e = this.originalEvent;\n            if (!e) {\n                return;\n            }\n            // if stopPropagation exists run it on the original event\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n            // otherwise set the cancelBubble property of the original event to true (IE)\n            e.cancelBubble = true;\n        },\n        stopImmediatePropagation: function () {\n            this.isImmediatePropagationStopped = returnTrue;\n            this.stopPropagation();\n        },\n        isDefaultPrevented: returnFalse,\n        isPropagationStopped: returnFalse,\n        isImmediatePropagationStopped: returnFalse\n    };\n\n    // Create mouseenter/leave events using mouseover/out and event-time checks\n    jQuery.each({\n        mouseenter: \"mouseover\",\n        mouseleave: \"mouseout\"\n    }, function (orig, fix) {\n        jQuery.event.special[orig] = {\n            delegateType: fix,\n            bindType: fix,\n\n            handle: function (event) {\n                var target = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj,\n\t\t\t\tselector = handleObj.selector,\n\t\t\t\tret;\n\n                // For mousenter/leave call the handler if related is outside the target.\n                // NB: No relatedTarget if the mouse left/entered the browser window\n                if (!related || (related !== target && !jQuery.contains(target, related))) {\n                    event.type = handleObj.origType;\n                    ret = handleObj.handler.apply(this, arguments);\n                    event.type = fix;\n                }\n                return ret;\n            }\n        };\n    });\n\n    // IE submit delegation\n    if (!jQuery.support.submitBubbles) {\n\n        jQuery.event.special.submit = {\n            setup: function () {\n                // Only need this for delegated form submit events\n                if (jQuery.nodeName(this, \"form\")) {\n                    return false;\n                }\n\n                // Lazy-add a submit handler when a descendant form may potentially be submitted\n                jQuery.event.add(this, \"click._submit keypress._submit\", function (e) {\n                    // Node name check avoids a VML-related crash in IE (#9807)\n                    var elem = e.target,\n\t\t\t\t\tform = jQuery.nodeName(elem, \"input\") || jQuery.nodeName(elem, \"button\") ? elem.form : undefined;\n                    if (form && !form._submit_attached) {\n                        jQuery.event.add(form, \"submit._submit\", function (event) {\n                            event._submit_bubble = true;\n                        });\n                        form._submit_attached = true;\n                    }\n                });\n                // return undefined since we don't need an event listener\n            },\n\n            postDispatch: function (event) {\n                // If form was submitted by the user, bubble the event up the tree\n                if (event._submit_bubble) {\n                    delete event._submit_bubble;\n                    if (this.parentNode && !event.isTrigger) {\n                        jQuery.event.simulate(\"submit\", this.parentNode, event, true);\n                    }\n                }\n            },\n\n            teardown: function () {\n                // Only need this for delegated form submit events\n                if (jQuery.nodeName(this, \"form\")) {\n                    return false;\n                }\n\n                // Remove delegated handlers; cleanData eventually reaps submit handlers attached above\n                jQuery.event.remove(this, \"._submit\");\n            }\n        };\n    }\n\n    // IE change delegation and checkbox/radio fix\n    if (!jQuery.support.changeBubbles) {\n\n        jQuery.event.special.change = {\n\n            setup: function () {\n\n                if (rformElems.test(this.nodeName)) {\n                    // IE doesn't fire change on a check/radio until blur; trigger it on click\n                    // after a propertychange. Eat the blur-change in special.change.handle.\n                    // This still fires onchange a second time for check/radio after blur.\n                    if (this.type === \"checkbox\" || this.type === \"radio\") {\n                        jQuery.event.add(this, \"propertychange._change\", function (event) {\n                            if (event.originalEvent.propertyName === \"checked\") {\n                                this._just_changed = true;\n                            }\n                        });\n                        jQuery.event.add(this, \"click._change\", function (event) {\n                            if (this._just_changed && !event.isTrigger) {\n                                this._just_changed = false;\n                                jQuery.event.simulate(\"change\", this, event, true);\n                            }\n                        });\n                    }\n                    return false;\n                }\n                // Delegated event; lazy-add a change handler on descendant inputs\n                jQuery.event.add(this, \"beforeactivate._change\", function (e) {\n                    var elem = e.target;\n\n                    if (rformElems.test(elem.nodeName) && !elem._change_attached) {\n                        jQuery.event.add(elem, \"change._change\", function (event) {\n                            if (this.parentNode && !event.isSimulated && !event.isTrigger) {\n                                jQuery.event.simulate(\"change\", this.parentNode, event, true);\n                            }\n                        });\n                        elem._change_attached = true;\n                    }\n                });\n            },\n\n            handle: function (event) {\n                var elem = event.target;\n\n                // Swallow native change events from checkbox/radio, we already triggered them above\n                if (this !== elem || event.isSimulated || event.isTrigger || (elem.type !== \"radio\" && elem.type !== \"checkbox\")) {\n                    return event.handleObj.handler.apply(this, arguments);\n                }\n            },\n\n            teardown: function () {\n                jQuery.event.remove(this, \"._change\");\n\n                return rformElems.test(this.nodeName);\n            }\n        };\n    }\n\n    // Create \"bubbling\" focus and blur events\n    if (!jQuery.support.focusinBubbles) {\n        jQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function (orig, fix) {\n\n            // Attach a single capturing handler while someone wants focusin/focusout\n            var attaches = 0,\n\t\t\thandler = function (event) {\n\t\t\t    jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), true);\n\t\t\t};\n\n            jQuery.event.special[fix] = {\n                setup: function () {\n                    if (attaches++ === 0) {\n                        document.addEventListener(orig, handler, true);\n                    }\n                },\n                teardown: function () {\n                    if (--attaches === 0) {\n                        document.removeEventListener(orig, handler, true);\n                    }\n                }\n            };\n        });\n    }\n\n    jQuery.fn.extend({\n\n        on: function (types, selector, data, fn, /*INTERNAL*/one) {\n            var origFn, type;\n\n            // Types can be a map of types/handlers\n            if (typeof types === \"object\") {\n                // ( types-Object, selector, data )\n                if (typeof selector !== \"string\") { // && selector != null\n                    // ( types-Object, data )\n                    data = data || selector;\n                    selector = undefined;\n                }\n                for (type in types) {\n                    this.on(type, selector, data, types[type], one);\n                }\n                return this;\n            }\n\n            if (data == null && fn == null) {\n                // ( types, fn )\n                fn = selector;\n                data = selector = undefined;\n            } else if (fn == null) {\n                if (typeof selector === \"string\") {\n                    // ( types, selector, fn )\n                    fn = data;\n                    data = undefined;\n                } else {\n                    // ( types, data, fn )\n                    fn = data;\n                    data = selector;\n                    selector = undefined;\n                }\n            }\n            if (fn === false) {\n                fn = returnFalse;\n            } else if (!fn) {\n                return this;\n            }\n\n            if (one === 1) {\n                origFn = fn;\n                fn = function (event) {\n                    // Can use an empty set, since event contains the info\n                    jQuery().off(event);\n                    return origFn.apply(this, arguments);\n                };\n                // Use same guid so caller can remove using origFn\n                fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n            }\n            return this.each(function () {\n                jQuery.event.add(this, types, fn, data, selector);\n            });\n        },\n        one: function (types, selector, data, fn) {\n            return this.on(types, selector, data, fn, 1);\n        },\n        off: function (types, selector, fn) {\n            if (types && types.preventDefault && types.handleObj) {\n                // ( event )  dispatched jQuery.Event\n                var handleObj = types.handleObj;\n                jQuery(types.delegateTarget).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n                return this;\n            }\n            if (typeof types === \"object\") {\n                // ( types-object [, selector] )\n                for (var type in types) {\n                    this.off(type, selector, types[type]);\n                }\n                return this;\n            }\n            if (selector === false || typeof selector === \"function\") {\n                // ( types [, fn] )\n                fn = selector;\n                selector = undefined;\n            }\n            if (fn === false) {\n                fn = returnFalse;\n            }\n            return this.each(function () {\n                jQuery.event.remove(this, types, fn, selector);\n            });\n        },\n\n        bind: function (types, data, fn) {\n            return this.on(types, null, data, fn);\n        },\n        unbind: function (types, fn) {\n            return this.off(types, null, fn);\n        },\n\n        live: function (types, data, fn) {\n            jQuery(this.context).on(types, this.selector, data, fn);\n            return this;\n        },\n        die: function (types, fn) {\n            jQuery(this.context).off(types, this.selector || \"**\", fn);\n            return this;\n        },\n\n        delegate: function (selector, types, data, fn) {\n            return this.on(types, selector, data, fn);\n        },\n        undelegate: function (selector, types, fn) {\n            // ( namespace ) or ( selector, types [, fn] )\n            return arguments.length == 1 ? this.off(selector, \"**\") : this.off(types, selector, fn);\n        },\n\n        trigger: function (type, data) {\n            return this.each(function () {\n                jQuery.event.trigger(type, data, this);\n            });\n        },\n        triggerHandler: function (type, data) {\n            if (this[0]) {\n                return jQuery.event.trigger(type, data, this[0], true);\n            }\n        },\n\n        toggle: function (fn) {\n            // Save reference to arguments for access in closure\n            var args = arguments,\n\t\t\tguid = fn.guid || jQuery.guid++,\n\t\t\ti = 0,\n\t\t\ttoggler = function (event) {\n\t\t\t    // Figure out which function to execute\n\t\t\t    var lastToggle = (jQuery._data(this, \"lastToggle\" + fn.guid) || 0) % i;\n\t\t\t    jQuery._data(this, \"lastToggle\" + fn.guid, lastToggle + 1);\n\n\t\t\t    // Make sure that clicks stop\n\t\t\t    event.preventDefault();\n\n\t\t\t    // and execute the function\n\t\t\t    return args[lastToggle].apply(this, arguments) || false;\n\t\t\t};\n\n            // link all the functions, so any of them can unbind this click handler\n            toggler.guid = guid;\n            while (i < args.length) {\n                args[i++].guid = guid;\n            }\n\n            return this.click(toggler);\n        },\n\n        hover: function (fnOver, fnOut) {\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n        }\n    });\n\n    jQuery.each((\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function (i, name) {\n\n\t    // Handle event binding\n\t    jQuery.fn[name] = function (data, fn) {\n\t        if (fn == null) {\n\t            fn = data;\n\t            data = null;\n\t        }\n\n\t        return arguments.length > 0 ?\n\t\t\tthis.on(name, null, data, fn) :\n\t\t\tthis.trigger(name);\n\t    };\n\n\t    if (jQuery.attrFn) {\n\t        jQuery.attrFn[name] = true;\n\t    }\n\n\t    if (rkeyEvent.test(name)) {\n\t        jQuery.event.fixHooks[name] = jQuery.event.keyHooks;\n\t    }\n\n\t    if (rmouseEvent.test(name)) {\n\t        jQuery.event.fixHooks[name] = jQuery.event.mouseHooks;\n\t    }\n\t});\n\n\n\n    /*!\n    * Sizzle CSS Selector Engine\n    *  Copyright 2011, The Dojo Foundation\n    *  Released under the MIT, BSD, and GPL Licenses.\n    *  More information: http://sizzlejs.com/\n    */\n    (function () {\n\n        var chunker = /((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g,\n\texpando = \"sizcache\" + (Math.random() + '').replace('.', ''),\n\tdone = 0,\n\ttoString = Object.prototype.toString,\n\thasDuplicate = false,\n\tbaseHasDuplicate = true,\n\trBackslash = /\\\\/g,\n\trReturn = /\\r\\n/g,\n\trNonWord = /\\W/;\n\n        // Here we check if the JavaScript engine is using some sort of\n        // optimization where it does not always call our comparision\n        // function. If that is the case, discard the hasDuplicate value.\n        //   Thus far that includes Google Chrome.\n        [0, 0].sort(function () {\n            baseHasDuplicate = false;\n            return 0;\n        });\n\n        var Sizzle = function (selector, context, results, seed) {\n            results = results || [];\n            context = context || document;\n\n            var origContext = context;\n\n            if (context.nodeType !== 1 && context.nodeType !== 9) {\n                return [];\n            }\n\n            if (!selector || typeof selector !== \"string\") {\n                return results;\n            }\n\n            var m, set, checkSet, extra, ret, cur, pop, i,\n\t\tprune = true,\n\t\tcontextXML = Sizzle.isXML(context),\n\t\tparts = [],\n\t\tsoFar = selector;\n\n            // Reset the position of the chunker regexp (start from head)\n            do {\n                chunker.exec(\"\");\n                m = chunker.exec(soFar);\n\n                if (m) {\n                    soFar = m[3];\n\n                    parts.push(m[1]);\n\n                    if (m[2]) {\n                        extra = m[3];\n                        break;\n                    }\n                }\n            } while (m);\n\n            if (parts.length > 1 && origPOS.exec(selector)) {\n\n                if (parts.length === 2 && Expr.relative[parts[0]]) {\n                    set = posProcess(parts[0] + parts[1], context, seed);\n\n                } else {\n                    set = Expr.relative[parts[0]] ?\n\t\t\t\t[context] :\n\t\t\t\tSizzle(parts.shift(), context);\n\n                    while (parts.length) {\n                        selector = parts.shift();\n\n                        if (Expr.relative[selector]) {\n                            selector += parts.shift();\n                        }\n\n                        set = posProcess(selector, set, seed);\n                    }\n                }\n\n            } else {\n                // Take a shortcut and set the context if the root selector is an ID\n                // (but not if it'll be faster if the inner selector is an ID)\n                if (!seed && parts.length > 1 && context.nodeType === 9 && !contextXML &&\n\t\t\t\tExpr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1])) {\n\n                    ret = Sizzle.find(parts.shift(), context, contextXML);\n                    context = ret.expr ?\n\t\t\t\tSizzle.filter(ret.expr, ret.set)[0] :\n\t\t\t\tret.set[0];\n                }\n\n                if (context) {\n                    ret = seed ?\n\t\t\t\t{ expr: parts.pop(), set: makeArray(seed)} :\n\t\t\t\tSizzle.find(parts.pop(), parts.length === 1 && (parts[0] === \"~\" || parts[0] === \"+\") && context.parentNode ? context.parentNode : context, contextXML);\n\n                    set = ret.expr ?\n\t\t\t\tSizzle.filter(ret.expr, ret.set) :\n\t\t\t\tret.set;\n\n                    if (parts.length > 0) {\n                        checkSet = makeArray(set);\n\n                    } else {\n                        prune = false;\n                    }\n\n                    while (parts.length) {\n                        cur = parts.pop();\n                        pop = cur;\n\n                        if (!Expr.relative[cur]) {\n                            cur = \"\";\n                        } else {\n                            pop = parts.pop();\n                        }\n\n                        if (pop == null) {\n                            pop = context;\n                        }\n\n                        Expr.relative[cur](checkSet, pop, contextXML);\n                    }\n\n                } else {\n                    checkSet = parts = [];\n                }\n            }\n\n            if (!checkSet) {\n                checkSet = set;\n            }\n\n            if (!checkSet) {\n                Sizzle.error(cur || selector);\n            }\n\n            if (toString.call(checkSet) === \"[object Array]\") {\n                if (!prune) {\n                    results.push.apply(results, checkSet);\n\n                } else if (context && context.nodeType === 1) {\n                    for (i = 0; checkSet[i] != null; i++) {\n                        if (checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i]))) {\n                            results.push(set[i]);\n                        }\n                    }\n\n                } else {\n                    for (i = 0; checkSet[i] != null; i++) {\n                        if (checkSet[i] && checkSet[i].nodeType === 1) {\n                            results.push(set[i]);\n                        }\n                    }\n                }\n\n            } else {\n                makeArray(checkSet, results);\n            }\n\n            if (extra) {\n                Sizzle(extra, origContext, results, seed);\n                Sizzle.uniqueSort(results);\n            }\n\n            return results;\n        };\n\n        Sizzle.uniqueSort = function (results) {\n            if (sortOrder) {\n                hasDuplicate = baseHasDuplicate;\n                results.sort(sortOrder);\n\n                if (hasDuplicate) {\n                    for (var i = 1; i < results.length; i++) {\n                        if (results[i] === results[i - 1]) {\n                            results.splice(i--, 1);\n                        }\n                    }\n                }\n            }\n\n            return results;\n        };\n\n        Sizzle.matches = function (expr, set) {\n            return Sizzle(expr, null, null, set);\n        };\n\n        Sizzle.matchesSelector = function (node, expr) {\n            return Sizzle(expr, null, null, [node]).length > 0;\n        };\n\n        Sizzle.find = function (expr, context, isXML) {\n            var set, i, len, match, type, left;\n\n            if (!expr) {\n                return [];\n            }\n\n            for (i = 0, len = Expr.order.length; i < len; i++) {\n                type = Expr.order[i];\n\n                if ((match = Expr.leftMatch[type].exec(expr))) {\n                    left = match[1];\n                    match.splice(1, 1);\n\n                    if (left.substr(left.length - 1) !== \"\\\\\") {\n                        match[1] = (match[1] || \"\").replace(rBackslash, \"\");\n                        set = Expr.find[type](match, context, isXML);\n\n                        if (set != null) {\n                            expr = expr.replace(Expr.match[type], \"\");\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (!set) {\n                set = typeof context.getElementsByTagName !== \"undefined\" ?\n\t\t\tcontext.getElementsByTagName(\"*\") :\n\t\t\t[];\n            }\n\n            return { set: set, expr: expr };\n        };\n\n        Sizzle.filter = function (expr, set, inplace, not) {\n            var match, anyFound,\n\t\ttype, found, item, filter, left,\n\t\ti, pass,\n\t\told = expr,\n\t\tresult = [],\n\t\tcurLoop = set,\n\t\tisXMLFilter = set && set[0] && Sizzle.isXML(set[0]);\n\n            while (expr && set.length) {\n                for (type in Expr.filter) {\n                    if ((match = Expr.leftMatch[type].exec(expr)) != null && match[2]) {\n                        filter = Expr.filter[type];\n                        left = match[1];\n\n                        anyFound = false;\n\n                        match.splice(1, 1);\n\n                        if (left.substr(left.length - 1) === \"\\\\\") {\n                            continue;\n                        }\n\n                        if (curLoop === result) {\n                            result = [];\n                        }\n\n                        if (Expr.preFilter[type]) {\n                            match = Expr.preFilter[type](match, curLoop, inplace, result, not, isXMLFilter);\n\n                            if (!match) {\n                                anyFound = found = true;\n\n                            } else if (match === true) {\n                                continue;\n                            }\n                        }\n\n                        if (match) {\n                            for (i = 0; (item = curLoop[i]) != null; i++) {\n                                if (item) {\n                                    found = filter(item, match, i, curLoop);\n                                    pass = not ^ found;\n\n                                    if (inplace && found != null) {\n                                        if (pass) {\n                                            anyFound = true;\n\n                                        } else {\n                                            curLoop[i] = false;\n                                        }\n\n                                    } else if (pass) {\n                                        result.push(item);\n                                        anyFound = true;\n                                    }\n                                }\n                            }\n                        }\n\n                        if (found !== undefined) {\n                            if (!inplace) {\n                                curLoop = result;\n                            }\n\n                            expr = expr.replace(Expr.match[type], \"\");\n\n                            if (!anyFound) {\n                                return [];\n                            }\n\n                            break;\n                        }\n                    }\n                }\n\n                // Improper expression\n                if (expr === old) {\n                    if (anyFound == null) {\n                        Sizzle.error(expr);\n\n                    } else {\n                        break;\n                    }\n                }\n\n                old = expr;\n            }\n\n            return curLoop;\n        };\n\n        Sizzle.error = function (msg) {\n            throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n        };\n\n        /**\n        * Utility function for retreiving the text value of an array of DOM nodes\n        * @param {Array|Element} elem\n        */\n        var getText = Sizzle.getText = function (elem) {\n            var i, node,\n\t\tnodeType = elem.nodeType,\n\t\tret = \"\";\n\n            if (nodeType) {\n                if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n                    // Use textContent || innerText for elements\n                    if (typeof elem.textContent === 'string') {\n                        return elem.textContent;\n                    } else if (typeof elem.innerText === 'string') {\n                        // Replace IE's carriage returns\n                        return elem.innerText.replace(rReturn, '');\n                    } else {\n                        // Traverse it's children\n                        for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                            ret += getText(elem);\n                        }\n                    }\n                } else if (nodeType === 3 || nodeType === 4) {\n                    return elem.nodeValue;\n                }\n            } else {\n\n                // If no nodeType, this is expected to be an array\n                for (i = 0; (node = elem[i]); i++) {\n                    // Do not traverse comment nodes\n                    if (node.nodeType !== 8) {\n                        ret += getText(node);\n                    }\n                }\n            }\n            return ret;\n        };\n\n        var Expr = Sizzle.selectors = {\n            order: [\"ID\", \"NAME\", \"TAG\"],\n\n            match: {\n                ID: /#((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/,\n                CLASS: /\\.((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/,\n                NAME: /\\[name=['\"]*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)['\"]*\\]/,\n                ATTR: /\\[\\s*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)\\s*(?:(\\S?=)\\s*(?:(['\"])(.*?)\\3|(#?(?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)*)|)|)\\s*\\]/,\n                TAG: /^((?:[\\w\\u00c0-\\uFFFF\\*\\-]|\\\\.)+)/,\n                CHILD: /:(only|nth|last|first)-child(?:\\(\\s*(even|odd|(?:[+\\-]?\\d+|(?:[+\\-]?\\d*)?n\\s*(?:[+\\-]\\s*\\d+)?))\\s*\\))?/,\n                POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\))?(?=[^\\-]|$)/,\n                PSEUDO: /:((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)(?:\\((['\"]?)((?:\\([^\\)]+\\)|[^\\(\\)]*)+)\\2\\))?/\n            },\n\n            leftMatch: {},\n\n            attrMap: {\n                \"class\": \"className\",\n                \"for\": \"htmlFor\"\n            },\n\n            attrHandle: {\n                href: function (elem) {\n                    return elem.getAttribute(\"href\");\n                },\n                type: function (elem) {\n                    return elem.getAttribute(\"type\");\n                }\n            },\n\n            relative: {\n                \"+\": function (checkSet, part) {\n                    var isPartStr = typeof part === \"string\",\n\t\t\t\tisTag = isPartStr && !rNonWord.test(part),\n\t\t\t\tisPartStrNotTag = isPartStr && !isTag;\n\n                    if (isTag) {\n                        part = part.toLowerCase();\n                    }\n\n                    for (var i = 0, l = checkSet.length, elem; i < l; i++) {\n                        if ((elem = checkSet[i])) {\n                            while ((elem = elem.previousSibling) && elem.nodeType !== 1) { }\n\n                            checkSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ?\n\t\t\t\t\t\telem || false :\n\t\t\t\t\t\telem === part;\n                        }\n                    }\n\n                    if (isPartStrNotTag) {\n                        Sizzle.filter(part, checkSet, true);\n                    }\n                },\n\n                \">\": function (checkSet, part) {\n                    var elem,\n\t\t\t\tisPartStr = typeof part === \"string\",\n\t\t\t\ti = 0,\n\t\t\t\tl = checkSet.length;\n\n                    if (isPartStr && !rNonWord.test(part)) {\n                        part = part.toLowerCase();\n\n                        for (; i < l; i++) {\n                            elem = checkSet[i];\n\n                            if (elem) {\n                                var parent = elem.parentNode;\n                                checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false;\n                            }\n                        }\n\n                    } else {\n                        for (; i < l; i++) {\n                            elem = checkSet[i];\n\n                            if (elem) {\n                                checkSet[i] = isPartStr ?\n\t\t\t\t\t\t\telem.parentNode :\n\t\t\t\t\t\t\telem.parentNode === part;\n                            }\n                        }\n\n                        if (isPartStr) {\n                            Sizzle.filter(part, checkSet, true);\n                        }\n                    }\n                },\n\n                \"\": function (checkSet, part, isXML) {\n                    var nodeCheck,\n\t\t\t\tdoneName = done++,\n\t\t\t\tcheckFn = dirCheck;\n\n                    if (typeof part === \"string\" && !rNonWord.test(part)) {\n                        part = part.toLowerCase();\n                        nodeCheck = part;\n                        checkFn = dirNodeCheck;\n                    }\n\n                    checkFn(\"parentNode\", part, doneName, checkSet, nodeCheck, isXML);\n                },\n\n                \"~\": function (checkSet, part, isXML) {\n                    var nodeCheck,\n\t\t\t\tdoneName = done++,\n\t\t\t\tcheckFn = dirCheck;\n\n                    if (typeof part === \"string\" && !rNonWord.test(part)) {\n                        part = part.toLowerCase();\n                        nodeCheck = part;\n                        checkFn = dirNodeCheck;\n                    }\n\n                    checkFn(\"previousSibling\", part, doneName, checkSet, nodeCheck, isXML);\n                }\n            },\n\n            find: {\n                ID: function (match, context, isXML) {\n                    if (typeof context.getElementById !== \"undefined\" && !isXML) {\n                        var m = context.getElementById(match[1]);\n                        // Check parentNode to catch when Blackberry 4.6 returns\n                        // nodes that are no longer in the document #6963\n                        return m && m.parentNode ? [m] : [];\n                    }\n                },\n\n                NAME: function (match, context) {\n                    if (typeof context.getElementsByName !== \"undefined\") {\n                        var ret = [],\n\t\t\t\t\tresults = context.getElementsByName(match[1]);\n\n                        for (var i = 0, l = results.length; i < l; i++) {\n                            if (results[i].getAttribute(\"name\") === match[1]) {\n                                ret.push(results[i]);\n                            }\n                        }\n\n                        return ret.length === 0 ? null : ret;\n                    }\n                },\n\n                TAG: function (match, context) {\n                    if (typeof context.getElementsByTagName !== \"undefined\") {\n                        return context.getElementsByTagName(match[1]);\n                    }\n                }\n            },\n            preFilter: {\n                CLASS: function (match, curLoop, inplace, result, not, isXML) {\n                    match = \" \" + match[1].replace(rBackslash, \"\") + \" \";\n\n                    if (isXML) {\n                        return match;\n                    }\n\n                    for (var i = 0, elem; (elem = curLoop[i]) != null; i++) {\n                        if (elem) {\n                            if (not ^ (elem.className && (\" \" + elem.className + \" \").replace(/[\\t\\n\\r]/g, \" \").indexOf(match) >= 0)) {\n                                if (!inplace) {\n                                    result.push(elem);\n                                }\n\n                            } else if (inplace) {\n                                curLoop[i] = false;\n                            }\n                        }\n                    }\n\n                    return false;\n                },\n\n                ID: function (match) {\n                    return match[1].replace(rBackslash, \"\");\n                },\n\n                TAG: function (match, curLoop) {\n                    return match[1].replace(rBackslash, \"\").toLowerCase();\n                },\n\n                CHILD: function (match) {\n                    if (match[1] === \"nth\") {\n                        if (!match[2]) {\n                            Sizzle.error(match[0]);\n                        }\n\n                        match[2] = match[2].replace(/^\\+|\\s*/g, '');\n\n                        // parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6'\n                        var test = /(-?)(\\d*)(?:n([+\\-]?\\d*))?/.exec(\n\t\t\t\t\tmatch[2] === \"even\" && \"2n\" || match[2] === \"odd\" && \"2n+1\" ||\n\t\t\t\t\t!/\\D/.test(match[2]) && \"0n+\" + match[2] || match[2]);\n\n                        // calculate the numbers (first)n+(last) including if they are negative\n                        match[2] = (test[1] + (test[2] || 1)) - 0;\n                        match[3] = test[3] - 0;\n                    }\n                    else if (match[2]) {\n                        Sizzle.error(match[0]);\n                    }\n\n                    // TODO: Move to normal caching system\n                    match[0] = done++;\n\n                    return match;\n                },\n\n                ATTR: function (match, curLoop, inplace, result, not, isXML) {\n                    var name = match[1] = match[1].replace(rBackslash, \"\");\n\n                    if (!isXML && Expr.attrMap[name]) {\n                        match[1] = Expr.attrMap[name];\n                    }\n\n                    // Handle if an un-quoted value was used\n                    match[4] = (match[4] || match[5] || \"\").replace(rBackslash, \"\");\n\n                    if (match[2] === \"~=\") {\n                        match[4] = \" \" + match[4] + \" \";\n                    }\n\n                    return match;\n                },\n\n                PSEUDO: function (match, curLoop, inplace, result, not) {\n                    if (match[1] === \"not\") {\n                        // If we're dealing with a complex expression, or a simple one\n                        if ((chunker.exec(match[3]) || \"\").length > 1 || /^\\w/.test(match[3])) {\n                            match[3] = Sizzle(match[3], null, null, curLoop);\n\n                        } else {\n                            var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);\n\n                            if (!inplace) {\n                                result.push.apply(result, ret);\n                            }\n\n                            return false;\n                        }\n\n                    } else if (Expr.match.POS.test(match[0]) || Expr.match.CHILD.test(match[0])) {\n                        return true;\n                    }\n\n                    return match;\n                },\n\n                POS: function (match) {\n                    match.unshift(true);\n\n                    return match;\n                }\n            },\n\n            filters: {\n                enabled: function (elem) {\n                    return elem.disabled === false && elem.type !== \"hidden\";\n                },\n\n                disabled: function (elem) {\n                    return elem.disabled === true;\n                },\n\n                checked: function (elem) {\n                    return elem.checked === true;\n                },\n\n                selected: function (elem) {\n                    // Accessing this property makes selected-by-default\n                    // options in Safari work properly\n                    if (elem.parentNode) {\n                        elem.parentNode.selectedIndex;\n                    }\n\n                    return elem.selected === true;\n                },\n\n                parent: function (elem) {\n                    return !!elem.firstChild;\n                },\n\n                empty: function (elem) {\n                    return !elem.firstChild;\n                },\n\n                has: function (elem, i, match) {\n                    return !!Sizzle(match[3], elem).length;\n                },\n\n                header: function (elem) {\n                    return (/h\\d/i).test(elem.nodeName);\n                },\n\n                text: function (elem) {\n                    var attr = elem.getAttribute(\"type\"), type = elem.type;\n                    // IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)\n                    // use getAttribute instead to test this case\n                    return elem.nodeName.toLowerCase() === \"input\" && \"text\" === type && (attr === type || attr === null);\n                },\n\n                radio: function (elem) {\n                    return elem.nodeName.toLowerCase() === \"input\" && \"radio\" === elem.type;\n                },\n\n                checkbox: function (elem) {\n                    return elem.nodeName.toLowerCase() === \"input\" && \"checkbox\" === elem.type;\n                },\n\n                file: function (elem) {\n                    return elem.nodeName.toLowerCase() === \"input\" && \"file\" === elem.type;\n                },\n\n                password: function (elem) {\n                    return elem.nodeName.toLowerCase() === \"input\" && \"password\" === elem.type;\n                },\n\n                submit: function (elem) {\n                    var name = elem.nodeName.toLowerCase();\n                    return (name === \"input\" || name === \"button\") && \"submit\" === elem.type;\n                },\n\n                image: function (elem) {\n                    return elem.nodeName.toLowerCase() === \"input\" && \"image\" === elem.type;\n                },\n\n                reset: function (elem) {\n                    var name = elem.nodeName.toLowerCase();\n                    return (name === \"input\" || name === \"button\") && \"reset\" === elem.type;\n                },\n\n                button: function (elem) {\n                    var name = elem.nodeName.toLowerCase();\n                    return name === \"input\" && \"button\" === elem.type || name === \"button\";\n                },\n\n                input: function (elem) {\n                    return (/input|select|textarea|button/i).test(elem.nodeName);\n                },\n\n                focus: function (elem) {\n                    return elem === elem.ownerDocument.activeElement;\n                }\n            },\n            setFilters: {\n                first: function (elem, i) {\n                    return i === 0;\n                },\n\n                last: function (elem, i, match, array) {\n                    return i === array.length - 1;\n                },\n\n                even: function (elem, i) {\n                    return i % 2 === 0;\n                },\n\n                odd: function (elem, i) {\n                    return i % 2 === 1;\n                },\n\n                lt: function (elem, i, match) {\n                    return i < match[3] - 0;\n                },\n\n                gt: function (elem, i, match) {\n                    return i > match[3] - 0;\n                },\n\n                nth: function (elem, i, match) {\n                    return match[3] - 0 === i;\n                },\n\n                eq: function (elem, i, match) {\n                    return match[3] - 0 === i;\n                }\n            },\n            filter: {\n                PSEUDO: function (elem, match, i, array) {\n                    var name = match[1],\n\t\t\t\tfilter = Expr.filters[name];\n\n                    if (filter) {\n                        return filter(elem, i, match, array);\n\n                    } else if (name === \"contains\") {\n                        return (elem.textContent || elem.innerText || getText([elem]) || \"\").indexOf(match[3]) >= 0;\n\n                    } else if (name === \"not\") {\n                        var not = match[3];\n\n                        for (var j = 0, l = not.length; j < l; j++) {\n                            if (not[j] === elem) {\n                                return false;\n                            }\n                        }\n\n                        return true;\n\n                    } else {\n                        Sizzle.error(name);\n                    }\n                },\n\n                CHILD: function (elem, match) {\n                    var first, last,\n\t\t\t\tdoneName, parent, cache,\n\t\t\t\tcount, diff,\n\t\t\t\ttype = match[1],\n\t\t\t\tnode = elem;\n\n                    switch (type) {\n                        case \"only\":\n                        case \"first\":\n                            while ((node = node.previousSibling)) {\n                                if (node.nodeType === 1) {\n                                    return false;\n                                }\n                            }\n\n                            if (type === \"first\") {\n                                return true;\n                            }\n\n                            node = elem;\n\n                            /* falls through */\n                        case \"last\":\n                            while ((node = node.nextSibling)) {\n                                if (node.nodeType === 1) {\n                                    return false;\n                                }\n                            }\n\n                            return true;\n\n                        case \"nth\":\n                            first = match[2];\n                            last = match[3];\n\n                            if (first === 1 && last === 0) {\n                                return true;\n                            }\n\n                            doneName = match[0];\n                            parent = elem.parentNode;\n\n                            if (parent && (parent[expando] !== doneName || !elem.nodeIndex)) {\n                                count = 0;\n\n                                for (node = parent.firstChild; node; node = node.nextSibling) {\n                                    if (node.nodeType === 1) {\n                                        node.nodeIndex = ++count;\n                                    }\n                                }\n\n                                parent[expando] = doneName;\n                            }\n\n                            diff = elem.nodeIndex - last;\n\n                            if (first === 0) {\n                                return diff === 0;\n\n                            } else {\n                                return (diff % first === 0 && diff / first >= 0);\n                            }\n                    }\n                },\n\n                ID: function (elem, match) {\n                    return elem.nodeType === 1 && elem.getAttribute(\"id\") === match;\n                },\n\n                TAG: function (elem, match) {\n                    return (match === \"*\" && elem.nodeType === 1) || !!elem.nodeName && elem.nodeName.toLowerCase() === match;\n                },\n\n                CLASS: function (elem, match) {\n                    return (\" \" + (elem.className || elem.getAttribute(\"class\")) + \" \")\n\t\t\t\t.indexOf(match) > -1;\n                },\n\n                ATTR: function (elem, match) {\n                    var name = match[1],\n\t\t\t\tresult = Sizzle.attr ?\n\t\t\t\t\tSizzle.attr(elem, name) :\n\t\t\t\t\tExpr.attrHandle[name] ?\n\t\t\t\t\tExpr.attrHandle[name](elem) :\n\t\t\t\t\telem[name] != null ?\n\t\t\t\t\t\telem[name] :\n\t\t\t\t\t\telem.getAttribute(name),\n\t\t\t\tvalue = result + \"\",\n\t\t\t\ttype = match[2],\n\t\t\t\tcheck = match[4];\n\n                    return result == null ?\n\t\t\t\ttype === \"!=\" :\n\t\t\t\t!type && Sizzle.attr ?\n\t\t\t\tresult != null :\n\t\t\t\ttype === \"=\" ?\n\t\t\t\tvalue === check :\n\t\t\t\ttype === \"*=\" ?\n\t\t\t\tvalue.indexOf(check) >= 0 :\n\t\t\t\ttype === \"~=\" ?\n\t\t\t\t(\" \" + value + \" \").indexOf(check) >= 0 :\n\t\t\t\t!check ?\n\t\t\t\tvalue && result !== false :\n\t\t\t\ttype === \"!=\" ?\n\t\t\t\tvalue !== check :\n\t\t\t\ttype === \"^=\" ?\n\t\t\t\tvalue.indexOf(check) === 0 :\n\t\t\t\ttype === \"$=\" ?\n\t\t\t\tvalue.substr(value.length - check.length) === check :\n\t\t\t\ttype === \"|=\" ?\n\t\t\t\tvalue === check || value.substr(0, check.length + 1) === check + \"-\" :\n\t\t\t\tfalse;\n                },\n\n                POS: function (elem, match, i, array) {\n                    var name = match[2],\n\t\t\t\tfilter = Expr.setFilters[name];\n\n                    if (filter) {\n                        return filter(elem, i, match, array);\n                    }\n                }\n            }\n        };\n\n        var origPOS = Expr.match.POS,\n\tfescape = function (all, num) {\n\t    return \"\\\\\" + (num - 0 + 1);\n\t};\n\n        for (var type in Expr.match) {\n            Expr.match[type] = new RegExp(Expr.match[type].source + (/(?![^\\[]*\\])(?![^\\(]*\\))/.source));\n            Expr.leftMatch[type] = new RegExp(/(^(?:.|\\r|\\n)*?)/.source + Expr.match[type].source.replace(/\\\\(\\d+)/g, fescape));\n        }\n        // Expose origPOS\n        // \"global\" as in regardless of relation to brackets/parens\n        Expr.match.globalPOS = origPOS;\n\n        var makeArray = function (array, results) {\n            array = Array.prototype.slice.call(array, 0);\n\n            if (results) {\n                results.push.apply(results, array);\n                return results;\n            }\n\n            return array;\n        };\n\n        // Perform a simple check to determine if the browser is capable of\n        // converting a NodeList to an array using builtin methods.\n        // Also verifies that the returned array holds DOM nodes\n        // (which is not the case in the Blackberry browser)\n        try {\n            Array.prototype.slice.call(document.documentElement.childNodes, 0)[0].nodeType;\n\n            // Provide a fallback method if it does not work\n        } catch (e) {\n            makeArray = function (array, results) {\n                var i = 0,\n\t\t\tret = results || [];\n\n                if (toString.call(array) === \"[object Array]\") {\n                    Array.prototype.push.apply(ret, array);\n\n                } else {\n                    if (typeof array.length === \"number\") {\n                        for (var l = array.length; i < l; i++) {\n                            ret.push(array[i]);\n                        }\n\n                    } else {\n                        for (; array[i]; i++) {\n                            ret.push(array[i]);\n                        }\n                    }\n                }\n\n                return ret;\n            };\n        }\n\n        var sortOrder, siblingCheck;\n\n        if (document.documentElement.compareDocumentPosition) {\n            sortOrder = function (a, b) {\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n                }\n\n                if (!a.compareDocumentPosition || !b.compareDocumentPosition) {\n                    return a.compareDocumentPosition ? -1 : 1;\n                }\n\n                return a.compareDocumentPosition(b) & 4 ? -1 : 1;\n            };\n\n        } else {\n            sortOrder = function (a, b) {\n                // The nodes are identical, we can exit early\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n\n                    // Fallback to using sourceIndex (in IE) if it's available on both nodes\n                } else if (a.sourceIndex && b.sourceIndex) {\n                    return a.sourceIndex - b.sourceIndex;\n                }\n\n                var al, bl,\n\t\t\tap = [],\n\t\t\tbp = [],\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tcur = aup;\n\n                // If the nodes are siblings (or identical) we can do a quick check\n                if (aup === bup) {\n                    return siblingCheck(a, b);\n\n                    // If no parents were found then the nodes are disconnected\n                } else if (!aup) {\n                    return -1;\n\n                } else if (!bup) {\n                    return 1;\n                }\n\n                // Otherwise they're somewhere else in the tree so we need\n                // to build up a full list of the parentNodes for comparison\n                while (cur) {\n                    ap.unshift(cur);\n                    cur = cur.parentNode;\n                }\n\n                cur = bup;\n\n                while (cur) {\n                    bp.unshift(cur);\n                    cur = cur.parentNode;\n                }\n\n                al = ap.length;\n                bl = bp.length;\n\n                // Start walking down the tree looking for a discrepancy\n                for (var i = 0; i < al && i < bl; i++) {\n                    if (ap[i] !== bp[i]) {\n                        return siblingCheck(ap[i], bp[i]);\n                    }\n                }\n\n                // We ended someplace up the tree so do a sibling check\n                return i === al ?\n\t\t\tsiblingCheck(a, bp[i], -1) :\n\t\t\tsiblingCheck(ap[i], b, 1);\n            };\n\n            siblingCheck = function (a, b, ret) {\n                if (a === b) {\n                    return ret;\n                }\n\n                var cur = a.nextSibling;\n\n                while (cur) {\n                    if (cur === b) {\n                        return -1;\n                    }\n\n                    cur = cur.nextSibling;\n                }\n\n                return 1;\n            };\n        }\n\n        // Check to see if the browser returns elements by name when\n        // querying by getElementById (and provide a workaround)\n        (function () {\n            // We're going to inject a fake input element with a specified name\n            var form = document.createElement(\"div\"),\n\t\tid = \"script\" + (new Date()).getTime(),\n\t\troot = document.documentElement;\n\n            form.innerHTML = \"<a name='\" + id + \"'/>\";\n\n            // Inject it into the root element, check its status, and remove it quickly\n            root.insertBefore(form, root.firstChild);\n\n            // The workaround has to do additional checks after a getElementById\n            // Which slows things down for other browsers (hence the branching)\n            if (document.getElementById(id)) {\n                Expr.find.ID = function (match, context, isXML) {\n                    if (typeof context.getElementById !== \"undefined\" && !isXML) {\n                        var m = context.getElementById(match[1]);\n\n                        return m ?\n\t\t\t\t\tm.id === match[1] || typeof m.getAttributeNode !== \"undefined\" && m.getAttributeNode(\"id\").nodeValue === match[1] ?\n\t\t\t\t\t\t[m] :\n\t\t\t\t\t\tundefined :\n\t\t\t\t\t[];\n                    }\n                };\n\n                Expr.filter.ID = function (elem, match) {\n                    var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n\n                    return elem.nodeType === 1 && node && node.nodeValue === match;\n                };\n            }\n\n            root.removeChild(form);\n\n            // release memory in IE\n            root = form = null;\n        })();\n\n        (function () {\n            // Check to see if the browser returns only elements\n            // when doing getElementsByTagName(\"*\")\n\n            // Create a fake element\n            var div = document.createElement(\"div\");\n            div.appendChild(document.createComment(\"\"));\n\n            // Make sure no comments are found\n            if (div.getElementsByTagName(\"*\").length > 0) {\n                Expr.find.TAG = function (match, context) {\n                    var results = context.getElementsByTagName(match[1]);\n\n                    // Filter out possible comments\n                    if (match[1] === \"*\") {\n                        var tmp = [];\n\n                        for (var i = 0; results[i]; i++) {\n                            if (results[i].nodeType === 1) {\n                                tmp.push(results[i]);\n                            }\n                        }\n\n                        results = tmp;\n                    }\n\n                    return results;\n                };\n            }\n\n            // Check to see if an attribute returns normalized href attributes\n            div.innerHTML = \"<a href='#'></a>\";\n\n            if (div.firstChild && typeof div.firstChild.getAttribute !== \"undefined\" &&\n\t\t\tdiv.firstChild.getAttribute(\"href\") !== \"#\") {\n\n                Expr.attrHandle.href = function (elem) {\n                    return elem.getAttribute(\"href\", 2);\n                };\n            }\n\n            // release memory in IE\n            div = null;\n        })();\n\n        if (document.querySelectorAll) {\n            (function () {\n                var oldSizzle = Sizzle,\n\t\t\tdiv = document.createElement(\"div\"),\n\t\t\tid = \"__sizzle__\";\n\n                div.innerHTML = \"<p class='TEST'></p>\";\n\n                // Safari can't handle uppercase or unicode characters when\n                // in quirks mode.\n                if (div.querySelectorAll && div.querySelectorAll(\".TEST\").length === 0) {\n                    return;\n                }\n\n                Sizzle = function (query, context, extra, seed) {\n                    context = context || document;\n\n                    // Only use querySelectorAll on non-XML documents\n                    // (ID selectors don't work in non-HTML documents)\n                    if (!seed && !Sizzle.isXML(context)) {\n                        // See if we find a selector to speed up\n                        var match = /^(\\w+$)|^\\.([\\w\\-]+$)|^#([\\w\\-]+$)/.exec(query);\n\n                        if (match && (context.nodeType === 1 || context.nodeType === 9)) {\n                            // Speed-up: Sizzle(\"TAG\")\n                            if (match[1]) {\n                                return makeArray(context.getElementsByTagName(query), extra);\n\n                                // Speed-up: Sizzle(\".CLASS\")\n                            } else if (match[2] && Expr.find.CLASS && context.getElementsByClassName) {\n                                return makeArray(context.getElementsByClassName(match[2]), extra);\n                            }\n                        }\n\n                        if (context.nodeType === 9) {\n                            // Speed-up: Sizzle(\"body\")\n                            // The body element only exists once, optimize finding it\n                            if (query === \"body\" && context.body) {\n                                return makeArray([context.body], extra);\n\n                                // Speed-up: Sizzle(\"#ID\")\n                            } else if (match && match[3]) {\n                                var elem = context.getElementById(match[3]);\n\n                                // Check parentNode to catch when Blackberry 4.6 returns\n                                // nodes that are no longer in the document #6963\n                                if (elem && elem.parentNode) {\n                                    // Handle the case where IE and Opera return items\n                                    // by name instead of ID\n                                    if (elem.id === match[3]) {\n                                        return makeArray([elem], extra);\n                                    }\n\n                                } else {\n                                    return makeArray([], extra);\n                                }\n                            }\n\n                            try {\n                                return makeArray(context.querySelectorAll(query), extra);\n                            } catch (qsaError) { }\n\n                            // qSA works strangely on Element-rooted queries\n                            // We can work around this by specifying an extra ID on the root\n                            // and working up from there (Thanks to Andrew Dupont for the technique)\n                            // IE 8 doesn't work on object elements\n                        } else if (context.nodeType === 1 && context.nodeName.toLowerCase() !== \"object\") {\n                            var oldContext = context,\n\t\t\t\t\t\told = context.getAttribute(\"id\"),\n\t\t\t\t\t\tnid = old || id,\n\t\t\t\t\t\thasParent = context.parentNode,\n\t\t\t\t\t\trelativeHierarchySelector = /^\\s*[+~]/.test(query);\n\n                            if (!old) {\n                                context.setAttribute(\"id\", nid);\n                            } else {\n                                nid = nid.replace(/'/g, \"\\\\$&\");\n                            }\n                            if (relativeHierarchySelector && hasParent) {\n                                context = context.parentNode;\n                            }\n\n                            try {\n                                if (!relativeHierarchySelector || hasParent) {\n                                    return makeArray(context.querySelectorAll(\"[id='\" + nid + \"'] \" + query), extra);\n                                }\n\n                            } catch (pseudoError) {\n                            } finally {\n                                if (!old) {\n                                    oldContext.removeAttribute(\"id\");\n                                }\n                            }\n                        }\n                    }\n\n                    return oldSizzle(query, context, extra, seed);\n                };\n\n                for (var prop in oldSizzle) {\n                    Sizzle[prop] = oldSizzle[prop];\n                }\n\n                // release memory in IE\n                div = null;\n            })();\n        }\n\n        (function () {\n            var html = document.documentElement,\n\t\tmatches = html.matchesSelector || html.mozMatchesSelector || html.webkitMatchesSelector || html.msMatchesSelector;\n\n            if (matches) {\n                // Check to see if it's possible to do matchesSelector\n                // on a disconnected node (IE 9 fails this)\n                var disconnectedMatch = !matches.call(document.createElement(\"div\"), \"div\"),\n\t\t\tpseudoWorks = false;\n\n                try {\n                    // This should fail with an exception\n                    // Gecko does not error, returns false instead\n                    matches.call(document.documentElement, \"[test!='']:sizzle\");\n\n                } catch (pseudoError) {\n                    pseudoWorks = true;\n                }\n\n                Sizzle.matchesSelector = function (node, expr) {\n                    // Make sure that attribute selectors are quoted\n                    expr = expr.replace(/\\=\\s*([^'\"\\]]*)\\s*\\]/g, \"='$1']\");\n\n                    if (!Sizzle.isXML(node)) {\n                        try {\n                            if (pseudoWorks || !Expr.match.PSEUDO.test(expr) && !/!=/.test(expr)) {\n                                var ret = matches.call(node, expr);\n\n                                // IE 9's matchesSelector returns false on disconnected nodes\n                                if (ret || !disconnectedMatch ||\n                                // As well, disconnected nodes are said to be in a document\n                                // fragment in IE 9, so check for that\n\t\t\t\t\t\t\t\tnode.document && node.document.nodeType !== 11) {\n                                    return ret;\n                                }\n                            }\n                        } catch (e) { }\n                    }\n\n                    return Sizzle(expr, null, null, [node]).length > 0;\n                };\n            }\n        })();\n\n        (function () {\n            var div = document.createElement(\"div\");\n\n            div.innerHTML = \"<div class='test e'></div><div class='test'></div>\";\n\n            // Opera can't find a second classname (in 9.6)\n            // Also, make sure that getElementsByClassName actually exists\n            if (!div.getElementsByClassName || div.getElementsByClassName(\"e\").length === 0) {\n                return;\n            }\n\n            // Safari caches class attributes, doesn't catch changes (in 3.2)\n            div.lastChild.className = \"e\";\n\n            if (div.getElementsByClassName(\"e\").length === 1) {\n                return;\n            }\n\n            Expr.order.splice(1, 0, \"CLASS\");\n            Expr.find.CLASS = function (match, context, isXML) {\n                if (typeof context.getElementsByClassName !== \"undefined\" && !isXML) {\n                    return context.getElementsByClassName(match[1]);\n                }\n            };\n\n            // release memory in IE\n            div = null;\n        })();\n\n        function dirNodeCheck(dir, cur, doneName, checkSet, nodeCheck, isXML) {\n            for (var i = 0, l = checkSet.length; i < l; i++) {\n                var elem = checkSet[i];\n\n                if (elem) {\n                    var match = false;\n\n                    elem = elem[dir];\n\n                    while (elem) {\n                        if (elem[expando] === doneName) {\n                            match = checkSet[elem.sizset];\n                            break;\n                        }\n\n                        if (elem.nodeType === 1 && !isXML) {\n                            elem[expando] = doneName;\n                            elem.sizset = i;\n                        }\n\n                        if (elem.nodeName.toLowerCase() === cur) {\n                            match = elem;\n                            break;\n                        }\n\n                        elem = elem[dir];\n                    }\n\n                    checkSet[i] = match;\n                }\n            }\n        }\n\n        function dirCheck(dir, cur, doneName, checkSet, nodeCheck, isXML) {\n            for (var i = 0, l = checkSet.length; i < l; i++) {\n                var elem = checkSet[i];\n\n                if (elem) {\n                    var match = false;\n\n                    elem = elem[dir];\n\n                    while (elem) {\n                        if (elem[expando] === doneName) {\n                            match = checkSet[elem.sizset];\n                            break;\n                        }\n\n                        if (elem.nodeType === 1) {\n                            if (!isXML) {\n                                elem[expando] = doneName;\n                                elem.sizset = i;\n                            }\n\n                            if (typeof cur !== \"string\") {\n                                if (elem === cur) {\n                                    match = true;\n                                    break;\n                                }\n\n                            } else if (Sizzle.filter(cur, [elem]).length > 0) {\n                                match = elem;\n                                break;\n                            }\n                        }\n\n                        elem = elem[dir];\n                    }\n\n                    checkSet[i] = match;\n                }\n            }\n        }\n\n        if (document.documentElement.contains) {\n            Sizzle.contains = function (a, b) {\n                return a !== b && (a.contains ? a.contains(b) : true);\n            };\n\n        } else if (document.documentElement.compareDocumentPosition) {\n            Sizzle.contains = function (a, b) {\n                return !!(a.compareDocumentPosition(b) & 16);\n            };\n\n        } else {\n            Sizzle.contains = function () {\n                return false;\n            };\n        }\n\n        Sizzle.isXML = function (elem) {\n            // documentElement is verified for cases where it doesn't yet exist\n            // (such as loading iframes in IE - #4833)\n            var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;\n\n            return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n        };\n\n        var posProcess = function (selector, context, seed) {\n            var match,\n\t\ttmpSet = [],\n\t\tlater = \"\",\n\t\troot = context.nodeType ? [context] : context;\n\n            // Position selectors must be done after the filter\n            // And so must :not(positional) so we move all PSEUDOs to the end\n            while ((match = Expr.match.PSEUDO.exec(selector))) {\n                later += match[0];\n                selector = selector.replace(Expr.match.PSEUDO, \"\");\n            }\n\n            selector = Expr.relative[selector] ? selector + \"*\" : selector;\n\n            for (var i = 0, l = root.length; i < l; i++) {\n                Sizzle(selector, root[i], tmpSet, seed);\n            }\n\n            return Sizzle.filter(later, tmpSet);\n        };\n\n        // EXPOSE\n        // Override sizzle attribute retrieval\n        Sizzle.attr = jQuery.attr;\n        Sizzle.selectors.attrMap = {};\n        jQuery.find = Sizzle;\n        jQuery.expr = Sizzle.selectors;\n        jQuery.expr[\":\"] = jQuery.expr.filters;\n        jQuery.unique = Sizzle.uniqueSort;\n        jQuery.text = Sizzle.getText;\n        jQuery.isXMLDoc = Sizzle.isXML;\n        jQuery.contains = Sizzle.contains;\n\n\n    })();\n\n\n    var runtil = /Until$/,\n\trparentsprev = /^(?:parents|prevUntil|prevAll)/,\n    // Note: This RegExp should be improved, or likely pulled from Sizzle\n\trmultiselector = /,/,\n\tisSimple = /^.[^:#\\[\\.,]*$/,\n\tslice = Array.prototype.slice,\n\tPOS = jQuery.expr.match.globalPOS,\n    // methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t    children: true,\n\t    contents: true,\n\t    next: true,\n\t    prev: true\n\t};\n\n    jQuery.fn.extend({\n        find: function (selector) {\n            var self = this,\n\t\t\ti, l;\n\n            if (typeof selector !== \"string\") {\n                return jQuery(selector).filter(function () {\n                    for (i = 0, l = self.length; i < l; i++) {\n                        if (jQuery.contains(self[i], this)) {\n                            return true;\n                        }\n                    }\n                });\n            }\n\n            var ret = this.pushStack(\"\", \"find\", selector),\n\t\t\tlength, n, r;\n\n            for (i = 0, l = this.length; i < l; i++) {\n                length = ret.length;\n                jQuery.find(selector, this[i], ret);\n\n                if (i > 0) {\n                    // Make sure that the results are unique\n                    for (n = length; n < ret.length; n++) {\n                        for (r = 0; r < length; r++) {\n                            if (ret[r] === ret[n]) {\n                                ret.splice(n--, 1);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return ret;\n        },\n\n        has: function (target) {\n            var targets = jQuery(target);\n            return this.filter(function () {\n                for (var i = 0, l = targets.length; i < l; i++) {\n                    if (jQuery.contains(this, targets[i])) {\n                        return true;\n                    }\n                }\n            });\n        },\n\n        not: function (selector) {\n            return this.pushStack(winnow(this, selector, false), \"not\", selector);\n        },\n\n        filter: function (selector) {\n            return this.pushStack(winnow(this, selector, true), \"filter\", selector);\n        },\n\n        is: function (selector) {\n            return !!selector && (\n\t\t\ttypeof selector === \"string\" ?\n            // If this is a positional selector, check membership in the returned set\n            // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\t\tPOS.test(selector) ?\n\t\t\t\t\tjQuery(selector, this.context).index(this[0]) >= 0 :\n\t\t\t\t\tjQuery.filter(selector, this).length > 0 :\n\t\t\t\tthis.filter(selector).length > 0);\n        },\n\n        closest: function (selectors, context) {\n            var ret = [], i, l, cur = this[0];\n\n            // Array (deprecated as of jQuery 1.7)\n            if (jQuery.isArray(selectors)) {\n                var level = 1;\n\n                while (cur && cur.ownerDocument && cur !== context) {\n                    for (i = 0; i < selectors.length; i++) {\n\n                        if (jQuery(cur).is(selectors[i])) {\n                            ret.push({ selector: selectors[i], elem: cur, level: level });\n                        }\n                    }\n\n                    cur = cur.parentNode;\n                    level++;\n                }\n\n                return ret;\n            }\n\n            // String\n            var pos = POS.test(selectors) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery(selectors, context || this.context) :\n\t\t\t\t0;\n\n            for (i = 0, l = this.length; i < l; i++) {\n                cur = this[i];\n\n                while (cur) {\n                    if (pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors)) {\n                        ret.push(cur);\n                        break;\n\n                    } else {\n                        cur = cur.parentNode;\n                        if (!cur || !cur.ownerDocument || cur === context || cur.nodeType === 11) {\n                            break;\n                        }\n                    }\n                }\n            }\n\n            ret = ret.length > 1 ? jQuery.unique(ret) : ret;\n\n            return this.pushStack(ret, \"closest\", selectors);\n        },\n\n        // Determine the position of an element within\n        // the matched set of elements\n        index: function (elem) {\n\n            // No argument, return index in parent\n            if (!elem) {\n                return (this[0] && this[0].parentNode) ? this.prevAll().length : -1;\n            }\n\n            // index in selector\n            if (typeof elem === \"string\") {\n                return jQuery.inArray(this[0], jQuery(elem));\n            }\n\n            // Locate the position of the desired element\n            return jQuery.inArray(\n            // If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[0] : elem, this);\n        },\n\n        add: function (selector, context) {\n            var set = typeof selector === \"string\" ?\n\t\t\t\tjQuery(selector, context) :\n\t\t\t\tjQuery.makeArray(selector && selector.nodeType ? [selector] : selector),\n\t\t\tall = jQuery.merge(this.get(), set);\n\n            return this.pushStack(isDisconnected(set[0]) || isDisconnected(all[0]) ?\n\t\t\tall :\n\t\t\tjQuery.unique(all));\n        },\n\n        andSelf: function () {\n            return this.add(this.prevObject);\n        }\n    });\n\n    // A painfully simple check to see if an element is disconnected\n    // from a document (should be improved, where feasible).\n    function isDisconnected(node) {\n        return !node || !node.parentNode || node.parentNode.nodeType === 11;\n    }\n\n    jQuery.each({\n        parent: function (elem) {\n            var parent = elem.parentNode;\n            return parent && parent.nodeType !== 11 ? parent : null;\n        },\n        parents: function (elem) {\n            return jQuery.dir(elem, \"parentNode\");\n        },\n        parentsUntil: function (elem, i, until) {\n            return jQuery.dir(elem, \"parentNode\", until);\n        },\n        next: function (elem) {\n            return jQuery.nth(elem, 2, \"nextSibling\");\n        },\n        prev: function (elem) {\n            return jQuery.nth(elem, 2, \"previousSibling\");\n        },\n        nextAll: function (elem) {\n            return jQuery.dir(elem, \"nextSibling\");\n        },\n        prevAll: function (elem) {\n            return jQuery.dir(elem, \"previousSibling\");\n        },\n        nextUntil: function (elem, i, until) {\n            return jQuery.dir(elem, \"nextSibling\", until);\n        },\n        prevUntil: function (elem, i, until) {\n            return jQuery.dir(elem, \"previousSibling\", until);\n        },\n        siblings: function (elem) {\n            return jQuery.sibling((elem.parentNode || {}).firstChild, elem);\n        },\n        children: function (elem) {\n            return jQuery.sibling(elem.firstChild);\n        },\n        contents: function (elem) {\n            return jQuery.nodeName(elem, \"iframe\") ?\n\t\t\telem.contentDocument || elem.contentWindow.document :\n\t\t\tjQuery.makeArray(elem.childNodes);\n        }\n    }, function (name, fn) {\n        jQuery.fn[name] = function (until, selector) {\n            var ret = jQuery.map(this, fn, until);\n\n            if (!runtil.test(name)) {\n                selector = until;\n            }\n\n            if (selector && typeof selector === \"string\") {\n                ret = jQuery.filter(selector, ret);\n            }\n\n            ret = this.length > 1 && !guaranteedUnique[name] ? jQuery.unique(ret) : ret;\n\n            if ((this.length > 1 || rmultiselector.test(selector)) && rparentsprev.test(name)) {\n                ret = ret.reverse();\n            }\n\n            return this.pushStack(ret, name, slice.call(arguments).join(\",\"));\n        };\n    });\n\n    jQuery.extend({\n        filter: function (expr, elems, not) {\n            if (not) {\n                expr = \":not(\" + expr + \")\";\n            }\n\n            return elems.length === 1 ?\n\t\t\tjQuery.find.matchesSelector(elems[0], expr) ? [elems[0]] : [] :\n\t\t\tjQuery.find.matches(expr, elems);\n        },\n\n        dir: function (elem, dir, until) {\n            var matched = [],\n\t\t\tcur = elem[dir];\n\n            while (cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery(cur).is(until))) {\n                if (cur.nodeType === 1) {\n                    matched.push(cur);\n                }\n                cur = cur[dir];\n            }\n            return matched;\n        },\n\n        nth: function (cur, result, dir, elem) {\n            result = result || 1;\n            var num = 0;\n\n            for (; cur; cur = cur[dir]) {\n                if (cur.nodeType === 1 && ++num === result) {\n                    break;\n                }\n            }\n\n            return cur;\n        },\n\n        sibling: function (n, elem) {\n            var r = [];\n\n            for (; n; n = n.nextSibling) {\n                if (n.nodeType === 1 && n !== elem) {\n                    r.push(n);\n                }\n            }\n\n            return r;\n        }\n    });\n\n    // Implement the identical functionality for filter and not\n    function winnow(elements, qualifier, keep) {\n\n        // Can't pass null or undefined to indexOf in Firefox 4\n        // Set to 0 to skip string check\n        qualifier = qualifier || 0;\n\n        if (jQuery.isFunction(qualifier)) {\n            return jQuery.grep(elements, function (elem, i) {\n                var retVal = !!qualifier.call(elem, i, elem);\n                return retVal === keep;\n            });\n\n        } else if (qualifier.nodeType) {\n            return jQuery.grep(elements, function (elem, i) {\n                return (elem === qualifier) === keep;\n            });\n\n        } else if (typeof qualifier === \"string\") {\n            var filtered = jQuery.grep(elements, function (elem) {\n                return elem.nodeType === 1;\n            });\n\n            if (isSimple.test(qualifier)) {\n                return jQuery.filter(qualifier, filtered, !keep);\n            } else {\n                qualifier = jQuery.filter(qualifier, filtered);\n            }\n        }\n\n        return jQuery.grep(elements, function (elem, i) {\n            return (jQuery.inArray(elem, qualifier) >= 0) === keep;\n        });\n    }\n\n\n\n\n    function createSafeFragment(document) {\n        var list = nodeNames.split(\"|\"),\n\tsafeFrag = document.createDocumentFragment();\n\n        if (safeFrag.createElement) {\n            while (list.length) {\n                safeFrag.createElement(\n\t\t\t\tlist.pop()\n\t\t\t);\n            }\n        }\n        return safeFrag;\n    }\n\n    var nodeNames = \"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|\" +\n\t\t\"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",\n\trinlinejQuery = / jQuery\\d+=\"(?:\\d+|null)\"/g,\n\trleadingWhitespace = /^\\s+/,\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n\trtagName = /<([\\w:]+)/,\n\trtbody = /<tbody/i,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style)/i,\n\trnocache = /<(?:script|object|embed|option|style)/i,\n\trnoshimcache = new RegExp(\"<(?:\" + nodeNames + \")[\\\\s/>]\", \"i\"),\n    // checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /\\/(java|ecma)script/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|\\-\\-)/,\n\twrapMap = {\n\t    option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n\t    legend: [1, \"<fieldset>\", \"</fieldset>\"],\n\t    thead: [1, \"<table>\", \"</table>\"],\n\t    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n\t    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n\t    col: [2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\"],\n\t    area: [1, \"<map>\", \"</map>\"],\n\t    _default: [0, \"\", \"\"]\n\t},\n\tsafeFragment = createSafeFragment(document);\n\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n\n    // IE can't serialize <link> and <script> tags normally\n    if (!jQuery.support.htmlSerialize) {\n        wrapMap._default = [1, \"div<div>\", \"</div>\"];\n    }\n\n    jQuery.fn.extend({\n        text: function (value) {\n            return jQuery.access(this, function (value) {\n                return value === undefined ?\n\t\t\t\tjQuery.text(this) :\n\t\t\t\tthis.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value));\n            }, null, value, arguments.length);\n        },\n\n        wrapAll: function (html) {\n            if (jQuery.isFunction(html)) {\n                return this.each(function (i) {\n                    jQuery(this).wrapAll(html.call(this, i));\n                });\n            }\n\n            if (this[0]) {\n                // The elements to wrap the target around\n                var wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n                if (this[0].parentNode) {\n                    wrap.insertBefore(this[0]);\n                }\n\n                wrap.map(function () {\n                    var elem = this;\n\n                    while (elem.firstChild && elem.firstChild.nodeType === 1) {\n                        elem = elem.firstChild;\n                    }\n\n                    return elem;\n                }).append(this);\n            }\n\n            return this;\n        },\n\n        wrapInner: function (html) {\n            if (jQuery.isFunction(html)) {\n                return this.each(function (i) {\n                    jQuery(this).wrapInner(html.call(this, i));\n                });\n            }\n\n            return this.each(function () {\n                var self = jQuery(this),\n\t\t\t\tcontents = self.contents();\n\n                if (contents.length) {\n                    contents.wrapAll(html);\n\n                } else {\n                    self.append(html);\n                }\n            });\n        },\n\n        wrap: function (html) {\n            var isFunction = jQuery.isFunction(html);\n\n            return this.each(function (i) {\n                jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n            });\n        },\n\n        unwrap: function () {\n            return this.parent().each(function () {\n                if (!jQuery.nodeName(this, \"body\")) {\n                    jQuery(this).replaceWith(this.childNodes);\n                }\n            }).end();\n        },\n\n        append: function () {\n            return this.domManip(arguments, true, function (elem) {\n                if (this.nodeType === 1) {\n                    this.appendChild(elem);\n                }\n            });\n        },\n\n        prepend: function () {\n            return this.domManip(arguments, true, function (elem) {\n                if (this.nodeType === 1) {\n                    this.insertBefore(elem, this.firstChild);\n                }\n            });\n        },\n\n        before: function () {\n            if (this[0] && this[0].parentNode) {\n                return this.domManip(arguments, false, function (elem) {\n                    this.parentNode.insertBefore(elem, this);\n                });\n            } else if (arguments.length) {\n                var set = jQuery.clean(arguments);\n                set.push.apply(set, this.toArray());\n                return this.pushStack(set, \"before\", arguments);\n            }\n        },\n\n        after: function () {\n            if (this[0] && this[0].parentNode) {\n                return this.domManip(arguments, false, function (elem) {\n                    this.parentNode.insertBefore(elem, this.nextSibling);\n                });\n            } else if (arguments.length) {\n                var set = this.pushStack(this, \"after\", arguments);\n                set.push.apply(set, jQuery.clean(arguments));\n                return set;\n            }\n        },\n\n        // keepData is for internal use only--do not document\n        remove: function (selector, keepData) {\n            for (var i = 0, elem; (elem = this[i]) != null; i++) {\n                if (!selector || jQuery.filter(selector, [elem]).length) {\n                    if (!keepData && elem.nodeType === 1) {\n                        jQuery.cleanData(elem.getElementsByTagName(\"*\"));\n                        jQuery.cleanData([elem]);\n                    }\n\n                    if (elem.parentNode) {\n                        elem.parentNode.removeChild(elem);\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        empty: function () {\n            for (var i = 0, elem; (elem = this[i]) != null; i++) {\n                // Remove element nodes and prevent memory leaks\n                if (elem.nodeType === 1) {\n                    jQuery.cleanData(elem.getElementsByTagName(\"*\"));\n                }\n\n                // Remove any remaining nodes\n                while (elem.firstChild) {\n                    elem.removeChild(elem.firstChild);\n                }\n            }\n\n            return this;\n        },\n\n        clone: function (dataAndEvents, deepDataAndEvents) {\n            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n            return this.map(function () {\n                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n            });\n        },\n\n        html: function (value) {\n            return jQuery.access(this, function (value) {\n                var elem = this[0] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n                if (value === undefined) {\n                    return elem.nodeType === 1 ?\n\t\t\t\t\telem.innerHTML.replace(rinlinejQuery, \"\") :\n\t\t\t\t\tnull;\n                }\n\n\n                if (typeof value === \"string\" && !rnoInnerhtml.test(value) &&\n\t\t\t\t(jQuery.support.leadingWhitespace || !rleadingWhitespace.test(value)) &&\n\t\t\t\t!wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n\n                    value = value.replace(rxhtmlTag, \"<$1></$2>\");\n\n                    try {\n                        for (; i < l; i++) {\n                            // Remove element nodes and prevent memory leaks\n                            elem = this[i] || {};\n                            if (elem.nodeType === 1) {\n                                jQuery.cleanData(elem.getElementsByTagName(\"*\"));\n                                elem.innerHTML = value;\n                            }\n                        }\n\n                        elem = 0;\n\n                        // If using innerHTML throws an exception, use the fallback method\n                    } catch (e) { }\n                }\n\n                if (elem) {\n                    this.empty().append(value);\n                }\n            }, null, value, arguments.length);\n        },\n\n        replaceWith: function (value) {\n            if (this[0] && this[0].parentNode) {\n                // Make sure that the elements are removed from the DOM before they are inserted\n                // this can help fix replacing a parent with child elements\n                if (jQuery.isFunction(value)) {\n                    return this.each(function (i) {\n                        var self = jQuery(this), old = self.html();\n                        self.replaceWith(value.call(this, i, old));\n                    });\n                }\n\n                if (typeof value !== \"string\") {\n                    value = jQuery(value).detach();\n                }\n\n                return this.each(function () {\n                    var next = this.nextSibling,\n\t\t\t\t\tparent = this.parentNode;\n\n                    jQuery(this).remove();\n\n                    if (next) {\n                        jQuery(next).before(value);\n                    } else {\n                        jQuery(parent).append(value);\n                    }\n                });\n            } else {\n                return this.length ?\n\t\t\t\tthis.pushStack(jQuery(jQuery.isFunction(value) ? value() : value), \"replaceWith\", value) :\n\t\t\t\tthis;\n            }\n        },\n\n        detach: function (selector) {\n            return this.remove(selector, true);\n        },\n\n        domManip: function (args, table, callback) {\n            var results, first, fragment, parent,\n\t\t\tvalue = args[0],\n\t\t\tscripts = [];\n\n            // We can't cloneNode fragments that contain checked, in WebKit\n            if (!jQuery.support.checkClone && arguments.length === 3 && typeof value === \"string\" && rchecked.test(value)) {\n                return this.each(function () {\n                    jQuery(this).domManip(args, table, callback, true);\n                });\n            }\n\n            if (jQuery.isFunction(value)) {\n                return this.each(function (i) {\n                    var self = jQuery(this);\n                    args[0] = value.call(this, i, table ? self.html() : undefined);\n                    self.domManip(args, table, callback);\n                });\n            }\n\n            if (this[0]) {\n                parent = value && value.parentNode;\n\n                // If we're in a fragment, just use that instead of building a new one\n                if (jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length) {\n                    results = { fragment: parent };\n\n                } else {\n                    results = jQuery.buildFragment(args, this, scripts);\n                }\n\n                fragment = results.fragment;\n\n                if (fragment.childNodes.length === 1) {\n                    first = fragment = fragment.firstChild;\n                } else {\n                    first = fragment.firstChild;\n                }\n\n                if (first) {\n                    table = table && jQuery.nodeName(first, \"tr\");\n\n                    for (var i = 0, l = this.length, lastIndex = l - 1; i < l; i++) {\n                        callback.call(\n\t\t\t\t\t\ttable ?\n\t\t\t\t\t\t\troot(this[i], first) :\n\t\t\t\t\t\t\tthis[i],\n                        // Make sure that we do not leak memory by inadvertently discarding\n                        // the original fragment (which might have attached data) instead of\n                        // using it; in addition, use the original fragment object for the last\n                        // item instead of first because it can end up being emptied incorrectly\n                        // in certain situations (Bug #8070).\n                        // Fragments from the fragment cache must always be cloned and never used\n                        // in place.\n\t\t\t\t\t\tresults.cacheable || (l > 1 && i < lastIndex) ?\n\t\t\t\t\t\t\tjQuery.clone(fragment, true, true) :\n\t\t\t\t\t\t\tfragment\n\t\t\t\t\t);\n                    }\n                }\n\n                if (scripts.length) {\n                    jQuery.each(scripts, function (i, elem) {\n                        if (elem.src) {\n                            jQuery.ajax({\n                                type: \"GET\",\n                                global: false,\n                                url: elem.src,\n                                async: false,\n                                dataType: \"script\"\n                            });\n                        } else {\n                            jQuery.globalEval((elem.text || elem.textContent || elem.innerHTML || \"\").replace(rcleanScript, \"/*$0*/\"));\n                        }\n\n                        if (elem.parentNode) {\n                            elem.parentNode.removeChild(elem);\n                        }\n                    });\n                }\n            }\n\n            return this;\n        }\n    });\n\n    function root(elem, cur) {\n        return jQuery.nodeName(elem, \"table\") ?\n\t\t(elem.getElementsByTagName(\"tbody\")[0] ||\n\t\telem.appendChild(elem.ownerDocument.createElement(\"tbody\"))) :\n\t\telem;\n    }\n\n    function cloneCopyEvent(src, dest) {\n\n        if (dest.nodeType !== 1 || !jQuery.hasData(src)) {\n            return;\n        }\n\n        var type, i, l,\n\t\toldData = jQuery._data(src),\n\t\tcurData = jQuery._data(dest, oldData),\n\t\tevents = oldData.events;\n\n        if (events) {\n            delete curData.handle;\n            curData.events = {};\n\n            for (type in events) {\n                for (i = 0, l = events[type].length; i < l; i++) {\n                    jQuery.event.add(dest, type, events[type][i]);\n                }\n            }\n        }\n\n        // make the cloned public data object a copy from the original\n        if (curData.data) {\n            curData.data = jQuery.extend({}, curData.data);\n        }\n    }\n\n    function cloneFixAttributes(src, dest) {\n        var nodeName;\n\n        // We do not need to do anything for non-Elements\n        if (dest.nodeType !== 1) {\n            return;\n        }\n\n        // clearAttributes removes the attributes, which we don't want,\n        // but also removes the attachEvent events, which we *do* want\n        if (dest.clearAttributes) {\n            dest.clearAttributes();\n        }\n\n        // mergeAttributes, in contrast, only merges back on the\n        // original attributes, not the events\n        if (dest.mergeAttributes) {\n            dest.mergeAttributes(src);\n        }\n\n        nodeName = dest.nodeName.toLowerCase();\n\n        // IE6-8 fail to clone children inside object elements that use\n        // the proprietary classid attribute value (rather than the type\n        // attribute) to identify the type of content to display\n        if (nodeName === \"object\") {\n            dest.outerHTML = src.outerHTML;\n\n        } else if (nodeName === \"input\" && (src.type === \"checkbox\" || src.type === \"radio\")) {\n            // IE6-8 fails to persist the checked state of a cloned checkbox\n            // or radio button. Worse, IE6-7 fail to give the cloned element\n            // a checked appearance if the defaultChecked value isn't also set\n            if (src.checked) {\n                dest.defaultChecked = dest.checked = src.checked;\n            }\n\n            // IE6-7 get confused and end up setting the value of a cloned\n            // checkbox/radio button to an empty string instead of \"on\"\n            if (dest.value !== src.value) {\n                dest.value = src.value;\n            }\n\n            // IE6-8 fails to return the selected option to the default selected\n            // state when cloning options\n        } else if (nodeName === \"option\") {\n            dest.selected = src.defaultSelected;\n\n            // IE6-8 fails to set the defaultValue to the correct value when\n            // cloning other types of input fields\n        } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n            dest.defaultValue = src.defaultValue;\n\n            // IE blanks contents when cloning scripts\n        } else if (nodeName === \"script\" && dest.text !== src.text) {\n            dest.text = src.text;\n        }\n\n        // Event data gets referenced instead of copied if the expando\n        // gets copied too\n        dest.removeAttribute(jQuery.expando);\n\n        // Clear flags for bubbling special change/submit events, they must\n        // be reattached when the newly cloned events are first activated\n        dest.removeAttribute(\"_submit_attached\");\n        dest.removeAttribute(\"_change_attached\");\n    }\n\n    jQuery.buildFragment = function (args, nodes, scripts) {\n        var fragment, cacheable, cacheresults, doc,\n\tfirst = args[0];\n\n        // nodes may contain either an explicit document object,\n        // a jQuery collection or context object.\n        // If nodes[0] contains a valid object to assign to doc\n        if (nodes && nodes[0]) {\n            doc = nodes[0].ownerDocument || nodes[0];\n        }\n\n        // Ensure that an attr object doesn't incorrectly stand in as a document object\n        // Chrome and Firefox seem to allow this to occur and will throw exception\n        // Fixes #8950\n        if (!doc.createDocumentFragment) {\n            doc = document;\n        }\n\n        // Only cache \"small\" (1/2 KB) HTML strings that are associated with the main document\n        // Cloning options loses the selected state, so don't cache them\n        // IE 6 doesn't like it when you put <object> or <embed> elements in a fragment\n        // Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache\n        // Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501\n        if (args.length === 1 && typeof first === \"string\" && first.length < 512 && doc === document &&\n\t\tfirst.charAt(0) === \"<\" && !rnocache.test(first) &&\n\t\t(jQuery.support.checkClone || !rchecked.test(first)) &&\n\t\t(jQuery.support.html5Clone || !rnoshimcache.test(first))) {\n\n            cacheable = true;\n\n            cacheresults = jQuery.fragments[first];\n            if (cacheresults && cacheresults !== 1) {\n                fragment = cacheresults;\n            }\n        }\n\n        if (!fragment) {\n            fragment = doc.createDocumentFragment();\n            jQuery.clean(args, doc, fragment, scripts);\n        }\n\n        if (cacheable) {\n            jQuery.fragments[first] = cacheresults ? fragment : 1;\n        }\n\n        return { fragment: fragment, cacheable: cacheable };\n    };\n\n    jQuery.fragments = {};\n\n    jQuery.each({\n        appendTo: \"append\",\n        prependTo: \"prepend\",\n        insertBefore: \"before\",\n        insertAfter: \"after\",\n        replaceAll: \"replaceWith\"\n    }, function (name, original) {\n        jQuery.fn[name] = function (selector) {\n            var ret = [],\n\t\t\tinsert = jQuery(selector),\n\t\t\tparent = this.length === 1 && this[0].parentNode;\n\n            if (parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1) {\n                insert[original](this[0]);\n                return this;\n\n            } else {\n                for (var i = 0, l = insert.length; i < l; i++) {\n                    var elems = (i > 0 ? this.clone(true) : this).get();\n                    jQuery(insert[i])[original](elems);\n                    ret = ret.concat(elems);\n                }\n\n                return this.pushStack(ret, name, insert.selector);\n            }\n        };\n    });\n\n    function getAll(elem) {\n        if (typeof elem.getElementsByTagName !== \"undefined\") {\n            return elem.getElementsByTagName(\"*\");\n\n        } else if (typeof elem.querySelectorAll !== \"undefined\") {\n            return elem.querySelectorAll(\"*\");\n\n        } else {\n            return [];\n        }\n    }\n\n    // Used in clean, fixes the defaultChecked property\n    function fixDefaultChecked(elem) {\n        if (elem.type === \"checkbox\" || elem.type === \"radio\") {\n            elem.defaultChecked = elem.checked;\n        }\n    }\n    // Finds all inputs and passes them to fixDefaultChecked\n    function findInputs(elem) {\n        var nodeName = (elem.nodeName || \"\").toLowerCase();\n        if (nodeName === \"input\") {\n            fixDefaultChecked(elem);\n            // Skip scripts, get other children\n        } else if (nodeName !== \"script\" && typeof elem.getElementsByTagName !== \"undefined\") {\n            jQuery.grep(elem.getElementsByTagName(\"input\"), fixDefaultChecked);\n        }\n    }\n\n    // Derived From: http://www.iecss.com/shimprove/javascript/shimprove.1-0-1.js\n    function shimCloneNode(elem) {\n        var div = document.createElement(\"div\");\n        safeFragment.appendChild(div);\n\n        div.innerHTML = elem.outerHTML;\n        return div.firstChild;\n    }\n\n    jQuery.extend({\n        clone: function (elem, dataAndEvents, deepDataAndEvents) {\n            var srcElements,\n\t\t\tdestElements,\n\t\t\ti,\n            // IE<=8 does not properly clone detached, unknown element nodes\n\t\t\tclone = jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test(\"<\" + elem.nodeName + \">\") ?\n\t\t\t\telem.cloneNode(true) :\n\t\t\t\tshimCloneNode(elem);\n\n            if ((!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&\n\t\t\t\t(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n                // IE copies events bound via attachEvent when using cloneNode.\n                // Calling detachEvent on the clone will also remove the events\n                // from the original. In order to get around this, we use some\n                // proprietary methods to clear the events. Thanks to MooTools\n                // guys for this hotness.\n\n                cloneFixAttributes(elem, clone);\n\n                // Using Sizzle here is crazy slow, so we use getElementsByTagName instead\n                srcElements = getAll(elem);\n                destElements = getAll(clone);\n\n                // Weird iteration because IE will replace the length property\n                // with an element if you are cloning the body and one of the\n                // elements on the page has a name or id of \"length\"\n                for (i = 0; srcElements[i]; ++i) {\n                    // Ensure that the destination node is not null; Fixes #9587\n                    if (destElements[i]) {\n                        cloneFixAttributes(srcElements[i], destElements[i]);\n                    }\n                }\n            }\n\n            // Copy the events from the original to the clone\n            if (dataAndEvents) {\n                cloneCopyEvent(elem, clone);\n\n                if (deepDataAndEvents) {\n                    srcElements = getAll(elem);\n                    destElements = getAll(clone);\n\n                    for (i = 0; srcElements[i]; ++i) {\n                        cloneCopyEvent(srcElements[i], destElements[i]);\n                    }\n                }\n            }\n\n            srcElements = destElements = null;\n\n            // Return the cloned set\n            return clone;\n        },\n\n        clean: function (elems, context, fragment, scripts) {\n            var checkScriptType, script, j,\n\t\t\t\tret = [];\n\n            context = context || document;\n\n            // !context.createElement fails in IE with an error but returns typeof 'object'\n            if (typeof context.createElement === \"undefined\") {\n                context = context.ownerDocument || context[0] && context[0].ownerDocument || document;\n            }\n\n            for (var i = 0, elem; (elem = elems[i]) != null; i++) {\n                if (typeof elem === \"number\") {\n                    elem += \"\";\n                }\n\n                if (!elem) {\n                    continue;\n                }\n\n                // Convert html string into DOM nodes\n                if (typeof elem === \"string\") {\n                    if (!rhtml.test(elem)) {\n                        elem = context.createTextNode(elem);\n                    } else {\n                        // Fix \"XHTML\"-style tags in all browsers\n                        elem = elem.replace(rxhtmlTag, \"<$1></$2>\");\n\n                        // Trim whitespace, otherwise indexOf won't work as expected\n                        var tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase(),\n\t\t\t\t\t\twrap = wrapMap[tag] || wrapMap._default,\n\t\t\t\t\t\tdepth = wrap[0],\n\t\t\t\t\t\tdiv = context.createElement(\"div\"),\n\t\t\t\t\t\tsafeChildNodes = safeFragment.childNodes,\n\t\t\t\t\t\tremove;\n\n                        // Append wrapper element to unknown element safe doc fragment\n                        if (context === document) {\n                            // Use the fragment we've already created for this document\n                            safeFragment.appendChild(div);\n                        } else {\n                            // Use a fragment created with the owner document\n                            createSafeFragment(context).appendChild(div);\n                        }\n\n                        // Go to html and back, then peel off extra wrappers\n                        div.innerHTML = wrap[1] + elem + wrap[2];\n\n                        // Move to the right depth\n                        while (depth--) {\n                            div = div.lastChild;\n                        }\n\n                        // Remove IE's autoinserted <tbody> from table fragments\n                        if (!jQuery.support.tbody) {\n\n                            // String was a <table>, *may* have spurious <tbody>\n                            var hasBody = rtbody.test(elem),\n\t\t\t\t\t\t\ttbody = tag === \"table\" && !hasBody ?\n\t\t\t\t\t\t\t\tdiv.firstChild && div.firstChild.childNodes :\n\n                            // String was a bare <thead> or <tfoot>\n\t\t\t\t\t\t\t\twrap[1] === \"<table>\" && !hasBody ?\n\t\t\t\t\t\t\t\t\tdiv.childNodes :\n\t\t\t\t\t\t\t\t\t[];\n\n                            for (j = tbody.length - 1; j >= 0; --j) {\n                                if (jQuery.nodeName(tbody[j], \"tbody\") && !tbody[j].childNodes.length) {\n                                    tbody[j].parentNode.removeChild(tbody[j]);\n                                }\n                            }\n                        }\n\n                        // IE completely kills leading whitespace when innerHTML is used\n                        if (!jQuery.support.leadingWhitespace && rleadingWhitespace.test(elem)) {\n                            div.insertBefore(context.createTextNode(rleadingWhitespace.exec(elem)[0]), div.firstChild);\n                        }\n\n                        elem = div.childNodes;\n\n                        // Clear elements from DocumentFragment (safeFragment or otherwise)\n                        // to avoid hoarding elements. Fixes #11356\n                        if (div) {\n                            div.parentNode.removeChild(div);\n\n                            // Guard against -1 index exceptions in FF3.6\n                            if (safeChildNodes.length > 0) {\n                                remove = safeChildNodes[safeChildNodes.length - 1];\n\n                                if (remove && remove.parentNode) {\n                                    remove.parentNode.removeChild(remove);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Resets defaultChecked for any radios and checkboxes\n                // about to be appended to the DOM in IE 6/7 (#8060)\n                var len;\n                if (!jQuery.support.appendChecked) {\n                    if (elem[0] && typeof (len = elem.length) === \"number\") {\n                        for (j = 0; j < len; j++) {\n                            findInputs(elem[j]);\n                        }\n                    } else {\n                        findInputs(elem);\n                    }\n                }\n\n                if (elem.nodeType) {\n                    ret.push(elem);\n                } else {\n                    ret = jQuery.merge(ret, elem);\n                }\n            }\n\n            if (fragment) {\n                checkScriptType = function (elem) {\n                    return !elem.type || rscriptType.test(elem.type);\n                };\n                for (i = 0; ret[i]; i++) {\n                    script = ret[i];\n                    if (scripts && jQuery.nodeName(script, \"script\") && (!script.type || rscriptType.test(script.type))) {\n                        scripts.push(script.parentNode ? script.parentNode.removeChild(script) : script);\n\n                    } else {\n                        if (script.nodeType === 1) {\n                            var jsTags = jQuery.grep(script.getElementsByTagName(\"script\"), checkScriptType);\n\n                            ret.splice.apply(ret, [i + 1, 0].concat(jsTags));\n                        }\n                        fragment.appendChild(script);\n                    }\n                }\n            }\n\n            return ret;\n        },\n\n        cleanData: function (elems) {\n            var data, id,\n\t\t\tcache = jQuery.cache,\n\t\t\tspecial = jQuery.event.special,\n\t\t\tdeleteExpando = jQuery.support.deleteExpando;\n\n            for (var i = 0, elem; (elem = elems[i]) != null; i++) {\n                if (elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()]) {\n                    continue;\n                }\n\n                id = elem[jQuery.expando];\n\n                if (id) {\n                    data = cache[id];\n\n                    if (data && data.events) {\n                        for (var type in data.events) {\n                            if (special[type]) {\n                                jQuery.event.remove(elem, type);\n\n                                // This is a shortcut to avoid jQuery.event.remove's overhead\n                            } else {\n                                jQuery.removeEvent(elem, type, data.handle);\n                            }\n                        }\n\n                        // Null the DOM reference to avoid IE6/7/8 leak (#7054)\n                        if (data.handle) {\n                            data.handle.elem = null;\n                        }\n                    }\n\n                    if (deleteExpando) {\n                        delete elem[jQuery.expando];\n\n                    } else if (elem.removeAttribute) {\n                        elem.removeAttribute(jQuery.expando);\n                    }\n\n                    delete cache[id];\n                }\n            }\n        }\n    });\n\n\n\n\n    var ralpha = /alpha\\([^)]*\\)/i,\n\tropacity = /opacity=([^)]*)/,\n    // fixed for IE9, see #8346\n\trupper = /([A-Z]|^ms)/g,\n\trnum = /^[\\-+]?(?:\\d*\\.)?\\d+$/i,\n\trnumnonpx = /^-?(?:\\d*\\.)?\\d+(?!px)[^\\d\\s]+$/i,\n\trrelNum = /^([\\-+])=([\\-+.\\de]+)/,\n\trmargin = /^margin/,\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\n    // order is important!\n\tcssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"],\n\n\tcurCSS,\n\n\tgetComputedStyle,\n\tcurrentStyle;\n\n    jQuery.fn.css = function (name, value) {\n        return jQuery.access(this, function (elem, name, value) {\n            return value !== undefined ?\n\t\t\tjQuery.style(elem, name, value) :\n\t\t\tjQuery.css(elem, name);\n        }, name, value, arguments.length > 1);\n    };\n\n    jQuery.extend({\n        // Add in style property hooks for overriding the default\n        // behavior of getting and setting a style property\n        cssHooks: {\n            opacity: {\n                get: function (elem, computed) {\n                    if (computed) {\n                        // We should always get a number back from opacity\n                        var ret = curCSS(elem, \"opacity\");\n                        return ret === \"\" ? \"1\" : ret;\n\n                    } else {\n                        return elem.style.opacity;\n                    }\n                }\n            }\n        },\n\n        // Exclude the following css properties to add px\n        cssNumber: {\n            \"fillOpacity\": true,\n            \"fontWeight\": true,\n            \"lineHeight\": true,\n            \"opacity\": true,\n            \"orphans\": true,\n            \"widows\": true,\n            \"zIndex\": true,\n            \"zoom\": true\n        },\n\n        // Add in properties whose names you wish to fix before\n        // setting or getting the value\n        cssProps: {\n            // normalize float css property\n            \"float\": jQuery.support.cssFloat ? \"cssFloat\" : \"styleFloat\"\n        },\n\n        // Get and set the style property on a DOM Node\n        style: function (elem, name, value, extra) {\n            // Don't set styles on text and comment nodes\n            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n                return;\n            }\n\n            // Make sure that we're working with the right name\n            var ret, type, origName = jQuery.camelCase(name),\n\t\t\tstyle = elem.style, hooks = jQuery.cssHooks[origName];\n\n            name = jQuery.cssProps[origName] || origName;\n\n            // Check if we're setting a value\n            if (value !== undefined) {\n                type = typeof value;\n\n                // convert relative number strings (+= or -=) to relative numbers. #7345\n                if (type === \"string\" && (ret = rrelNum.exec(value))) {\n                    value = (+(ret[1] + 1) * +ret[2]) + parseFloat(jQuery.css(elem, name));\n                    // Fixes bug #9237\n                    type = \"number\";\n                }\n\n                // Make sure that NaN and null values aren't set. See: #7116\n                if (value == null || type === \"number\" && isNaN(value)) {\n                    return;\n                }\n\n                // If a number was passed in, add 'px' to the (except for certain CSS properties)\n                if (type === \"number\" && !jQuery.cssNumber[origName]) {\n                    value += \"px\";\n                }\n\n                // If a hook was provided, use that value, otherwise just set the specified value\n                if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value)) !== undefined) {\n                    // Wrapped to prevent IE from throwing errors when 'invalid' values are provided\n                    // Fixes bug #5509\n                    try {\n                        style[name] = value;\n                    } catch (e) { }\n                }\n\n            } else {\n                // If a hook was provided get the non-computed value from there\n                if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n                    return ret;\n                }\n\n                // Otherwise just get the value from the style object\n                return style[name];\n            }\n        },\n\n        css: function (elem, name, extra) {\n            var ret, hooks;\n\n            // Make sure that we're working with the right name\n            name = jQuery.camelCase(name);\n            hooks = jQuery.cssHooks[name];\n            name = jQuery.cssProps[name] || name;\n\n            // cssFloat needs a special treatment\n            if (name === \"cssFloat\") {\n                name = \"float\";\n            }\n\n            // If a hook was provided get the computed value from there\n            if (hooks && \"get\" in hooks && (ret = hooks.get(elem, true, extra)) !== undefined) {\n                return ret;\n\n                // Otherwise, if a way to get the computed value exists, use that\n            } else if (curCSS) {\n                return curCSS(elem, name);\n            }\n        },\n\n        // A method for quickly swapping in/out CSS properties to get correct calculations\n        swap: function (elem, options, callback) {\n            var old = {},\n\t\t\tret, name;\n\n            // Remember the old values, and insert the new ones\n            for (name in options) {\n                old[name] = elem.style[name];\n                elem.style[name] = options[name];\n            }\n\n            ret = callback.call(elem);\n\n            // Revert the old values\n            for (name in options) {\n                elem.style[name] = old[name];\n            }\n\n            return ret;\n        }\n    });\n\n    // DEPRECATED in 1.3, Use jQuery.css() instead\n    jQuery.curCSS = jQuery.css;\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n        getComputedStyle = function (elem, name) {\n            var ret, defaultView, computedStyle, width,\n\t\t\tstyle = elem.style;\n\n            name = name.replace(rupper, \"-$1\").toLowerCase();\n\n            if ((defaultView = elem.ownerDocument.defaultView) &&\n\t\t\t\t(computedStyle = defaultView.getComputedStyle(elem, null))) {\n\n                ret = computedStyle.getPropertyValue(name);\n                if (ret === \"\" && !jQuery.contains(elem.ownerDocument.documentElement, elem)) {\n                    ret = jQuery.style(elem, name);\n                }\n            }\n\n            // A tribute to the \"awesome hack by Dean Edwards\"\n            // WebKit uses \"computed value (percentage if specified)\" instead of \"used value\" for margins\n            // which is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n            if (!jQuery.support.pixelMargin && computedStyle && rmargin.test(name) && rnumnonpx.test(ret)) {\n                width = style.width;\n                style.width = ret;\n                ret = computedStyle.width;\n                style.width = width;\n            }\n\n            return ret;\n        };\n    }\n\n    if (document.documentElement.currentStyle) {\n        currentStyle = function (elem, name) {\n            var left, rsLeft, uncomputed,\n\t\t\tret = elem.currentStyle && elem.currentStyle[name],\n\t\t\tstyle = elem.style;\n\n            // Avoid setting ret to empty string here\n            // so we don't default to auto\n            if (ret == null && style && (uncomputed = style[name])) {\n                ret = uncomputed;\n            }\n\n            // From the awesome hack by Dean Edwards\n            // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\n            // If we're not dealing with a regular pixel number\n            // but a number that has a weird ending, we need to convert it to pixels\n            if (rnumnonpx.test(ret)) {\n\n                // Remember the original values\n                left = style.left;\n                rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;\n\n                // Put in the new values to get a computed value out\n                if (rsLeft) {\n                    elem.runtimeStyle.left = elem.currentStyle.left;\n                }\n                style.left = name === \"fontSize\" ? \"1em\" : ret;\n                ret = style.pixelLeft + \"px\";\n\n                // Revert the changed values\n                style.left = left;\n                if (rsLeft) {\n                    elem.runtimeStyle.left = rsLeft;\n                }\n            }\n\n            return ret === \"\" ? \"auto\" : ret;\n        };\n    }\n\n    curCSS = getComputedStyle || currentStyle;\n\n    function getWidthOrHeight(elem, name, extra) {\n\n        // Start with offset property\n        var val = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\ti = name === \"width\" ? 1 : 0,\n\t\tlen = 4;\n\n        if (val > 0) {\n            if (extra !== \"border\") {\n                for (; i < len; i += 2) {\n                    if (!extra) {\n                        val -= parseFloat(jQuery.css(elem, \"padding\" + cssExpand[i])) || 0;\n                    }\n                    if (extra === \"margin\") {\n                        val += parseFloat(jQuery.css(elem, extra + cssExpand[i])) || 0;\n                    } else {\n                        val -= parseFloat(jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\")) || 0;\n                    }\n                }\n            }\n\n            return val + \"px\";\n        }\n\n        // Fall back to computed then uncomputed css if necessary\n        val = curCSS(elem, name);\n        if (val < 0 || val == null) {\n            val = elem.style[name];\n        }\n\n        // Computed unit is not pixels. Stop here and return.\n        if (rnumnonpx.test(val)) {\n            return val;\n        }\n\n        // Normalize \"\", auto, and prepare for extra\n        val = parseFloat(val) || 0;\n\n        // Add padding, border, margin\n        if (extra) {\n            for (; i < len; i += 2) {\n                val += parseFloat(jQuery.css(elem, \"padding\" + cssExpand[i])) || 0;\n                if (extra !== \"padding\") {\n                    val += parseFloat(jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\")) || 0;\n                }\n                if (extra === \"margin\") {\n                    val += parseFloat(jQuery.css(elem, extra + cssExpand[i])) || 0;\n                }\n            }\n        }\n\n        return val + \"px\";\n    }\n\n    jQuery.each([\"height\", \"width\"], function (i, name) {\n        jQuery.cssHooks[name] = {\n            get: function (elem, computed, extra) {\n                if (computed) {\n                    if (elem.offsetWidth !== 0) {\n                        return getWidthOrHeight(elem, name, extra);\n                    } else {\n                        return jQuery.swap(elem, cssShow, function () {\n                            return getWidthOrHeight(elem, name, extra);\n                        });\n                    }\n                }\n            },\n\n            set: function (elem, value) {\n                return rnum.test(value) ?\n\t\t\t\tvalue + \"px\" :\n\t\t\t\tvalue;\n            }\n        };\n    });\n\n    if (!jQuery.support.opacity) {\n        jQuery.cssHooks.opacity = {\n            get: function (elem, computed) {\n                // IE uses filters for opacity\n                return ropacity.test((computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || \"\") ?\n\t\t\t\t(parseFloat(RegExp.$1) / 100) + \"\" :\n\t\t\t\tcomputed ? \"1\" : \"\";\n            },\n\n            set: function (elem, value) {\n                var style = elem.style,\n\t\t\t\tcurrentStyle = elem.currentStyle,\n\t\t\t\topacity = jQuery.isNumeric(value) ? \"alpha(opacity=\" + value * 100 + \")\" : \"\",\n\t\t\t\tfilter = currentStyle && currentStyle.filter || style.filter || \"\";\n\n                // IE has trouble with opacity if it does not have layout\n                // Force it by setting the zoom level\n                style.zoom = 1;\n\n                // if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652\n                if (value >= 1 && jQuery.trim(filter.replace(ralpha, \"\")) === \"\") {\n\n                    // Setting style.filter to null, \"\" & \" \" still leave \"filter:\" in the cssText\n                    // if \"filter:\" is present at all, clearType is disabled, we want to avoid this\n                    // style.removeAttribute is IE Only, but so apparently is this code path...\n                    style.removeAttribute(\"filter\");\n\n                    // if there there is no filter style applied in a css rule, we are done\n                    if (currentStyle && !currentStyle.filter) {\n                        return;\n                    }\n                }\n\n                // otherwise, set new filter values\n                style.filter = ralpha.test(filter) ?\n\t\t\t\tfilter.replace(ralpha, opacity) :\n\t\t\t\tfilter + \" \" + opacity;\n            }\n        };\n    }\n\n    jQuery(function () {\n        // This hook cannot be added until DOM ready because the support test\n        // for it is not run until after DOM ready\n        if (!jQuery.support.reliableMarginRight) {\n            jQuery.cssHooks.marginRight = {\n                get: function (elem, computed) {\n                    // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n                    // Work around by temporarily setting element display to inline-block\n                    return jQuery.swap(elem, { \"display\": \"inline-block\" }, function () {\n                        if (computed) {\n                            return curCSS(elem, \"margin-right\");\n                        } else {\n                            return elem.style.marginRight;\n                        }\n                    });\n                }\n            };\n        }\n    });\n\n    if (jQuery.expr && jQuery.expr.filters) {\n        jQuery.expr.filters.hidden = function (elem) {\n            var width = elem.offsetWidth,\n\t\t\theight = elem.offsetHeight;\n\n            return (width === 0 && height === 0) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css(elem, \"display\")) === \"none\");\n        };\n\n        jQuery.expr.filters.visible = function (elem) {\n            return !jQuery.expr.filters.hidden(elem);\n        };\n    }\n\n    // These hooks are used by animate to expand properties\n    jQuery.each({\n        margin: \"\",\n        padding: \"\",\n        border: \"Width\"\n    }, function (prefix, suffix) {\n\n        jQuery.cssHooks[prefix + suffix] = {\n            expand: function (value) {\n                var i,\n\n                // assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [value],\n\t\t\t\texpanded = {};\n\n                for (i = 0; i < 4; i++) {\n                    expanded[prefix + cssExpand[i] + suffix] =\n\t\t\t\t\tparts[i] || parts[i - 2] || parts[0];\n                }\n\n                return expanded;\n            }\n        };\n    });\n\n\n\n\n    var r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trhash = /#.*$/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg, // IE leaves an \\r character at EOL\n\trinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,\n    // #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trquery = /\\?/,\n\trscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n\trselectTextarea = /^(?:select|textarea)/i,\n\trspacesAjax = /\\s+/,\n\trts = /([?&])_=[^&]*/,\n\trurl = /^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+))?)?/,\n\n    // Keep a copy of the old load method\n\t_load = jQuery.fn.load,\n\n    /* Prefilters\n    * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n    * 2) These are called:\n    *    - BEFORE asking for a transport\n    *    - AFTER param serialization (s.data is a string if s.processData is true)\n    * 3) key is the dataType\n    * 4) the catchall symbol \"*\" can be used\n    * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n    */\n\tprefilters = {},\n\n    /* Transports bindings\n    * 1) key is the dataType\n    * 2) the catchall symbol \"*\" can be used\n    * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n    */\n\ttransports = {},\n\n    // Document location\n\tajaxLocation,\n\n    // Document location segments\n\tajaxLocParts,\n\n    // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = [\"*/\"] + [\"*\"];\n\n    // #8138, IE may throw an exception when accessing\n    // a field from window.location if document.domain has been set\n    try {\n        ajaxLocation = location.href;\n    } catch (e) {\n        // Use the href attribute of an A element\n        // since IE will modify it given document.location\n        ajaxLocation = document.createElement(\"a\");\n        ajaxLocation.href = \"\";\n        ajaxLocation = ajaxLocation.href;\n    }\n\n    // Segment location into parts\n    ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];\n\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n    function addToPrefiltersOrTransports(structure) {\n\n        // dataTypeExpression is optional and defaults to \"*\"\n        return function (dataTypeExpression, func) {\n\n            if (typeof dataTypeExpression !== \"string\") {\n                func = dataTypeExpression;\n                dataTypeExpression = \"*\";\n            }\n\n            if (jQuery.isFunction(func)) {\n                var dataTypes = dataTypeExpression.toLowerCase().split(rspacesAjax),\n\t\t\t\ti = 0,\n\t\t\t\tlength = dataTypes.length,\n\t\t\t\tdataType,\n\t\t\t\tlist,\n\t\t\t\tplaceBefore;\n\n                // For each dataType in the dataTypeExpression\n                for (; i < length; i++) {\n                    dataType = dataTypes[i];\n                    // We control if we're asked to add before\n                    // any existing element\n                    placeBefore = /^\\+/.test(dataType);\n                    if (placeBefore) {\n                        dataType = dataType.substr(1) || \"*\";\n                    }\n                    list = structure[dataType] = structure[dataType] || [];\n                    // then we add to the structure accordingly\n                    list[placeBefore ? \"unshift\" : \"push\"](func);\n                }\n            }\n        };\n    }\n\n    // Base inspection function for prefilters and transports\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR,\n\t\tdataType /* internal */, inspected /* internal */) {\n\n        dataType = dataType || options.dataTypes[0];\n        inspected = inspected || {};\n\n        inspected[dataType] = true;\n\n        var list = structure[dataType],\n\t\ti = 0,\n\t\tlength = list ? list.length : 0,\n\t\texecuteOnly = (structure === prefilters),\n\t\tselection;\n\n        for (; i < length && (executeOnly || !selection); i++) {\n            selection = list[i](options, originalOptions, jqXHR);\n            // If we got redirected to another dataType\n            // we try there if executing only and not done already\n            if (typeof selection === \"string\") {\n                if (!executeOnly || inspected[selection]) {\n                    selection = undefined;\n                } else {\n                    options.dataTypes.unshift(selection);\n                    selection = inspectPrefiltersOrTransports(\n\t\t\t\t\t\tstructure, options, originalOptions, jqXHR, selection, inspected);\n                }\n            }\n        }\n        // If we're only executing or nothing was selected\n        // we try the catchall dataType if not done already\n        if ((executeOnly || !selection) && !inspected[\"*\"]) {\n            selection = inspectPrefiltersOrTransports(\n\t\t\t\tstructure, options, originalOptions, jqXHR, \"*\", inspected);\n        }\n        // unnecessary when only executing (prefilters)\n        // but it'll be ignored by the caller in that case\n        return selection;\n    }\n\n    // A special extend for ajax options\n    // that takes \"flat\" options (not to be deep extended)\n    // Fixes #9887\n    function ajaxExtend(target, src) {\n        var key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n        for (key in src) {\n            if (src[key] !== undefined) {\n                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\n            }\n        }\n        if (deep) {\n            jQuery.extend(true, target, deep);\n        }\n    }\n\n    jQuery.fn.extend({\n        load: function (url, params, callback) {\n            if (typeof url !== \"string\" && _load) {\n                return _load.apply(this, arguments);\n\n                // Don't do a request if no elements are being requested\n            } else if (!this.length) {\n                return this;\n            }\n\n            var off = url.indexOf(\" \");\n            if (off >= 0) {\n                var selector = url.slice(off, url.length);\n                url = url.slice(0, off);\n            }\n\n            // Default to a GET request\n            var type = \"GET\";\n\n            // If the second parameter was provided\n            if (params) {\n                // If it's a function\n                if (jQuery.isFunction(params)) {\n                    // We assume that it's the callback\n                    callback = params;\n                    params = undefined;\n\n                    // Otherwise, build a param string\n                } else if (typeof params === \"object\") {\n                    params = jQuery.param(params, jQuery.ajaxSettings.traditional);\n                    type = \"POST\";\n                }\n            }\n\n            var self = this;\n\n            // Request the remote document\n            jQuery.ajax({\n                url: url,\n                type: type,\n                dataType: \"html\",\n                data: params,\n                // Complete callback (responseText is used internally)\n                complete: function (jqXHR, status, responseText) {\n                    // Store the response as specified by the jqXHR object\n                    responseText = jqXHR.responseText;\n                    // If successful, inject the HTML into all the matched elements\n                    if (jqXHR.isResolved()) {\n                        // #4825: Get the actual response in case\n                        // a dataFilter is present in ajaxSettings\n                        jqXHR.done(function (r) {\n                            responseText = r;\n                        });\n                        // See if a selector was specified\n                        self.html(selector ?\n                        // Create a dummy div to hold the results\n\t\t\t\t\t\tjQuery(\"<div>\")\n                        // inject the contents of the document in, removing the scripts\n                        // to avoid any 'Permission Denied' errors in IE\n\t\t\t\t\t\t\t.append(responseText.replace(rscript, \"\"))\n\n                        // Locate the specified elements\n\t\t\t\t\t\t\t.find(selector) :\n\n                        // If not, just inject the full result\n\t\t\t\t\t\tresponseText);\n                    }\n\n                    if (callback) {\n                        self.each(callback, [responseText, status, jqXHR]);\n                    }\n                }\n            });\n\n            return this;\n        },\n\n        serialize: function () {\n            return jQuery.param(this.serializeArray());\n        },\n\n        serializeArray: function () {\n            return this.map(function () {\n                return this.elements ? jQuery.makeArray(this.elements) : this;\n            })\n\t\t.filter(function () {\n\t\t    return this.name && !this.disabled &&\n\t\t\t\t(this.checked || rselectTextarea.test(this.nodeName) ||\n\t\t\t\t\trinput.test(this.type));\n\t\t})\n\t\t.map(function (i, elem) {\n\t\t    var val = jQuery(this).val();\n\n\t\t    return val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray(val) ?\n\t\t\t\t\tjQuery.map(val, function (val, i) {\n\t\t\t\t\t    return { name: elem.name, value: val.replace(rCRLF, \"\\r\\n\") };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace(rCRLF, \"\\r\\n\") };\n\t\t}).get();\n        }\n    });\n\n    // Attach a bunch of functions for handling common AJAX events\n    jQuery.each(\"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split(\" \"), function (i, o) {\n        jQuery.fn[o] = function (f) {\n            return this.on(o, f);\n        };\n    });\n\n    jQuery.each([\"get\", \"post\"], function (i, method) {\n        jQuery[method] = function (url, data, callback, type) {\n            // shift arguments if data argument was omitted\n            if (jQuery.isFunction(data)) {\n                type = type || callback;\n                callback = data;\n                data = undefined;\n            }\n\n            return jQuery.ajax({\n                type: method,\n                url: url,\n                data: data,\n                success: callback,\n                dataType: type\n            });\n        };\n    });\n\n    jQuery.extend({\n\n        getScript: function (url, callback) {\n            return jQuery.get(url, undefined, callback, \"script\");\n        },\n\n        getJSON: function (url, data, callback) {\n            return jQuery.get(url, data, callback, \"json\");\n        },\n\n        // Creates a full fledged settings object into target\n        // with both ajaxSettings and settings fields.\n        // If target is omitted, writes into ajaxSettings.\n        ajaxSetup: function (target, settings) {\n            if (settings) {\n                // Building a settings object\n                ajaxExtend(target, jQuery.ajaxSettings);\n            } else {\n                // Extending ajaxSettings\n                settings = target;\n                target = jQuery.ajaxSettings;\n            }\n            ajaxExtend(target, settings);\n            return target;\n        },\n\n        ajaxSettings: {\n            url: ajaxLocation,\n            isLocal: rlocalProtocol.test(ajaxLocParts[1]),\n            global: true,\n            type: \"GET\",\n            contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n            processData: true,\n            async: true,\n            /*\n            timeout: 0,\n            data: null,\n            dataType: null,\n            username: null,\n            password: null,\n            cache: null,\n            traditional: false,\n            headers: {},\n            */\n\n            accepts: {\n                xml: \"application/xml, text/xml\",\n                html: \"text/html\",\n                text: \"text/plain\",\n                json: \"application/json, text/javascript\",\n                \"*\": allTypes\n            },\n\n            contents: {\n                xml: /xml/,\n                html: /html/,\n                json: /json/\n            },\n\n            responseFields: {\n                xml: \"responseXML\",\n                text: \"responseText\"\n            },\n\n            // List of data converters\n            // 1) key format is \"source_type destination_type\" (a single space in-between)\n            // 2) the catchall symbol \"*\" can be used for source_type\n            converters: {\n\n                // Convert anything to text\n                \"* text\": window.String,\n\n                // Text to html (true = no transformation)\n                \"text html\": true,\n\n                // Evaluate text as a json expression\n                \"text json\": jQuery.parseJSON,\n\n                // Parse text as xml\n                \"text xml\": jQuery.parseXML\n            },\n\n            // For options that shouldn't be deep extended:\n            // you can add your own custom options here if\n            // and when you create one that shouldn't be\n            // deep extended (see ajaxExtend)\n            flatOptions: {\n                context: true,\n                url: true\n            }\n        },\n\n        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n        ajaxTransport: addToPrefiltersOrTransports(transports),\n\n        // Main method\n        ajax: function (url, options) {\n\n            // If url is an object, simulate pre-1.5 signature\n            if (typeof url === \"object\") {\n                options = url;\n                url = undefined;\n            }\n\n            // Force options to be an object\n            options = options || {};\n\n            var // Create the final options object\n\t\t\ts = jQuery.ajaxSetup({}, options),\n            // Callbacks context\n\t\t\tcallbackContext = s.context || s,\n            // Context for global events\n            // It's the callbackContext if one was provided in the options\n            // and if it's a DOM node or a jQuery collection\n\t\t\tglobalEventContext = callbackContext !== s &&\n\t\t\t\t(callbackContext.nodeType || callbackContext instanceof jQuery) ?\n\t\t\t\t\t\tjQuery(callbackContext) : jQuery.event,\n            // Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n            // Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n            // ifModified key\n\t\t\tifModifiedKey,\n            // Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n            // Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n            // transport\n\t\t\ttransport,\n            // timeout handle\n\t\t\ttimeoutTimer,\n            // Cross-domain detection vars\n\t\t\tparts,\n            // The jqXHR state\n\t\t\tstate = 0,\n            // To know if global events are to be dispatched\n\t\t\tfireGlobals,\n            // Loop variable\n\t\t\ti,\n            // Fake xhr\n\t\t\tjqXHR = {\n\n\t\t\t    readyState: 0,\n\n\t\t\t    // Caches the header\n\t\t\t    setRequestHeader: function (name, value) {\n\t\t\t        if (!state) {\n\t\t\t            var lname = name.toLowerCase();\n\t\t\t            name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;\n\t\t\t            requestHeaders[name] = value;\n\t\t\t        }\n\t\t\t        return this;\n\t\t\t    },\n\n\t\t\t    // Raw string\n\t\t\t    getAllResponseHeaders: function () {\n\t\t\t        return state === 2 ? responseHeadersString : null;\n\t\t\t    },\n\n\t\t\t    // Builds headers hashtable if needed\n\t\t\t    getResponseHeader: function (key) {\n\t\t\t        var match;\n\t\t\t        if (state === 2) {\n\t\t\t            if (!responseHeaders) {\n\t\t\t                responseHeaders = {};\n\t\t\t                while ((match = rheaders.exec(responseHeadersString))) {\n\t\t\t                    responseHeaders[match[1].toLowerCase()] = match[2];\n\t\t\t                }\n\t\t\t            }\n\t\t\t            match = responseHeaders[key.toLowerCase()];\n\t\t\t        }\n\t\t\t        return match === undefined ? null : match;\n\t\t\t    },\n\n\t\t\t    // Overrides response content-type header\n\t\t\t    overrideMimeType: function (type) {\n\t\t\t        if (!state) {\n\t\t\t            s.mimeType = type;\n\t\t\t        }\n\t\t\t        return this;\n\t\t\t    },\n\n\t\t\t    // Cancel the request\n\t\t\t    abort: function (statusText) {\n\t\t\t        statusText = statusText || \"abort\";\n\t\t\t        if (transport) {\n\t\t\t            transport.abort(statusText);\n\t\t\t        }\n\t\t\t        done(0, statusText);\n\t\t\t        return this;\n\t\t\t    }\n\t\t\t};\n\n            // Callback for when everything is done\n            // It is defined here because jslint complains if it is declared\n            // at the end of the function (which would be more logical and readable)\n            function done(status, nativeStatusText, responses, headers) {\n\n                // Called once\n                if (state === 2) {\n                    return;\n                }\n\n                // State is \"done\" now\n                state = 2;\n\n                // Clear timeout if it exists\n                if (timeoutTimer) {\n                    clearTimeout(timeoutTimer);\n                }\n\n                // Dereference transport for early garbage collection\n                // (no matter how long the jqXHR object will be used)\n                transport = undefined;\n\n                // Cache response headers\n                responseHeadersString = headers || \"\";\n\n                // Set readyState\n                jqXHR.readyState = status > 0 ? 4 : 0;\n\n                var isSuccess,\n\t\t\t\tsuccess,\n\t\t\t\terror,\n\t\t\t\tstatusText = nativeStatusText,\n\t\t\t\tresponse = responses ? ajaxHandleResponses(s, jqXHR, responses) : undefined,\n\t\t\t\tlastModified,\n\t\t\t\tetag;\n\n                // If successful, handle type chaining\n                if (status >= 200 && status < 300 || status === 304) {\n\n                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n                    if (s.ifModified) {\n\n                        if ((lastModified = jqXHR.getResponseHeader(\"Last-Modified\"))) {\n                            jQuery.lastModified[ifModifiedKey] = lastModified;\n                        }\n                        if ((etag = jqXHR.getResponseHeader(\"Etag\"))) {\n                            jQuery.etag[ifModifiedKey] = etag;\n                        }\n                    }\n\n                    // If not modified\n                    if (status === 304) {\n\n                        statusText = \"notmodified\";\n                        isSuccess = true;\n\n                        // If we have data\n                    } else {\n\n                        try {\n                            success = ajaxConvert(s, response);\n                            statusText = \"success\";\n                            isSuccess = true;\n                        } catch (e) {\n                            // We have a parsererror\n                            statusText = \"parsererror\";\n                            error = e;\n                        }\n                    }\n                } else {\n                    // We extract error from statusText\n                    // then normalize statusText and status for non-aborts\n                    error = statusText;\n                    if (!statusText || status) {\n                        statusText = \"error\";\n                        if (status < 0) {\n                            status = 0;\n                        }\n                    }\n                }\n\n                // Set data for the fake xhr object\n                jqXHR.status = status;\n                jqXHR.statusText = \"\" + (nativeStatusText || statusText);\n\n                // Success/Error\n                if (isSuccess) {\n                    deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n                } else {\n                    deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n                }\n\n                // Status-dependent callbacks\n                jqXHR.statusCode(statusCode);\n                statusCode = undefined;\n\n                if (fireGlobals) {\n                    globalEventContext.trigger(\"ajax\" + (isSuccess ? \"Success\" : \"Error\"),\n\t\t\t\t\t\t[jqXHR, s, isSuccess ? success : error]);\n                }\n\n                // Complete\n                completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n                if (fireGlobals) {\n                    globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]);\n                    // Handle the global AJAX counter\n                    if (!(--jQuery.active)) {\n                        jQuery.event.trigger(\"ajaxStop\");\n                    }\n                }\n            }\n\n            // Attach deferreds\n            deferred.promise(jqXHR);\n            jqXHR.success = jqXHR.done;\n            jqXHR.error = jqXHR.fail;\n            jqXHR.complete = completeDeferred.add;\n\n            // Status-dependent callbacks\n            jqXHR.statusCode = function (map) {\n                if (map) {\n                    var tmp;\n                    if (state < 2) {\n                        for (tmp in map) {\n                            statusCode[tmp] = [statusCode[tmp], map[tmp]];\n                        }\n                    } else {\n                        tmp = map[jqXHR.status];\n                        jqXHR.then(tmp, tmp);\n                    }\n                }\n                return this;\n            };\n\n            // Remove hash character (#7531: and string promotion)\n            // Add protocol if not provided (#5866: IE7 issue with protocol-less urls)\n            // We also use the url parameter if available\n            s.url = ((url || s.url) + \"\").replace(rhash, \"\").replace(rprotocol, ajaxLocParts[1] + \"//\");\n\n            // Extract dataTypes list\n            s.dataTypes = jQuery.trim(s.dataType || \"*\").toLowerCase().split(rspacesAjax);\n\n            // Determine if a cross-domain request is in order\n            if (s.crossDomain == null) {\n                parts = rurl.exec(s.url.toLowerCase());\n                s.crossDomain = !!(parts &&\n\t\t\t\t(parts[1] != ajaxLocParts[1] || parts[2] != ajaxLocParts[2] ||\n\t\t\t\t\t(parts[3] || (parts[1] === \"http:\" ? 80 : 443)) !=\n\t\t\t\t\t\t(ajaxLocParts[3] || (ajaxLocParts[1] === \"http:\" ? 80 : 443)))\n\t\t\t);\n            }\n\n            // Convert data if not already a string\n            if (s.data && s.processData && typeof s.data !== \"string\") {\n                s.data = jQuery.param(s.data, s.traditional);\n            }\n\n            // Apply prefilters\n            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n\n            // If request was aborted inside a prefilter, stop there\n            if (state === 2) {\n                return false;\n            }\n\n            // We can fire global events as of now if asked to\n            fireGlobals = s.global;\n\n            // Uppercase the type\n            s.type = s.type.toUpperCase();\n\n            // Determine if request has content\n            s.hasContent = !rnoContent.test(s.type);\n\n            // Watch for a new set of requests\n            if (fireGlobals && jQuery.active++ === 0) {\n                jQuery.event.trigger(\"ajaxStart\");\n            }\n\n            // More options handling for requests with no content\n            if (!s.hasContent) {\n\n                // If data is available, append data to url\n                if (s.data) {\n                    s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.data;\n                    // #9682: remove data so that it's not used in an eventual retry\n                    delete s.data;\n                }\n\n                // Get ifModifiedKey before adding the anti-cache parameter\n                ifModifiedKey = s.url;\n\n                // Add anti-cache in url if needed\n                if (s.cache === false) {\n\n                    var ts = jQuery.now(),\n                    // try replacing _= if it is there\n\t\t\t\t\tret = s.url.replace(rts, \"$1_=\" + ts);\n\n                    // if nothing was replaced, add timestamp to the end\n                    s.url = ret + ((ret === s.url) ? (rquery.test(s.url) ? \"&\" : \"?\") + \"_=\" + ts : \"\");\n                }\n            }\n\n            // Set the correct header, if data is being sent\n            if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n                jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n            }\n\n            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n            if (s.ifModified) {\n                ifModifiedKey = ifModifiedKey || s.url;\n                if (jQuery.lastModified[ifModifiedKey]) {\n                    jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[ifModifiedKey]);\n                }\n                if (jQuery.etag[ifModifiedKey]) {\n                    jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[ifModifiedKey]);\n                }\n            }\n\n            // Set the Accepts header for the server, depending on the dataType\n            jqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[0] && s.accepts[s.dataTypes[0]] ?\n\t\t\t\ts.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") :\n\t\t\t\ts.accepts[\"*\"]\n\t\t);\n\n            // Check for headers option\n            for (i in s.headers) {\n                jqXHR.setRequestHeader(i, s.headers[i]);\n            }\n\n            // Allow custom headers/mimetypes and early abort\n            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {\n                // Abort if not done already\n                jqXHR.abort();\n                return false;\n\n            }\n\n            // Install callbacks on deferreds\n            for (i in { success: 1, error: 1, complete: 1 }) {\n                jqXHR[i](s[i]);\n            }\n\n            // Get transport\n            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n\n            // If no transport, we auto-abort\n            if (!transport) {\n                done(-1, \"No Transport\");\n            } else {\n                jqXHR.readyState = 1;\n                // Send global event\n                if (fireGlobals) {\n                    globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n                }\n                // Timeout\n                if (s.async && s.timeout > 0) {\n                    timeoutTimer = setTimeout(function () {\n                        jqXHR.abort(\"timeout\");\n                    }, s.timeout);\n                }\n\n                try {\n                    state = 1;\n                    transport.send(requestHeaders, done);\n                } catch (e) {\n                    // Propagate exception as error if not done\n                    if (state < 2) {\n                        done(-1, e);\n                        // Simply rethrow otherwise\n                    } else {\n                        throw e;\n                    }\n                }\n            }\n\n            return jqXHR;\n        },\n\n        // Serialize an array of form elements or a set of\n        // key/values into a query string\n        param: function (a, traditional) {\n            var s = [],\n\t\t\tadd = function (key, value) {\n\t\t\t    // If value is a function, invoke it and return its value\n\t\t\t    value = jQuery.isFunction(value) ? value() : value;\n\t\t\t    s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n\t\t\t};\n\n            // Set traditional to true for jQuery <= 1.3.2 behavior.\n            if (traditional === undefined) {\n                traditional = jQuery.ajaxSettings.traditional;\n            }\n\n            // If an array was passed in, assume that it is an array of form elements.\n            if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {\n                // Serialize the form elements\n                jQuery.each(a, function () {\n                    add(this.name, this.value);\n                });\n\n            } else {\n                // If traditional, encode the \"old\" way (the way 1.3.2 or older\n                // did it), otherwise encode params recursively.\n                for (var prefix in a) {\n                    buildParams(prefix, a[prefix], traditional, add);\n                }\n            }\n\n            // Return the resulting serialization\n            return s.join(\"&\").replace(r20, \"+\");\n        }\n    });\n\n    function buildParams(prefix, obj, traditional, add) {\n        if (jQuery.isArray(obj)) {\n            // Serialize array item.\n            jQuery.each(obj, function (i, v) {\n                if (traditional || rbracket.test(prefix)) {\n                    // Treat each array item as a scalar.\n                    add(prefix, v);\n\n                } else {\n                    // If array item is non-scalar (array or object), encode its\n                    // numeric index to resolve deserialization ambiguity issues.\n                    // Note that rack (as of 1.0.0) can't currently deserialize\n                    // nested arrays properly, and attempting to do so may cause\n                    // a server error. Possible fixes are to modify rack's\n                    // deserialization algorithm or to provide an option or flag\n                    // to force array serialization to be shallow.\n                    buildParams(prefix + \"[\" + (typeof v === \"object\" ? i : \"\") + \"]\", v, traditional, add);\n                }\n            });\n\n        } else if (!traditional && jQuery.type(obj) === \"object\") {\n            // Serialize object item.\n            for (var name in obj) {\n                buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n            }\n\n        } else {\n            // Serialize scalar item.\n            add(prefix, obj);\n        }\n    }\n\n    // This is still on the jQuery object... for now\n    // Want to move this to jQuery.ajax some day\n    jQuery.extend({\n\n        // Counter for holding the number of active queries\n        active: 0,\n\n        // Last-Modified header cache for next request\n        lastModified: {},\n        etag: {}\n\n    });\n\n    /* Handles responses to an ajax request:\n    * - sets all responseXXX fields accordingly\n    * - finds the right dataType (mediates between content-type and expected dataType)\n    * - returns the corresponding response\n    */\n    function ajaxHandleResponses(s, jqXHR, responses) {\n\n        var contents = s.contents,\n\t\tdataTypes = s.dataTypes,\n\t\tresponseFields = s.responseFields,\n\t\tct,\n\t\ttype,\n\t\tfinalDataType,\n\t\tfirstDataType;\n\n        // Fill responseXXX fields\n        for (type in responseFields) {\n            if (type in responses) {\n                jqXHR[responseFields[type]] = responses[type];\n            }\n        }\n\n        // Remove auto dataType and get content-type in the process\n        while (dataTypes[0] === \"*\") {\n            dataTypes.shift();\n            if (ct === undefined) {\n                ct = s.mimeType || jqXHR.getResponseHeader(\"content-type\");\n            }\n        }\n\n        // Check if we're dealing with a known content-type\n        if (ct) {\n            for (type in contents) {\n                if (contents[type] && contents[type].test(ct)) {\n                    dataTypes.unshift(type);\n                    break;\n                }\n            }\n        }\n\n        // Check to see if we have a response for the expected dataType\n        if (dataTypes[0] in responses) {\n            finalDataType = dataTypes[0];\n        } else {\n            // Try convertible dataTypes\n            for (type in responses) {\n                if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n                    finalDataType = type;\n                    break;\n                }\n                if (!firstDataType) {\n                    firstDataType = type;\n                }\n            }\n            // Or just use first one\n            finalDataType = finalDataType || firstDataType;\n        }\n\n        // If we found a dataType\n        // We add the dataType to the list if needed\n        // and return the corresponding response\n        if (finalDataType) {\n            if (finalDataType !== dataTypes[0]) {\n                dataTypes.unshift(finalDataType);\n            }\n            return responses[finalDataType];\n        }\n    }\n\n    // Chain conversions given the request and the original response\n    function ajaxConvert(s, response) {\n\n        // Apply the dataFilter if provided\n        if (s.dataFilter) {\n            response = s.dataFilter(response, s.dataType);\n        }\n\n        var dataTypes = s.dataTypes,\n\t\tconverters = {},\n\t\ti,\n\t\tkey,\n\t\tlength = dataTypes.length,\n\t\ttmp,\n        // Current and previous dataTypes\n\t\tcurrent = dataTypes[0],\n\t\tprev,\n        // Conversion expression\n\t\tconversion,\n        // Conversion function\n\t\tconv,\n        // Conversion functions (transitive conversion)\n\t\tconv1,\n\t\tconv2;\n\n        // For each dataType in the chain\n        for (i = 1; i < length; i++) {\n\n            // Create converters map\n            // with lowercased keys\n            if (i === 1) {\n                for (key in s.converters) {\n                    if (typeof key === \"string\") {\n                        converters[key.toLowerCase()] = s.converters[key];\n                    }\n                }\n            }\n\n            // Get the dataTypes\n            prev = current;\n            current = dataTypes[i];\n\n            // If current is auto dataType, update it to prev\n            if (current === \"*\") {\n                current = prev;\n                // If no auto and dataTypes are actually different\n            } else if (prev !== \"*\" && prev !== current) {\n\n                // Get the converter\n                conversion = prev + \" \" + current;\n                conv = converters[conversion] || converters[\"* \" + current];\n\n                // If there is no direct converter, search transitively\n                if (!conv) {\n                    conv2 = undefined;\n                    for (conv1 in converters) {\n                        tmp = conv1.split(\" \");\n                        if (tmp[0] === prev || tmp[0] === \"*\") {\n                            conv2 = converters[tmp[1] + \" \" + current];\n                            if (conv2) {\n                                conv1 = converters[conv1];\n                                if (conv1 === true) {\n                                    conv = conv2;\n                                } else if (conv2 === true) {\n                                    conv = conv1;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // If we found no converter, dispatch an error\n                if (!(conv || conv2)) {\n                    jQuery.error(\"No conversion from \" + conversion.replace(\" \", \" to \"));\n                }\n                // If found converter is not an equivalence\n                if (conv !== true) {\n                    // Convert with 1 or 2 converters accordingly\n                    response = conv ? conv(response) : conv2(conv1(response));\n                }\n            }\n        }\n        return response;\n    }\n\n\n\n\n    var jsc = jQuery.now(),\n\tjsre = /(\\=)\\?(&|$)|\\?\\?/i;\n\n    // Default jsonp settings\n    jQuery.ajaxSetup({\n        jsonp: \"callback\",\n        jsonpCallback: function () {\n            return jQuery.expando + \"_\" + (jsc++);\n        }\n    });\n\n    // Detect, normalize options and install callbacks for jsonp requests\n    jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n\n        var inspectData = (typeof s.data === \"string\") && /^application\\/x\\-www\\-form\\-urlencoded/.test(s.contentType);\n\n        if (s.dataTypes[0] === \"jsonp\" ||\n\t\ts.jsonp !== false && (jsre.test(s.url) ||\n\t\t\t\tinspectData && jsre.test(s.data))) {\n\n            var responseContainer,\n\t\t\tjsonpCallback = s.jsonpCallback =\n\t\t\t\tjQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback,\n\t\t\tprevious = window[jsonpCallback],\n\t\t\turl = s.url,\n\t\t\tdata = s.data,\n\t\t\treplace = \"$1\" + jsonpCallback + \"$2\";\n\n            if (s.jsonp !== false) {\n                url = url.replace(jsre, replace);\n                if (s.url === url) {\n                    if (inspectData) {\n                        data = data.replace(jsre, replace);\n                    }\n                    if (s.data === data) {\n                        // Add callback manually\n                        url += (/\\?/.test(url) ? \"&\" : \"?\") + s.jsonp + \"=\" + jsonpCallback;\n                    }\n                }\n            }\n\n            s.url = url;\n            s.data = data;\n\n            // Install callback\n            window[jsonpCallback] = function (response) {\n                responseContainer = [response];\n            };\n\n            // Clean-up function\n            jqXHR.always(function () {\n                // Set callback back to previous value\n                window[jsonpCallback] = previous;\n                // Call if it was a function and we have a response\n                if (responseContainer && jQuery.isFunction(previous)) {\n                    window[jsonpCallback](responseContainer[0]);\n                }\n            });\n\n            // Use data converter to retrieve json after script execution\n            s.converters[\"script json\"] = function () {\n                if (!responseContainer) {\n                    jQuery.error(jsonpCallback + \" was not called\");\n                }\n                return responseContainer[0];\n            };\n\n            // force json dataType\n            s.dataTypes[0] = \"json\";\n\n            // Delegate to script\n            return \"script\";\n        }\n    });\n\n\n\n\n    // Install script dataType\n    jQuery.ajaxSetup({\n        accepts: {\n            script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n        },\n        contents: {\n            script: /javascript|ecmascript/\n        },\n        converters: {\n            \"text script\": function (text) {\n                jQuery.globalEval(text);\n                return text;\n            }\n        }\n    });\n\n    // Handle cache's special case and global\n    jQuery.ajaxPrefilter(\"script\", function (s) {\n        if (s.cache === undefined) {\n            s.cache = false;\n        }\n        if (s.crossDomain) {\n            s.type = \"GET\";\n            s.global = false;\n        }\n    });\n\n    // Bind script tag hack transport\n    jQuery.ajaxTransport(\"script\", function (s) {\n\n        // This transport only deals with cross domain requests\n        if (s.crossDomain) {\n\n            var script,\n\t\t\thead = document.head || document.getElementsByTagName(\"head\")[0] || document.documentElement;\n\n            return {\n\n                send: function (_, callback) {\n\n                    script = document.createElement(\"script\");\n\n                    script.async = \"async\";\n\n                    if (s.scriptCharset) {\n                        script.charset = s.scriptCharset;\n                    }\n\n                    script.src = s.url;\n\n                    // Attach handlers for all browsers\n                    script.onload = script.onreadystatechange = function (_, isAbort) {\n\n                        if (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) {\n\n                            // Handle memory leak in IE\n                            script.onload = script.onreadystatechange = null;\n\n                            // Remove the script\n                            if (head && script.parentNode) {\n                                head.removeChild(script);\n                            }\n\n                            // Dereference the script\n                            script = undefined;\n\n                            // Callback if not abort\n                            if (!isAbort) {\n                                callback(200, \"success\");\n                            }\n                        }\n                    };\n                    // Use insertBefore instead of appendChild  to circumvent an IE6 bug.\n                    // This arises when a base node is used (#2709 and #4378).\n                    head.insertBefore(script, head.firstChild);\n                },\n\n                abort: function () {\n                    if (script) {\n                        script.onload(0, 1);\n                    }\n                }\n            };\n        }\n    });\n\n\n\n\n    var // #5280: Internet Explorer will keep connections alive if we don't abort on unload\n\txhrOnUnloadAbort = window.ActiveXObject ? function () {\n\t    // Abort all pending requests\n\t    for (var key in xhrCallbacks) {\n\t        xhrCallbacks[key](0, 1);\n\t    }\n\t} : false,\n\txhrId = 0,\n\txhrCallbacks;\n\n    // Functions to create xhrs\n    function createStandardXHR() {\n        try {\n            return new window.XMLHttpRequest();\n        } catch (e) { }\n    }\n\n    function createActiveXHR() {\n        try {\n            return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n        } catch (e) { }\n    }\n\n    // Create the request object\n    // (This is still attached to ajaxSettings for backward compatibility)\n    jQuery.ajaxSettings.xhr = window.ActiveXObject ?\n    /* Microsoft failed to properly\n    * implement the XMLHttpRequest in IE7 (can't request local files),\n    * so we use the ActiveXObject when it is available\n    * Additionally XMLHttpRequest can be disabled in IE7/IE8 so\n    * we need a fallback.\n    */\n\tfunction () {\n\t    return !this.isLocal && createStandardXHR() || createActiveXHR();\n\t} :\n    // For all other browsers, use the standard XMLHttpRequest object\n\tcreateStandardXHR;\n\n    // Determine support properties\n    (function (xhr) {\n        jQuery.extend(jQuery.support, {\n            ajax: !!xhr,\n            cors: !!xhr && (\"withCredentials\" in xhr)\n        });\n    })(jQuery.ajaxSettings.xhr());\n\n    // Create transport if the browser can provide an xhr\n    if (jQuery.support.ajax) {\n\n        jQuery.ajaxTransport(function (s) {\n            // Cross domain only allowed if supported through XMLHttpRequest\n            if (!s.crossDomain || jQuery.support.cors) {\n\n                var callback;\n\n                return {\n                    send: function (headers, complete) {\n\n                        // Get a new xhr\n                        var xhr = s.xhr(),\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\ti;\n\n                        // Open the socket\n                        // Passing null username, generates a login popup on Opera (#2865)\n                        if (s.username) {\n                            xhr.open(s.type, s.url, s.async, s.username, s.password);\n                        } else {\n                            xhr.open(s.type, s.url, s.async);\n                        }\n\n                        // Apply custom fields if provided\n                        if (s.xhrFields) {\n                            for (i in s.xhrFields) {\n                                xhr[i] = s.xhrFields[i];\n                            }\n                        }\n\n                        // Override mime type if needed\n                        if (s.mimeType && xhr.overrideMimeType) {\n                            xhr.overrideMimeType(s.mimeType);\n                        }\n\n                        // X-Requested-With header\n                        // For cross-domain requests, seeing as conditions for a preflight are\n                        // akin to a jigsaw puzzle, we simply never set it to be sure.\n                        // (it can always be set on a per-request basis or even using ajaxSetup)\n                        // For same-domain requests, won't change header if already provided.\n                        if (!s.crossDomain && !headers[\"X-Requested-With\"]) {\n                            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n                        }\n\n                        // Need an extra try/catch for cross domain requests in Firefox 3\n                        try {\n                            for (i in headers) {\n                                xhr.setRequestHeader(i, headers[i]);\n                            }\n                        } catch (_) { }\n\n                        // Do send the request\n                        // This may raise an exception which is actually\n                        // handled in jQuery.ajax (so no try/catch here)\n                        xhr.send((s.hasContent && s.data) || null);\n\n                        // Listener\n                        callback = function (_, isAbort) {\n\n                            var status,\n\t\t\t\t\t\t\tstatusText,\n\t\t\t\t\t\t\tresponseHeaders,\n\t\t\t\t\t\t\tresponses,\n\t\t\t\t\t\t\txml;\n\n                            // Firefox throws exceptions when accessing properties\n                            // of an xhr when a network error occured\n                            // http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)\n                            try {\n\n                                // Was never called and is aborted or complete\n                                if (callback && (isAbort || xhr.readyState === 4)) {\n\n                                    // Only called once\n                                    callback = undefined;\n\n                                    // Do not keep as active anymore\n                                    if (handle) {\n                                        xhr.onreadystatechange = jQuery.noop;\n                                        if (xhrOnUnloadAbort) {\n                                            delete xhrCallbacks[handle];\n                                        }\n                                    }\n\n                                    // If it's an abort\n                                    if (isAbort) {\n                                        // Abort it manually if needed\n                                        if (xhr.readyState !== 4) {\n                                            xhr.abort();\n                                        }\n                                    } else {\n                                        status = xhr.status;\n                                        responseHeaders = xhr.getAllResponseHeaders();\n                                        responses = {};\n                                        xml = xhr.responseXML;\n\n                                        // Construct response list\n                                        if (xml && xml.documentElement /* #4958 */) {\n                                            responses.xml = xml;\n                                        }\n\n                                        // When requesting binary data, IE6-9 will throw an exception\n                                        // on any attempt to access responseText (#11426)\n                                        try {\n                                            responses.text = xhr.responseText;\n                                        } catch (_) {\n                                        }\n\n                                        // Firefox throws an exception when accessing\n                                        // statusText for faulty cross-domain requests\n                                        try {\n                                            statusText = xhr.statusText;\n                                        } catch (e) {\n                                            // We normalize with Webkit giving an empty statusText\n                                            statusText = \"\";\n                                        }\n\n                                        // Filter status for non standard behaviors\n\n                                        // If the request is local and we have data: assume a success\n                                        // (success with no data won't get notified, that's the best we\n                                        // can do given current implementations)\n                                        if (!status && s.isLocal && !s.crossDomain) {\n                                            status = responses.text ? 200 : 404;\n                                            // IE - #1450: sometimes returns 1223 when it should be 204\n                                        } else if (status === 1223) {\n                                            status = 204;\n                                        }\n                                    }\n                                }\n                            } catch (firefoxAccessException) {\n                                if (!isAbort) {\n                                    complete(-1, firefoxAccessException);\n                                }\n                            }\n\n                            // Call complete if needed\n                            if (responses) {\n                                complete(status, statusText, responses, responseHeaders);\n                            }\n                        };\n\n                        // if we're in sync mode or it's in cache\n                        // and has been retrieved directly (IE6 & IE7)\n                        // we need to manually fire the callback\n                        if (!s.async || xhr.readyState === 4) {\n                            callback();\n                        } else {\n                            handle = ++xhrId;\n                            if (xhrOnUnloadAbort) {\n                                // Create the active xhrs callbacks list if needed\n                                // and attach the unload handler\n                                if (!xhrCallbacks) {\n                                    xhrCallbacks = {};\n                                    jQuery(window).unload(xhrOnUnloadAbort);\n                                }\n                                // Add to list of active xhrs callbacks\n                                xhrCallbacks[handle] = callback;\n                            }\n                            xhr.onreadystatechange = callback;\n                        }\n                    },\n\n                    abort: function () {\n                        if (callback) {\n                            callback(0, 1);\n                        }\n                    }\n                };\n            }\n        });\n    }\n\n\n\n\n    var elemdisplay = {},\n\tiframe, iframeDoc,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = /^([+\\-]=)?([\\d+.\\-]+)([a-z%]*)$/i,\n\ttimerId,\n\tfxAttrs = [\n    // height animations\n\t\t[\"height\", \"marginTop\", \"marginBottom\", \"paddingTop\", \"paddingBottom\"],\n    // width animations\n\t\t[\"width\", \"marginLeft\", \"marginRight\", \"paddingLeft\", \"paddingRight\"],\n    // opacity animations\n\t\t[\"opacity\"]\n\t],\n\tfxNow;\n\n    jQuery.fn.extend({\n        show: function (speed, easing, callback) {\n            var elem, display;\n\n            if (speed || speed === 0) {\n                return this.animate(genFx(\"show\", 3), speed, easing, callback);\n\n            } else {\n                for (var i = 0, j = this.length; i < j; i++) {\n                    elem = this[i];\n\n                    if (elem.style) {\n                        display = elem.style.display;\n\n                        // Reset the inline display of this element to learn if it is\n                        // being hidden by cascaded rules or not\n                        if (!jQuery._data(elem, \"olddisplay\") && display === \"none\") {\n                            display = elem.style.display = \"\";\n                        }\n\n                        // Set elements which have been overridden with display: none\n                        // in a stylesheet to whatever the default browser style is\n                        // for such an element\n                        if ((display === \"\" && jQuery.css(elem, \"display\") === \"none\") ||\n\t\t\t\t\t\t!jQuery.contains(elem.ownerDocument.documentElement, elem)) {\n                            jQuery._data(elem, \"olddisplay\", defaultDisplay(elem.nodeName));\n                        }\n                    }\n                }\n\n                // Set the display of most of the elements in a second loop\n                // to avoid the constant reflow\n                for (i = 0; i < j; i++) {\n                    elem = this[i];\n\n                    if (elem.style) {\n                        display = elem.style.display;\n\n                        if (display === \"\" || display === \"none\") {\n                            elem.style.display = jQuery._data(elem, \"olddisplay\") || \"\";\n                        }\n                    }\n                }\n\n                return this;\n            }\n        },\n\n        hide: function (speed, easing, callback) {\n            if (speed || speed === 0) {\n                return this.animate(genFx(\"hide\", 3), speed, easing, callback);\n\n            } else {\n                var elem, display,\n\t\t\t\ti = 0,\n\t\t\t\tj = this.length;\n\n                for (; i < j; i++) {\n                    elem = this[i];\n                    if (elem.style) {\n                        display = jQuery.css(elem, \"display\");\n\n                        if (display !== \"none\" && !jQuery._data(elem, \"olddisplay\")) {\n                            jQuery._data(elem, \"olddisplay\", display);\n                        }\n                    }\n                }\n\n                // Set the display of the elements in a second loop\n                // to avoid the constant reflow\n                for (i = 0; i < j; i++) {\n                    if (this[i].style) {\n                        this[i].style.display = \"none\";\n                    }\n                }\n\n                return this;\n            }\n        },\n\n        // Save the old toggle function\n        _toggle: jQuery.fn.toggle,\n\n        toggle: function (fn, fn2, callback) {\n            var bool = typeof fn === \"boolean\";\n\n            if (jQuery.isFunction(fn) && jQuery.isFunction(fn2)) {\n                this._toggle.apply(this, arguments);\n\n            } else if (fn == null || bool) {\n                this.each(function () {\n                    var state = bool ? fn : jQuery(this).is(\":hidden\");\n                    jQuery(this)[state ? \"show\" : \"hide\"]();\n                });\n\n            } else {\n                this.animate(genFx(\"toggle\", 3), fn, fn2, callback);\n            }\n\n            return this;\n        },\n\n        fadeTo: function (speed, to, easing, callback) {\n            return this.filter(\":hidden\").css(\"opacity\", 0).show().end()\n\t\t\t\t\t.animate({ opacity: to }, speed, easing, callback);\n        },\n\n        animate: function (prop, speed, easing, callback) {\n            var optall = jQuery.speed(speed, easing, callback);\n\n            if (jQuery.isEmptyObject(prop)) {\n                return this.each(optall.complete, [false]);\n            }\n\n            // Do not change referenced properties as per-property easing will be lost\n            prop = jQuery.extend({}, prop);\n\n            function doAnimation() {\n                // XXX 'this' does not always have a nodeName when running the\n                // test suite\n\n                if (optall.queue === false) {\n                    jQuery._mark(this);\n                }\n\n                var opt = jQuery.extend({}, optall),\n\t\t\t\tisElement = this.nodeType === 1,\n\t\t\t\thidden = isElement && jQuery(this).is(\":hidden\"),\n\t\t\t\tname, val, p, e, hooks, replace,\n\t\t\t\tparts, start, end, unit,\n\t\t\t\tmethod;\n\n                // will store per property easing and be used to determine when an animation is complete\n                opt.animatedProperties = {};\n\n                // first pass over propertys to expand / normalize\n                for (p in prop) {\n                    name = jQuery.camelCase(p);\n                    if (p !== name) {\n                        prop[name] = prop[p];\n                        delete prop[p];\n                    }\n\n                    if ((hooks = jQuery.cssHooks[name]) && \"expand\" in hooks) {\n                        replace = hooks.expand(prop[name]);\n                        delete prop[name];\n\n                        // not quite $.extend, this wont overwrite keys already present.\n                        // also - reusing 'p' from above because we have the correct \"name\"\n                        for (p in replace) {\n                            if (!(p in prop)) {\n                                prop[p] = replace[p];\n                            }\n                        }\n                    }\n                }\n\n                for (name in prop) {\n                    val = prop[name];\n                    // easing resolution: per property > opt.specialEasing > opt.easing > 'swing' (default)\n                    if (jQuery.isArray(val)) {\n                        opt.animatedProperties[name] = val[1];\n                        val = prop[name] = val[0];\n                    } else {\n                        opt.animatedProperties[name] = opt.specialEasing && opt.specialEasing[name] || opt.easing || 'swing';\n                    }\n\n                    if (val === \"hide\" && hidden || val === \"show\" && !hidden) {\n                        return opt.complete.call(this);\n                    }\n\n                    if (isElement && (name === \"height\" || name === \"width\")) {\n                        // Make sure that nothing sneaks out\n                        // Record all 3 overflow attributes because IE does not\n                        // change the overflow attribute when overflowX and\n                        // overflowY are set to the same value\n                        opt.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];\n\n                        // Set display property to inline-block for height/width\n                        // animations on inline elements that are having width/height animated\n                        if (jQuery.css(this, \"display\") === \"inline\" &&\n\t\t\t\t\t\t\tjQuery.css(this, \"float\") === \"none\") {\n\n                            // inline-level elements accept inline-block;\n                            // block-level elements need to be inline with layout\n                            if (!jQuery.support.inlineBlockNeedsLayout || defaultDisplay(this.nodeName) === \"inline\") {\n                                this.style.display = \"inline-block\";\n\n                            } else {\n                                this.style.zoom = 1;\n                            }\n                        }\n                    }\n                }\n\n                if (opt.overflow != null) {\n                    this.style.overflow = \"hidden\";\n                }\n\n                for (p in prop) {\n                    e = new jQuery.fx(this, opt, p);\n                    val = prop[p];\n\n                    if (rfxtypes.test(val)) {\n\n                        // Tracks whether to show or hide based on private\n                        // data attached to the element\n                        method = jQuery._data(this, \"toggle\" + p) || (val === \"toggle\" ? hidden ? \"show\" : \"hide\" : 0);\n                        if (method) {\n                            jQuery._data(this, \"toggle\" + p, method === \"show\" ? \"hide\" : \"show\");\n                            e[method]();\n                        } else {\n                            e[val]();\n                        }\n\n                    } else {\n                        parts = rfxnum.exec(val);\n                        start = e.cur();\n\n                        if (parts) {\n                            end = parseFloat(parts[2]);\n                            unit = parts[3] || (jQuery.cssNumber[p] ? \"\" : \"px\");\n\n                            // We need to compute starting value\n                            if (unit !== \"px\") {\n                                jQuery.style(this, p, (end || 1) + unit);\n                                start = ((end || 1) / e.cur()) * start;\n                                jQuery.style(this, p, start + unit);\n                            }\n\n                            // If a +=/-= token was provided, we're doing a relative animation\n                            if (parts[1]) {\n                                end = ((parts[1] === \"-=\" ? -1 : 1) * end) + start;\n                            }\n\n                            e.custom(start, end, unit);\n\n                        } else {\n                            e.custom(start, val, \"\");\n                        }\n                    }\n                }\n\n                // For JS strict compliance\n                return true;\n            }\n\n            return optall.queue === false ?\n\t\t\tthis.each(doAnimation) :\n\t\t\tthis.queue(optall.queue, doAnimation);\n        },\n\n        stop: function (type, clearQueue, gotoEnd) {\n            if (typeof type !== \"string\") {\n                gotoEnd = clearQueue;\n                clearQueue = type;\n                type = undefined;\n            }\n            if (clearQueue && type !== false) {\n                this.queue(type || \"fx\", []);\n            }\n\n            return this.each(function () {\n                var index,\n\t\t\t\thadTimers = false,\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = jQuery._data(this);\n\n                // clear marker counters if we know they won't be\n                if (!gotoEnd) {\n                    jQuery._unmark(true, this);\n                }\n\n                function stopQueue(elem, data, index) {\n                    var hooks = data[index];\n                    jQuery.removeData(elem, index, true);\n                    hooks.stop(gotoEnd);\n                }\n\n                if (type == null) {\n                    for (index in data) {\n                        if (data[index] && data[index].stop && index.indexOf(\".run\") === index.length - 4) {\n                            stopQueue(this, data, index);\n                        }\n                    }\n                } else if (data[index = type + \".run\"] && data[index].stop) {\n                    stopQueue(this, data, index);\n                }\n\n                for (index = timers.length; index--; ) {\n                    if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n                        if (gotoEnd) {\n\n                            // force the next step to be the last\n                            timers[index](true);\n                        } else {\n                            timers[index].saveState();\n                        }\n                        hadTimers = true;\n                        timers.splice(index, 1);\n                    }\n                }\n\n                // start the next in the queue if the last step wasn't forced\n                // timers currently will call their complete callbacks, which will dequeue\n                // but only if they were gotoEnd\n                if (!(gotoEnd && hadTimers)) {\n                    jQuery.dequeue(this, type);\n                }\n            });\n        }\n\n    });\n\n    // Animations created synchronously will run synchronously\n    function createFxNow() {\n        setTimeout(clearFxNow, 0);\n        return (fxNow = jQuery.now());\n    }\n\n    function clearFxNow() {\n        fxNow = undefined;\n    }\n\n    // Generate parameters to create a standard animation\n    function genFx(type, num) {\n        var obj = {};\n\n        jQuery.each(fxAttrs.concat.apply([], fxAttrs.slice(0, num)), function () {\n            obj[this] = type;\n        });\n\n        return obj;\n    }\n\n    // Generate shortcuts for custom animations\n    jQuery.each({\n        slideDown: genFx(\"show\", 1),\n        slideUp: genFx(\"hide\", 1),\n        slideToggle: genFx(\"toggle\", 1),\n        fadeIn: { opacity: \"show\" },\n        fadeOut: { opacity: \"hide\" },\n        fadeToggle: { opacity: \"toggle\" }\n    }, function (name, props) {\n        jQuery.fn[name] = function (speed, easing, callback) {\n            return this.animate(props, speed, easing, callback);\n        };\n    });\n\n    jQuery.extend({\n        speed: function (speed, easing, fn) {\n            var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n                complete: fn || !fn && easing ||\n\t\t\t\tjQuery.isFunction(speed) && speed,\n                duration: speed,\n                easing: fn && easing || easing && !jQuery.isFunction(easing) && easing\n            };\n\n            opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;\n\n            // normalize opt.queue - true/undefined/null -> \"fx\"\n            if (opt.queue == null || opt.queue === true) {\n                opt.queue = \"fx\";\n            }\n\n            // Queueing\n            opt.old = opt.complete;\n\n            opt.complete = function (noUnmark) {\n                if (jQuery.isFunction(opt.old)) {\n                    opt.old.call(this);\n                }\n\n                if (opt.queue) {\n                    jQuery.dequeue(this, opt.queue);\n                } else if (noUnmark !== false) {\n                    jQuery._unmark(this);\n                }\n            };\n\n            return opt;\n        },\n\n        easing: {\n            linear: function (p) {\n                return p;\n            },\n            swing: function (p) {\n                return (-Math.cos(p * Math.PI) / 2) + 0.5;\n            }\n        },\n\n        timers: [],\n\n        fx: function (elem, options, prop) {\n            this.options = options;\n            this.elem = elem;\n            this.prop = prop;\n\n            options.orig = options.orig || {};\n        }\n\n    });\n\n    jQuery.fx.prototype = {\n        // Simple function for setting a style value\n        update: function () {\n            if (this.options.step) {\n                this.options.step.call(this.elem, this.now, this);\n            }\n\n            (jQuery.fx.step[this.prop] || jQuery.fx.step._default)(this);\n        },\n\n        // Get the current size\n        cur: function () {\n            if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) {\n                return this.elem[this.prop];\n            }\n\n            var parsed,\n\t\t\tr = jQuery.css(this.elem, this.prop);\n            // Empty strings, null, undefined and \"auto\" are converted to 0,\n            // complex values such as \"rotate(1rad)\" are returned as is,\n            // simple values such as \"10px\" are parsed to Float.\n            return isNaN(parsed = parseFloat(r)) ? !r || r === \"auto\" ? 0 : r : parsed;\n        },\n\n        // Start an animation from one number to another\n        custom: function (from, to, unit) {\n            var self = this,\n\t\t\tfx = jQuery.fx;\n\n            this.startTime = fxNow || createFxNow();\n            this.end = to;\n            this.now = this.start = from;\n            this.pos = this.state = 0;\n            this.unit = unit || this.unit || (jQuery.cssNumber[this.prop] ? \"\" : \"px\");\n\n            function t(gotoEnd) {\n                return self.step(gotoEnd);\n            }\n\n            t.queue = this.options.queue;\n            t.elem = this.elem;\n            t.saveState = function () {\n                if (jQuery._data(self.elem, \"fxshow\" + self.prop) === undefined) {\n                    if (self.options.hide) {\n                        jQuery._data(self.elem, \"fxshow\" + self.prop, self.start);\n                    } else if (self.options.show) {\n                        jQuery._data(self.elem, \"fxshow\" + self.prop, self.end);\n                    }\n                }\n            };\n\n            if (t() && jQuery.timers.push(t) && !timerId) {\n                timerId = setInterval(fx.tick, fx.interval);\n            }\n        },\n\n        // Simple 'show' function\n        show: function () {\n            var dataShow = jQuery._data(this.elem, \"fxshow\" + this.prop);\n\n            // Remember where we started, so that we can go back to it later\n            this.options.orig[this.prop] = dataShow || jQuery.style(this.elem, this.prop);\n            this.options.show = true;\n\n            // Begin the animation\n            // Make sure that we start at a small width/height to avoid any flash of content\n            if (dataShow !== undefined) {\n                // This show is picking up where a previous hide or show left off\n                this.custom(this.cur(), dataShow);\n            } else {\n                this.custom(this.prop === \"width\" || this.prop === \"height\" ? 1 : 0, this.cur());\n            }\n\n            // Start by showing the element\n            jQuery(this.elem).show();\n        },\n\n        // Simple 'hide' function\n        hide: function () {\n            // Remember where we started, so that we can go back to it later\n            this.options.orig[this.prop] = jQuery._data(this.elem, \"fxshow\" + this.prop) || jQuery.style(this.elem, this.prop);\n            this.options.hide = true;\n\n            // Begin the animation\n            this.custom(this.cur(), 0);\n        },\n\n        // Each step of an animation\n        step: function (gotoEnd) {\n            var p, n, complete,\n\t\t\tt = fxNow || createFxNow(),\n\t\t\tdone = true,\n\t\t\telem = this.elem,\n\t\t\toptions = this.options;\n\n            if (gotoEnd || t >= options.duration + this.startTime) {\n                this.now = this.end;\n                this.pos = this.state = 1;\n                this.update();\n\n                options.animatedProperties[this.prop] = true;\n\n                for (p in options.animatedProperties) {\n                    if (options.animatedProperties[p] !== true) {\n                        done = false;\n                    }\n                }\n\n                if (done) {\n                    // Reset the overflow\n                    if (options.overflow != null && !jQuery.support.shrinkWrapBlocks) {\n\n                        jQuery.each([\"\", \"X\", \"Y\"], function (index, value) {\n                            elem.style[\"overflow\" + value] = options.overflow[index];\n                        });\n                    }\n\n                    // Hide the element if the \"hide\" operation was done\n                    if (options.hide) {\n                        jQuery(elem).hide();\n                    }\n\n                    // Reset the properties, if the item has been hidden or shown\n                    if (options.hide || options.show) {\n                        for (p in options.animatedProperties) {\n                            jQuery.style(elem, p, options.orig[p]);\n                            jQuery.removeData(elem, \"fxshow\" + p, true);\n                            // Toggle data is no longer needed\n                            jQuery.removeData(elem, \"toggle\" + p, true);\n                        }\n                    }\n\n                    // Execute the complete function\n                    // in the event that the complete function throws an exception\n                    // we must ensure it won't be called twice. #5684\n\n                    complete = options.complete;\n                    if (complete) {\n\n                        options.complete = false;\n                        complete.call(elem);\n                    }\n                }\n\n                return false;\n\n            } else {\n                // classical easing cannot be used with an Infinity duration\n                if (options.duration == Infinity) {\n                    this.now = t;\n                } else {\n                    n = t - this.startTime;\n                    this.state = n / options.duration;\n\n                    // Perform the easing function, defaults to swing\n                    this.pos = jQuery.easing[options.animatedProperties[this.prop]](this.state, n, 0, 1, options.duration);\n                    this.now = this.start + ((this.end - this.start) * this.pos);\n                }\n                // Perform the next step of the animation\n                this.update();\n            }\n\n            return true;\n        }\n    };\n\n    jQuery.extend(jQuery.fx, {\n        tick: function () {\n            var timer,\n\t\t\ttimers = jQuery.timers,\n\t\t\ti = 0;\n\n            for (; i < timers.length; i++) {\n                timer = timers[i];\n                // Checks the timer has not already been removed\n                if (!timer() && timers[i] === timer) {\n                    timers.splice(i--, 1);\n                }\n            }\n\n            if (!timers.length) {\n                jQuery.fx.stop();\n            }\n        },\n\n        interval: 13,\n\n        stop: function () {\n            clearInterval(timerId);\n            timerId = null;\n        },\n\n        speeds: {\n            slow: 600,\n            fast: 200,\n            // Default speed\n            _default: 400\n        },\n\n        step: {\n            opacity: function (fx) {\n                jQuery.style(fx.elem, \"opacity\", fx.now);\n            },\n\n            _default: function (fx) {\n                if (fx.elem.style && fx.elem.style[fx.prop] != null) {\n                    fx.elem.style[fx.prop] = fx.now + fx.unit;\n                } else {\n                    fx.elem[fx.prop] = fx.now;\n                }\n            }\n        }\n    });\n\n    // Ensure props that can't be negative don't go there on undershoot easing\n    jQuery.each(fxAttrs.concat.apply([], fxAttrs), function (i, prop) {\n        // exclude marginTop, marginLeft, marginBottom and marginRight from this list\n        if (prop.indexOf(\"margin\")) {\n            jQuery.fx.step[prop] = function (fx) {\n                jQuery.style(fx.elem, prop, Math.max(0, fx.now) + fx.unit);\n            };\n        }\n    });\n\n    if (jQuery.expr && jQuery.expr.filters) {\n        jQuery.expr.filters.animated = function (elem) {\n            return jQuery.grep(jQuery.timers, function (fn) {\n                return elem === fn.elem;\n            }).length;\n        };\n    }\n\n    // Try to restore the default display value of an element\n    function defaultDisplay(nodeName) {\n\n        if (!elemdisplay[nodeName]) {\n\n            var body = document.body,\n\t\t\telem = jQuery(\"<\" + nodeName + \">\").appendTo(body),\n\t\t\tdisplay = elem.css(\"display\");\n            elem.remove();\n\n            // If the simple way fails,\n            // get element's real default display by attaching it to a temp iframe\n            if (display === \"none\" || display === \"\") {\n                // No iframe to use yet, so create it\n                if (!iframe) {\n                    iframe = document.createElement(\"iframe\");\n                    iframe.frameBorder = iframe.width = iframe.height = 0;\n                }\n\n                body.appendChild(iframe);\n\n                // Create a cacheable copy of the iframe document on first call.\n                // IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML\n                // document to it; WebKit & Firefox won't allow reusing the iframe document.\n                if (!iframeDoc || !iframe.createElement) {\n                    iframeDoc = (iframe.contentWindow || iframe.contentDocument).document;\n                    iframeDoc.write((jQuery.support.boxModel ? \"<!doctype html>\" : \"\") + \"<html><body>\");\n                    iframeDoc.close();\n                }\n\n                elem = iframeDoc.createElement(nodeName);\n\n                iframeDoc.body.appendChild(elem);\n\n                display = jQuery.css(elem, \"display\");\n                body.removeChild(iframe);\n            }\n\n            // Store the correct default display\n            elemdisplay[nodeName] = display;\n        }\n\n        return elemdisplay[nodeName];\n    }\n\n\n\n\n    var getOffset,\n\trtable = /^t(?:able|d|h)$/i,\n\trroot = /^(?:body|html)$/i;\n\n    if (\"getBoundingClientRect\" in document.documentElement) {\n        getOffset = function (elem, doc, docElem, box) {\n            try {\n                box = elem.getBoundingClientRect();\n            } catch (e) { }\n\n            // Make sure we're not dealing with a disconnected DOM node\n            if (!box || !jQuery.contains(docElem, elem)) {\n                return box ? { top: box.top, left: box.left} : { top: 0, left: 0 };\n            }\n\n            var body = doc.body,\n\t\t\twin = getWindow(doc),\n\t\t\tclientTop = docElem.clientTop || body.clientTop || 0,\n\t\t\tclientLeft = docElem.clientLeft || body.clientLeft || 0,\n\t\t\tscrollTop = win.pageYOffset || jQuery.support.boxModel && docElem.scrollTop || body.scrollTop,\n\t\t\tscrollLeft = win.pageXOffset || jQuery.support.boxModel && docElem.scrollLeft || body.scrollLeft,\n\t\t\ttop = box.top + scrollTop - clientTop,\n\t\t\tleft = box.left + scrollLeft - clientLeft;\n\n            return { top: top, left: left };\n        };\n\n    } else {\n        getOffset = function (elem, doc, docElem) {\n            var computedStyle,\n\t\t\toffsetParent = elem.offsetParent,\n\t\t\tprevOffsetParent = elem,\n\t\t\tbody = doc.body,\n\t\t\tdefaultView = doc.defaultView,\n\t\t\tprevComputedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle,\n\t\t\ttop = elem.offsetTop,\n\t\t\tleft = elem.offsetLeft;\n\n            while ((elem = elem.parentNode) && elem !== body && elem !== docElem) {\n                if (jQuery.support.fixedPosition && prevComputedStyle.position === \"fixed\") {\n                    break;\n                }\n\n                computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;\n                top -= elem.scrollTop;\n                left -= elem.scrollLeft;\n\n                if (elem === offsetParent) {\n                    top += elem.offsetTop;\n                    left += elem.offsetLeft;\n\n                    if (jQuery.support.doesNotAddBorder && !(jQuery.support.doesAddBorderForTableAndCells && rtable.test(elem.nodeName))) {\n                        top += parseFloat(computedStyle.borderTopWidth) || 0;\n                        left += parseFloat(computedStyle.borderLeftWidth) || 0;\n                    }\n\n                    prevOffsetParent = offsetParent;\n                    offsetParent = elem.offsetParent;\n                }\n\n                if (jQuery.support.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== \"visible\") {\n                    top += parseFloat(computedStyle.borderTopWidth) || 0;\n                    left += parseFloat(computedStyle.borderLeftWidth) || 0;\n                }\n\n                prevComputedStyle = computedStyle;\n            }\n\n            if (prevComputedStyle.position === \"relative\" || prevComputedStyle.position === \"static\") {\n                top += body.offsetTop;\n                left += body.offsetLeft;\n            }\n\n            if (jQuery.support.fixedPosition && prevComputedStyle.position === \"fixed\") {\n                top += Math.max(docElem.scrollTop, body.scrollTop);\n                left += Math.max(docElem.scrollLeft, body.scrollLeft);\n            }\n\n            return { top: top, left: left };\n        };\n    }\n\n    jQuery.fn.offset = function (options) {\n        if (arguments.length) {\n            return options === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function (i) {\n\t\t\t    jQuery.offset.setOffset(this, options, i);\n\t\t\t});\n        }\n\n        var elem = this[0],\n\t\tdoc = elem && elem.ownerDocument;\n\n        if (!doc) {\n            return null;\n        }\n\n        if (elem === doc.body) {\n            return jQuery.offset.bodyOffset(elem);\n        }\n\n        return getOffset(elem, doc, doc.documentElement);\n    };\n\n    jQuery.offset = {\n\n        bodyOffset: function (body) {\n            var top = body.offsetTop,\n\t\t\tleft = body.offsetLeft;\n\n            if (jQuery.support.doesNotIncludeMarginInBodyOffset) {\n                top += parseFloat(jQuery.css(body, \"marginTop\")) || 0;\n                left += parseFloat(jQuery.css(body, \"marginLeft\")) || 0;\n            }\n\n            return { top: top, left: left };\n        },\n\n        setOffset: function (elem, options, i) {\n            var position = jQuery.css(elem, \"position\");\n\n            // set position first, in-case top/left are set even on static elem\n            if (position === \"static\") {\n                elem.style.position = \"relative\";\n            }\n\n            var curElem = jQuery(elem),\n\t\t\tcurOffset = curElem.offset(),\n\t\t\tcurCSSTop = jQuery.css(elem, \"top\"),\n\t\t\tcurCSSLeft = jQuery.css(elem, \"left\"),\n\t\t\tcalculatePosition = (position === \"absolute\" || position === \"fixed\") && jQuery.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\n\t\t\tprops = {}, curPosition = {}, curTop, curLeft;\n\n            // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\n            if (calculatePosition) {\n                curPosition = curElem.position();\n                curTop = curPosition.top;\n                curLeft = curPosition.left;\n            } else {\n                curTop = parseFloat(curCSSTop) || 0;\n                curLeft = parseFloat(curCSSLeft) || 0;\n            }\n\n            if (jQuery.isFunction(options)) {\n                options = options.call(elem, i, curOffset);\n            }\n\n            if (options.top != null) {\n                props.top = (options.top - curOffset.top) + curTop;\n            }\n            if (options.left != null) {\n                props.left = (options.left - curOffset.left) + curLeft;\n            }\n\n            if (\"using\" in options) {\n                options.using.call(elem, props);\n            } else {\n                curElem.css(props);\n            }\n        }\n    };\n\n\n    jQuery.fn.extend({\n\n        position: function () {\n            if (!this[0]) {\n                return null;\n            }\n\n            var elem = this[0],\n\n            // Get *real* offsetParent\n\t\toffsetParent = this.offsetParent(),\n\n            // Get correct offsets\n\t\toffset = this.offset(),\n\t\tparentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0} : offsetParent.offset();\n\n            // Subtract element margins\n            // note: when an element has margin: auto the offsetLeft and marginLeft\n            // are the same in Safari causing offset.left to incorrectly be 0\n            offset.top -= parseFloat(jQuery.css(elem, \"marginTop\")) || 0;\n            offset.left -= parseFloat(jQuery.css(elem, \"marginLeft\")) || 0;\n\n            // Add offsetParent borders\n            parentOffset.top += parseFloat(jQuery.css(offsetParent[0], \"borderTopWidth\")) || 0;\n            parentOffset.left += parseFloat(jQuery.css(offsetParent[0], \"borderLeftWidth\")) || 0;\n\n            // Subtract the two offsets\n            return {\n                top: offset.top - parentOffset.top,\n                left: offset.left - parentOffset.left\n            };\n        },\n\n        offsetParent: function () {\n            return this.map(function () {\n                var offsetParent = this.offsetParent || document.body;\n                while (offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, \"position\") === \"static\")) {\n                    offsetParent = offsetParent.offsetParent;\n                }\n                return offsetParent;\n            });\n        }\n    });\n\n\n    // Create scrollLeft and scrollTop methods\n    jQuery.each({ scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function (method, prop) {\n        var top = /Y/.test(prop);\n\n        jQuery.fn[method] = function (val) {\n            return jQuery.access(this, function (elem, method, val) {\n                var win = getWindow(elem);\n\n                if (val === undefined) {\n                    return win ? (prop in win) ? win[prop] :\n\t\t\t\t\tjQuery.support.boxModel && win.document.documentElement[method] ||\n\t\t\t\t\t\twin.document.body[method] :\n\t\t\t\t\telem[method];\n                }\n\n                if (win) {\n                    win.scrollTo(\n\t\t\t\t\t!top ? val : jQuery(win).scrollLeft(),\n\t\t\t\t\t top ? val : jQuery(win).scrollTop()\n\t\t\t\t);\n\n                } else {\n                    elem[method] = val;\n                }\n            }, method, val, arguments.length, null);\n        };\n    });\n\n    function getWindow(elem) {\n        return jQuery.isWindow(elem) ?\n\t\telem :\n\t\telem.nodeType === 9 ?\n\t\t\telem.defaultView || elem.parentWindow :\n\t\t\tfalse;\n    }\n\n\n\n\n    // Create width, height, innerHeight, innerWidth, outerHeight and outerWidth methods\n    jQuery.each({ Height: \"height\", Width: \"width\" }, function (name, type) {\n        var clientProp = \"client\" + name,\n\t\tscrollProp = \"scroll\" + name,\n\t\toffsetProp = \"offset\" + name;\n\n        // innerHeight and innerWidth\n        jQuery.fn[\"inner\" + name] = function () {\n            var elem = this[0];\n            return elem ?\n\t\t\telem.style ?\n\t\t\tparseFloat(jQuery.css(elem, type, \"padding\")) :\n\t\t\tthis[type]() :\n\t\t\tnull;\n        };\n\n        // outerHeight and outerWidth\n        jQuery.fn[\"outer\" + name] = function (margin) {\n            var elem = this[0];\n            return elem ?\n\t\t\telem.style ?\n\t\t\tparseFloat(jQuery.css(elem, type, margin ? \"margin\" : \"border\")) :\n\t\t\tthis[type]() :\n\t\t\tnull;\n        };\n\n        jQuery.fn[type] = function (value) {\n            return jQuery.access(this, function (elem, type, value) {\n                var doc, docElemProp, orig, ret;\n\n                if (jQuery.isWindow(elem)) {\n                    // 3rd condition allows Nokia support, as it supports the docElem prop but not CSS1Compat\n                    doc = elem.document;\n                    docElemProp = doc.documentElement[clientProp];\n                    return jQuery.support.boxModel && docElemProp ||\n\t\t\t\t\tdoc.body && doc.body[clientProp] || docElemProp;\n                }\n\n                // Get document width or height\n                if (elem.nodeType === 9) {\n                    // Either scroll[Width/Height] or offset[Width/Height], whichever is greater\n                    doc = elem.documentElement;\n\n                    // when a window > document, IE6 reports a offset[Width/Height] > client[Width/Height]\n                    // so we can't use max, as it'll choose the incorrect offset[Width/Height]\n                    // instead we use the correct client[Width/Height]\n                    // support:IE6\n                    if (doc[clientProp] >= doc[scrollProp]) {\n                        return doc[clientProp];\n                    }\n\n                    return Math.max(\n\t\t\t\t\telem.body[scrollProp], doc[scrollProp],\n\t\t\t\t\telem.body[offsetProp], doc[offsetProp]\n\t\t\t\t);\n                }\n\n                // Get width or height on the element\n                if (value === undefined) {\n                    orig = jQuery.css(elem, type);\n                    ret = parseFloat(orig);\n                    return jQuery.isNumeric(ret) ? ret : orig;\n                }\n\n                // Set the width or height on the element\n                jQuery(elem).css(type, value);\n            }, type, value, arguments.length, null);\n        };\n    });\n\n\n\n\n    // Expose jQuery to the global object\n    window.jQuery = window.$ = jQuery;\n\n    // Expose jQuery as an AMD module, but only for AMD loaders that\n    // understand the issues with loading multiple versions of jQuery\n    // in a page that all might call define(). The loader will indicate\n    // they have special allowances for multiple jQuery versions by\n    // specifying define.amd.jQuery = true. Register as a named module,\n    // since jQuery can be concatenated with other files that may use define,\n    // but not use a proper concatenation script that understands anonymous\n    // AMD modules. A named AMD is safest and most robust way to register.\n    // Lowercase jquery is used because AMD module names are derived from\n    // file names, and jQuery is normally delivered in a lowercase file name.\n    // Do this after creating the global so that if an AMD module wants to call\n    // noConflict to hide this version of jQuery, it will work.\n    if (typeof define === \"function\" && define.amd && define.amd.jQuery) {\n        define(\"jquery\", [], function () { return jQuery; });\n    }\n\n\n\n})(window);\n"],[1," jQuery v1.8.2 jquery.com | jquery.org/license */\r\n(function(a,b){function G(a){var b=F[a]={};return p.each(a.split(s),function(a,c){b[c]=!0}),b}function J(a,c,d){if(d===b&&a.nodeType===1){var e=\"data-\"+c.replace(I,\"-$1\").toLowerCase();d=a.getAttribute(e);if(typeof d==\"string\"){try{d=d===\"true\"?!0:d===\"false\"?!1:d===\"null\"?null:+d+\"\"===d?+d:H.test(d)?p.parseJSON(d):d}catch(f){}p.data(a,c,d)}else d=b}return d}function K(a){var b;for(b in a){if(b===\"data\"&&p.isEmptyObject(a[b]))continue;if(b!==\"toJSON\")return!1}return!0}function ba(){return!1}function bb(){return!0}function bh(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function bi(a,b){do a=a[b];while(a&&a.nodeType!==1);return a}function bj(a,b,c){b=b||0;if(p.isFunction(b))return p.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return p.grep(a,function(a,d){return a===b===c});if(typeof b==\"string\"){var d=p.grep(a,function(a){return a.nodeType===1});if(be.test(b))return p.filter(b,d,!c);b=p.filter(b,d)}return p.grep(a,function(a,d){return p.inArray(a,b)>=0===c})}function bk(a){var b=bl.split(\"|\"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function bC(a,b){return a.getElementsByTagName(b)[0]||a.appendChild(a.ownerDocument.createElement(b))}function bD(a,b){if(b.nodeType!==1||!p.hasData(a))return;var c,d,e,f=p._data(a),g=p._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;d<e;d++)p.event.add(b,c,h[c][d])}g.data&&(g.data=p.extend({},g.data))}function bE(a,b){var c;if(b.nodeType!==1)return;b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c===\"object\"?(b.parentNode&&(b.outerHTML=a.outerHTML),p.support.html5Clone&&a.innerHTML&&!p.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):c===\"input\"&&bv.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):c===\"option\"?b.selected=a.defaultSelected:c===\"input\"||c===\"textarea\"?b.defaultValue=a.defaultValue:c===\"script\"&&b.text!==a.text&&(b.text=a.text),b.removeAttribute(p.expando)}function bF(a){return typeof a.getElementsByTagName!=\"undefined\"?a.getElementsByTagName(\"*\"):typeof a.querySelectorAll!=\"undefined\"?a.querySelectorAll(\"*\"):[]}function bG(a){bv.test(a.type)&&(a.defaultChecked=a.checked)}function bY(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=bW.length;while(e--){b=bW[e]+c;if(b in a)return b}return d}function bZ(a,b){return a=b||a,p.css(a,\"display\")===\"none\"||!p.contains(a.ownerDocument,a)}function b$(a,b){var c,d,e=[],f=0,g=a.length;for(;f<g;f++){c=a[f];if(!c.style)continue;e[f]=p._data(c,\"olddisplay\"),b?(!e[f]&&c.style.display===\"none\"&&(c.style.display=\"\"),c.style.display===\"\"&&bZ(c)&&(e[f]=p._data(c,\"olddisplay\",cc(c.nodeName)))):(d=bH(c,\"display\"),!e[f]&&d!==\"none\"&&p._data(c,\"olddisplay\",d))}for(f=0;f<g;f++){c=a[f];if(!c.style)continue;if(!b||c.style.display===\"none\"||c.style.display===\"\")c.style.display=b?e[f]||\"\":\"none\"}return a}function b_(a,b,c){var d=bP.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function ca(a,b,c,d){var e=c===(d?\"border\":\"content\")?4:b===\"width\"?1:0,f=0;for(;e<4;e+=2)c===\"margin\"&&(f+=p.css(a,c+bV[e],!0)),d?(c===\"content\"&&(f-=parseFloat(bH(a,\"padding\"+bV[e]))||0),c!==\"margin\"&&(f-=parseFloat(bH(a,\"border\"+bV[e]+\"Width\"))||0)):(f+=parseFloat(bH(a,\"padding\"+bV[e]))||0,c!==\"padding\"&&(f+=parseFloat(bH(a,\"border\"+bV[e]+\"Width\"))||0));return f}function cb(a,b,c){var d=b===\"width\"?a.offsetWidth:a.offsetHeight,e=!0,f=p.support.boxSizing&&p.css(a,\"boxSizing\")===\"border-box\";if(d<=0||d==null){d=bH(a,b);if(d<0||d==null)d=a.style[b];if(bQ.test(d))return d;e=f&&(p.support.boxSizingReliable||d===a.style[b]),d=parseFloat(d)||0}return d+ca(a,b,c||(f?\"border\":\"content\"),e)+\"px\"}function cc(a){if(bS[a])return bS[a];var b=p(\"<\"+a+\">\").appendTo(e.body),c=b.css(\"display\");b.remove();if(c===\"none\"||c===\"\"){bI=e.body.appendChild(bI||p.extend(e.createElement(\"iframe\"),{frameBorder:0,width:0,height:0}));if(!bJ||!bI.createElement)bJ=(bI.contentWindow||bI.contentDocument).document,bJ.write(\"<!doctype html><html><body>\"),bJ.close();b=bJ.body.appendChild(bJ.createElement(a)),c=bH(b,\"display\"),e.body.removeChild(bI)}return bS[a]=c,c}function ci(a,b,c,d){var e;if(p.isArray(b))p.each(b,function(b,e){c||ce.test(a)?d(a,e):ci(a+\"[\"+(typeof e==\"object\"?b:\"\")+\"]\",e,c,d)});else if(!c&&p.type(b)===\"object\")for(e in b)ci(a+\"[\"+e+\"]\",b[e],c,d);else d(a,b)}function cz(a){return function(b,c){typeof b!=\"string\"&&(c=b,b=\"*\");var d,e,f,g=b.toLowerCase().split(s),h=0,i=g.length;if(p.isFunction(c))for(;h<i;h++)d=g[h],f=/^\\+/.test(d),f&&(d=d.substr(1)||\"*\"),e=a[d]=a[d]||[],e[f?\"unshift\":\"push\"](c)}}function cA(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h,i=a[f],j=0,k=i?i.length:0,l=a===cv;for(;j<k&&(l||!h);j++)h=i[j](c,d,e),typeof h==\"string\"&&(!l||g[h]?h=b:(c.dataTypes.unshift(h),h=cA(a,c,d,e,h,g)));return(l||!h)&&!g[\"*\"]&&(h=cA(a,c,d,e,\"*\",g)),h}function cB(a,c){var d,e,f=p.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((f[d]?a:e||(e={}))[d]=c[d]);e&&p.extend(!0,a,e)}function cC(a,c,d){var e,f,g,h,i=a.contents,j=a.dataTypes,k=a.responseFields;for(f in k)f in d&&(c[k[f]]=d[f]);while(j[0]===\"*\")j.shift(),e===b&&(e=a.mimeType||c.getResponseHeader(\"content-type\"));if(e)for(f in i)if(i[f]&&i[f].test(e)){j.unshift(f);break}if(j[0]in d)g=j[0];else{for(f in d){if(!j[0]||a.converters[f+\" \"+j[0]]){g=f;break}h||(h=f)}g=g||h}if(g)return g!==j[0]&&j.unshift(g),d[g]}function cD(a,b){var c,d,e,f,g=a.dataTypes.slice(),h=g[0],i={},j=0;a.dataFilter&&(b=a.dataFilter(b,a.dataType));if(g[1])for(c in a.converters)i[c.toLowerCase()]=a.converters[c];for(;e=g[++j];)if(e!==\"*\"){if(h!==\"*\"&&h!==e){c=i[h+\" \"+e]||i[\"* \"+e];if(!c)for(d in i){f=d.split(\" \");if(f[1]===e){c=i[h+\" \"+f[0]]||i[\"* \"+f[0]];if(c){c===!0?c=i[d]:i[d]!==!0&&(e=f[0],g.splice(j--,0,e));break}}}if(c!==!0)if(c&&a[\"throws\"])b=c(b);else try{b=c(b)}catch(k){return{state:\"parsererror\",error:c?k:\"No conversion from \"+h+\" to \"+e}}}h=e}return{state:\"success\",data:b}}function cL(){try{return new a.XMLHttpRequest}catch(b){}}function cM(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}function cU(){return setTimeout(function(){cN=b},0),cN=p.now()}function cV(a,b){p.each(b,function(b,c){var d=(cT[b]||[]).concat(cT[\"*\"]),e=0,f=d.length;for(;e<f;e++)if(d[e].call(a,b,c))return})}function cW(a,b,c){var d,e=0,f=0,g=cS.length,h=p.Deferred().always(function(){delete i.elem}),i=function(){var b=cN||cU(),c=Math.max(0,j.startTime+j.duration-b),d=1-(c/j.duration||0),e=0,f=j.tweens.length;for(;e<f;e++)j.tweens[e].run(d);return h.notifyWith(a,[j,d,c]),d<1&&f?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:p.extend({},b),opts:p.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:cN||cU(),duration:c.duration,tweens:[],createTween:function(b,c,d){var e=p.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(e),e},stop:function(b){var c=0,d=b?j.tweens.length:0;for(;c<d;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;cX(k,j.opts.specialEasing);for(;e<g;e++){d=cS[e].call(j,a,k,j.opts);if(d)return d}return cV(j,k),p.isFunction(j.opts.start)&&j.opts.start.call(a,j),p.fx.timer(p.extend(i,{anim:j,queue:j.opts.queue,elem:a})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}function cX(a,b){var c,d,e,f,g;for(c in a){d=p.camelCase(c),e=b[d],f=a[c],p.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=p.cssHooks[d];if(g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}}function cY(a,b,c){var d,e,f,g,h,i,j,k,l=this,m=a.style,n={},o=[],q=a.nodeType&&bZ(a);c.queue||(j=p._queueHooks(a,\"fx\"),j.unqueued==null&&(j.unqueued=0,k=j.empty.fire,j.empty.fire=function(){j.unqueued||k()}),j.unqueued++,l.always(function(){l.always(function(){j.unqueued--,p.queue(a,\"fx\").length||j.empty.fire()})})),a.nodeType===1&&(\"height\"in b||\"width\"in b)&&(c.overflow=[m.overflow,m.overflowX,m.overflowY],p.css(a,\"display\")===\"inline\"&&p.css(a,\"float\")===\"none\"&&(!p.support.inlineBlockNeedsLayout||cc(a.nodeName)===\"inline\"?m.display=\"inline-block\":m.zoom=1)),c.overflow&&(m.overflow=\"hidden\",p.support.shrinkWrapBlocks||l.done(function(){m.overflow=c.overflow[0],m.overflowX=c.overflow[1],m.overflowY=c.overflow[2]}));for(d in b){f=b[d];if(cP.exec(f)){delete b[d];if(f===(q?\"hide\":\"show\"))continue;o.push(d)}}g=o.length;if(g){h=p._data(a,\"fxshow\")||p._data(a,\"fxshow\",{}),q?p(a).show():l.done(function(){p(a).hide()}),l.done(function(){var b;p.removeData(a,\"fxshow\",!0);for(b in n)p.style(a,b,n[b])});for(d=0;d<g;d++)e=o[d],i=l.createTween(e,q?h[e]:0),n[e]=h[e]||p.style(a,e),e in h||(h[e]=i.start,q&&(i.end=i.start,i.start=e===\"width\"||e===\"height\"?1:0))}}function cZ(a,b,c,d,e){return new cZ.prototype.init(a,b,c,d,e)}function c$(a,b){var c,d={height:a},e=0;b=b?1:0;for(;e<4;e+=2-b)c=bV[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}function da(a){return p.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}var c,d,e=a.document,f=a.location,g=a.navigator,h=a.jQuery,i=a.$,j=Array.prototype.push,k=Array.prototype.slice,l=Array.prototype.indexOf,m=Object.prototype.toString,n=Object.prototype.hasOwnProperty,o=String.prototype.trim,p=function(a,b){return new p.fn.init(a,b,c)},q=/[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source,r=/\\S/,s=/\\s+/,t=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,u=/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^[\\],:{}\\s]*$/,x=/(?:^|:|,)(?:\\s*\\[)+/g,y=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,z=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/g,A=/^-ms-/,B=/-([\\da-z])/gi,C=function(a,b){return(b+\"\").toUpperCase()},D=function(){e.addEventListener?(e.removeEventListener(\"DOMContentLoaded\",D,!1),p.ready()):e.readyState===\"complete\"&&(e.detachEvent(\"onreadystatechange\",D),p.ready())},E={};p.fn=p.prototype={constructor:p,init:function(a,c,d){var f,g,h,i;if(!a)return this;if(a.nodeType)return this.context=this[0]=a,this.length=1,this;if(typeof a==\"string\"){a.charAt(0)===\"<\"&&a.charAt(a.length-1)===\">\"&&a.length>=3?f=[null,a,null]:f=u.exec(a);if(f&&(f[1]||!c)){if(f[1])return c=c instanceof p?c[0]:c,i=c&&c.nodeType?c.ownerDocument||c:e,a=p.parseHTML(f[1],i,!0),v.test(f[1])&&p.isPlainObject(c)&&this.attr.call(a,c,!0),p.merge(this,a);g=e.getElementById(f[2]);if(g&&g.parentNode){if(g.id!==f[2])return d.find(a);this.length=1,this[0]=g}return this.context=e,this.selector=a,this}return!c||c.jquery?(c||d).find(a):this.constructor(c).find(a)}return p.isFunction(a)?d.ready(a):(a.selector!==b&&(this.selector=a.selector,this.context=a.context),p.makeArray(a,this))},selector:\"\",jquery:\"1.8.2\",length:0,size:function(){return this.length},toArray:function(){return k.call(this)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=p.merge(this.constructor(),a);return d.prevObject=this,d.context=this.context,b===\"find\"?d.selector=this.selector+(this.selector?\" \":\"\")+c:b&&(d.selector=this.selector+\".\"+b+\"(\"+c+\")\"),d},each:function(a,b){return p.each(this,a,b)},ready:function(a){return p.ready.promise().done(a),this},eq:function(a){return a=+a,a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(k.apply(this,arguments),\"slice\",k.call(arguments).join(\",\"))},map:function(a){return this.pushStack(p.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:j,sort:[].sort,splice:[].splice},p.fn.init.prototype=p.fn,p.extend=p.fn.extend=function(){var a,c,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;typeof h==\"boolean\"&&(k=h,h=arguments[1]||{},i=2),typeof h!=\"object\"&&!p.isFunction(h)&&(h={}),j===i&&(h=this,--i);for(;i<j;i++)if((a=arguments[i])!=null)for(c in a){d=h[c],e=a[c];if(h===e)continue;k&&e&&(p.isPlainObject(e)||(f=p.isArray(e)))?(f?(f=!1,g=d&&p.isArray(d)?d:[]):g=d&&p.isPlainObject(d)?d:{},h[c]=p.extend(k,g,e)):e!==b&&(h[c]=e)}return h},p.extend({noConflict:function(b){return a.$===p&&(a.$=i),b&&a.jQuery===p&&(a.jQuery=h),p},isReady:!1,readyWait:1,holdReady:function(a){a?p.readyWait++:p.ready(!0)},ready:function(a){if(a===!0?--p.readyWait:p.isReady)return;if(!e.body)return setTimeout(p.ready,1);p.isReady=!0;if(a!==!0&&--p.readyWait>0)return;d.resolveWith(e,[p]),p.fn.trigger&&p(e).trigger(\"ready\").off(\"ready\")},isFunction:function(a){return p.type(a)===\"function\"},isArray:Array.isArray||function(a){return p.type(a)===\"array\"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):E[m.call(a)]||\"object\"},isPlainObject:function(a){if(!a||p.type(a)!==\"object\"||a.nodeType||p.isWindow(a))return!1;try{if(a.constructor&&!n.call(a,\"constructor\")&&!n.call(a.constructor.prototype,\"isPrototypeOf\"))return!1}catch(c){return!1}var d;for(d in a);return d===b||n.call(a,d)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},error:function(a){throw new Error(a)},parseHTML:function(a,b,c){var d;return!a||typeof a!=\"string\"?null:(typeof b==\"boolean\"&&(c=b,b=0),b=b||e,(d=v.exec(a))?[b.createElement(d[1])]:(d=p.buildFragment([a],b,c?null:[]),p.merge([],(d.cacheable?p.clone(d.fragment):d.fragment).childNodes)))},parseJSON:function(b){if(!b||typeof b!=\"string\")return null;b=p.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(w.test(b.replace(y,\"@\").replace(z,\"]\").replace(x,\"\")))return(new Function(\"return \"+b))();p.error(\"Invalid JSON: \"+b)},parseXML:function(c){var d,e;if(!c||typeof c!=\"string\")return null;try{a.DOMParser?(e=new DOMParser,d=e.parseFromString(c,\"text/xml\")):(d=new ActiveXObject(\"Microsoft.XMLDOM\"),d.async=\"false\",d.loadXML(c))}catch(f){d=b}return(!d||!d.documentElement||d.getElementsByTagName(\"parsererror\").length)&&p.error(\"Invalid XML: \"+c),d},noop:function(){},globalEval:function(b){b&&r.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(A,\"ms-\").replace(B,C)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,c,d){var e,f=0,g=a.length,h=g===b||p.isFunction(a);if(d){if(h){for(e in a)if(c.apply(a[e],d)===!1)break}else for(;f<g;)if(c.apply(a[f++],d)===!1)break}else if(h){for(e in a)if(c.call(a[e],e,a[e])===!1)break}else for(;f<g;)if(c.call(a[f],f,a[f++])===!1)break;return a},trim:o&&!o.call(\"﻿ \")?function(a){return a==null?\"\":o.call(a)}:function(a){return a==null?\"\":(a+\"\").replace(t,\"\")},makeArray:function(a,b){var c,d=b||[];return a!=null&&(c=p.type(a),a.length==null||c===\"string\"||c===\"function\"||c===\"regexp\"||p.isWindow(a)?j.call(d,a):p.merge(d,a)),d},inArray:function(a,b,c){var d;if(b){if(l)return l.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=c.length,e=a.length,f=0;if(typeof d==\"number\")for(;f<d;f++)a[e++]=c[f];else while(c[f]!==b)a[e++]=c[f++];return a.length=e,a},grep:function(a,b,c){var d,e=[],f=0,g=a.length;c=!!c;for(;f<g;f++)d=!!b(a[f],f),c!==d&&e.push(a[f]);return e},map:function(a,c,d){var e,f,g=[],h=0,i=a.length,j=a instanceof p||i!==b&&typeof i==\"number\"&&(i>0&&a[0]&&a[i-1]||i===0||p.isArray(a));if(j)for(;h<i;h++)e=c(a[h],h,d),e!=null&&(g[g.length]=e);else for(f in a)e=c(a[f],f,d),e!=null&&(g[g.length]=e);return g.concat.apply([],g)},guid:1,proxy:function(a,c){var d,e,f;return typeof c==\"string\"&&(d=a[c],c=a,a=d),p.isFunction(a)?(e=k.call(arguments,2),f=function(){return a.apply(c,e.concat(k.call(arguments)))},f.guid=a.guid=a.guid||p.guid++,f):b},access:function(a,c,d,e,f,g,h){var i,j=d==null,k=0,l=a.length;if(d&&typeof d==\"object\"){for(k in d)p.access(a,c,k,d[k],1,g,e);f=1}else if(e!==b){i=h===b&&p.isFunction(e),j&&(i?(i=c,c=function(a,b,c){return i.call(p(a),c)}):(c.call(a,e),c=null));if(c)for(;k<l;k++)c(a[k],d,i?e.call(a[k],k,c(a[k],d)):e,h);f=1}return f?a:j?c.call(a):l?c(a[0],d):g},now:function(){return(new Date).getTime()}}),p.ready.promise=function(b){if(!d){d=p.Deferred();if(e.readyState===\"complete\")setTimeout(p.ready,1);else if(e.addEventListener)e.addEventListener(\"DOMContentLoaded\",D,!1),a.addEventListener(\"load\",p.ready,!1);else{e.attachEvent(\"onreadystatechange\",D),a.attachEvent(\"onload\",p.ready);var c=!1;try{c=a.frameElement==null&&e.documentElement}catch(f){}c&&c.doScroll&&function g(){if(!p.isReady){try{c.doScroll(\"left\")}catch(a){return setTimeout(g,50)}p.ready()}}()}}return d.promise(b)},p.each(\"Boolean Number String Function Array Date RegExp Object\".split(\" \"),function(a,b){E[\"[object \"+b+\"]\"]=b.toLowerCase()}),c=p(e);var F={};p.Callbacks=function(a){a=typeof a==\"string\"?F[a]||G(a):p.extend({},a);var c,d,e,f,g,h,i=[],j=!a.once&&[],k=function(b){c=a.memory&&b,d=!0,h=f||0,f=0,g=i.length,e=!0;for(;i&&h<g;h++)if(i[h].apply(b[0],b[1])===!1&&a.stopOnFalse){c=!1;break}e=!1,i&&(j?j.length&&k(j.shift()):c?i=[]:l.disable())},l={add:function(){if(i){var b=i.length;(function d(b){p.each(b,function(b,c){var e=p.type(c);e===\"function\"&&(!a.unique||!l.has(c))?i.push(c):c&&c.length&&e!==\"string\"&&d(c)})})(arguments),e?g=i.length:c&&(f=b,k(c))}return this},remove:function(){return i&&p.each(arguments,function(a,b){var c;while((c=p.inArray(b,i,c))>-1)i.splice(c,1),e&&(c<=g&&g--,c<=h&&h--)}),this},has:function(a){return p.inArray(a,i)>-1},empty:function(){return i=[],this},disable:function(){return i=j=c=b,this},disabled:function(){return!i},lock:function(){return j=b,c||l.disable(),this},locked:function(){return!j},fireWith:function(a,b){return b=b||[],b=[a,b.slice?b.slice():b],i&&(!d||j)&&(e?j.push(b):k(b)),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!d}};return l},p.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",p.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",p.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",p.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return p.Deferred(function(c){p.each(b,function(b,d){var f=d[0],g=a[b];e[d[1]](p.isFunction(g)?function(){var a=g.apply(this,arguments);a&&p.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f+\"With\"](this===e?c:this,[a])}:c[f])}),a=null}).promise()},promise:function(a){return a!=null?p.extend(a,d):d}},e={};return d.pipe=d.then,p.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[a^1][2].disable,b[2][2].lock),e[f[0]]=g.fire,e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=k.call(arguments),d=c.length,e=d!==1||a&&p.isFunction(a.promise)?d:0,f=e===1?a:p.Deferred(),g=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?k.call(arguments):d,c===h?f.notifyWith(b,c):--e||f.resolveWith(b,c)}},h,i,j;if(d>1){h=new Array(d),i=new Array(d),j=new Array(d);for(;b<d;b++)c[b]&&p.isFunction(c[b].promise)?c[b].promise().done(g(b,j,c)).fail(f.reject).progress(g(b,i,h)):--e}return e||f.resolveWith(j,c),f.promise()}}),p.support=function(){var b,c,d,f,g,h,i,j,k,l,m,n=e.createElement(\"div\");n.setAttribute(\"className\",\"t\"),n.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",c=n.getElementsByTagName(\"*\"),d=n.getElementsByTagName(\"a\")[0],d.style.cssText=\"top:1px;float:left;opacity:.5\";if(!c||!c.length)return{};f=e.createElement(\"select\"),g=f.appendChild(e.createElement(\"option\")),h=n.getElementsByTagName(\"input\")[0],b={leadingWhitespace:n.firstChild.nodeType===3,tbody:!n.getElementsByTagName(\"tbody\").length,htmlSerialize:!!n.getElementsByTagName(\"link\").length,style:/top/.test(d.getAttribute(\"style\")),hrefNormalized:d.getAttribute(\"href\")===\"/a\",opacity:/^0.5/.test(d.style.opacity),cssFloat:!!d.style.cssFloat,checkOn:h.value===\"on\",optSelected:g.selected,getSetAttribute:n.className!==\"t\",enctype:!!e.createElement(\"form\").enctype,html5Clone:e.createElement(\"nav\").cloneNode(!0).outerHTML!==\"<:nav></:nav>\",boxModel:e.compatMode===\"CSS1Compat\",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},h.checked=!0,b.noCloneChecked=h.cloneNode(!0).checked,f.disabled=!0,b.optDisabled=!g.disabled;try{delete n.test}catch(o){b.deleteExpando=!1}!n.addEventListener&&n.attachEvent&&n.fireEvent&&(n.attachEvent(\"onclick\",m=function(){b.noCloneEvent=!1}),n.cloneNode(!0).fireEvent(\"onclick\"),n.detachEvent(\"onclick\",m)),h=e.createElement(\"input\"),h.value=\"t\",h.setAttribute(\"type\",\"radio\"),b.radioValue=h.value===\"t\",h.setAttribute(\"checked\",\"checked\"),h.setAttribute(\"name\",\"t\"),n.appendChild(h),i=e.createDocumentFragment(),i.appendChild(n.lastChild),b.checkClone=i.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=h.checked,i.removeChild(h),i.appendChild(n);if(n.attachEvent)for(k in{submit:!0,change:!0,focusin:!0})j=\"on\"+k,l=j in n,l||(n.setAttribute(j,\"return;\"),l=typeof n[j]==\"function\"),b[k+\"Bubbles\"]=l;return p(function(){var c,d,f,g,h=\"padding:0;margin:0;border:0;display:block;overflow:hidden;\",i=e.getElementsByTagName(\"body\")[0];if(!i)return;c=e.createElement(\"div\"),c.style.cssText=\"visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px\",i.insertBefore(c,i.firstChild),d=e.createElement(\"div\"),c.appendChild(d),d.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",f=d.getElementsByTagName(\"td\"),f[0].style.cssText=\"padding:0;margin:0;border:0;display:none\",l=f[0].offsetHeight===0,f[0].style.display=\"\",f[1].style.display=\"none\",b.reliableHiddenOffsets=l&&f[0].offsetHeight===0,d.innerHTML=\"\",d.style.cssText=\"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\",b.boxSizing=d.offsetWidth===4,b.doesNotIncludeMarginInBodyOffset=i.offsetTop!==1,a.getComputedStyle&&(b.pixelPosition=(a.getComputedStyle(d,null)||{}).top!==\"1%\",b.boxSizingReliable=(a.getComputedStyle(d,null)||{width:\"4px\"}).width===\"4px\",g=e.createElement(\"div\"),g.style.cssText=d.style.cssText=h,g.style.marginRight=g.style.width=\"0\",d.style.width=\"1px\",d.appendChild(g),b.reliableMarginRight=!parseFloat((a.getComputedStyle(g,null)||{}).marginRight)),typeof d.style.zoom!=\"undefined\"&&(d.innerHTML=\"\",d.style.cssText=h+\"width:1px;padding:1px;display:inline;zoom:1\",b.inlineBlockNeedsLayout=d.offsetWidth===3,d.style.display=\"block\",d.style.overflow=\"visible\",d.innerHTML=\"<div></div>\",d.firstChild.style.width=\"5px\",b.shrinkWrapBlocks=d.offsetWidth!==3,c.style.zoom=1),i.removeChild(c),c=d=f=g=null}),i.removeChild(n),c=d=f=g=h=i=n=null,b}();var H=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,I=/([A-Z])/g;p.extend({cache:{},deletedIds:[],uuid:0,expando:\"jQuery\"+(p.fn.jquery+Math.random()).replace(/\\D/g,\"\"),noData:{embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",applet:!0},hasData:function(a){return a=a.nodeType?p.cache[a[p.expando]]:a[p.expando],!!a&&!K(a)},data:function(a,c,d,e){if(!p.acceptData(a))return;var f,g,h=p.expando,i=typeof c==\"string\",j=a.nodeType,k=j?p.cache:a,l=j?a[h]:a[h]&&h;if((!l||!k[l]||!e&&!k[l].data)&&i&&d===b)return;l||(j?a[h]=l=p.deletedIds.pop()||p.guid++:l=h),k[l]||(k[l]={},j||(k[l].toJSON=p.noop));if(typeof c==\"object\"||typeof c==\"function\")e?k[l]=p.extend(k[l],c):k[l].data=p.extend(k[l].data,c);return f=k[l],e||(f.data||(f.data={}),f=f.data),d!==b&&(f[p.camelCase(c)]=d),i?(g=f[c],g==null&&(g=f[p.camelCase(c)])):g=f,g},removeData:function(a,b,c){if(!p.acceptData(a))return;var d,e,f,g=a.nodeType,h=g?p.cache:a,i=g?a[p.expando]:p.expando;if(!h[i])return;if(b){d=c?h[i]:h[i].data;if(d){p.isArray(b)||(b in d?b=[b]:(b=p.camelCase(b),b in d?b=[b]:b=b.split(\" \")));for(e=0,f=b.length;e<f;e++)delete d[b[e]];if(!(c?K:p.isEmptyObject)(d))return}}if(!c){delete h[i].data;if(!K(h[i]))return}g?p.cleanData([a],!0):p.support.deleteExpando||h!=h.window?delete h[i]:h[i]=null},_data:function(a,b,c){return p.data(a,b,c,!0)},acceptData:function(a){var b=a.nodeName&&p.noData[a.nodeName.toLowerCase()];return!b||b!==!0&&a.getAttribute(\"classid\")===b}}),p.fn.extend({data:function(a,c){var d,e,f,g,h,i=this[0],j=0,k=null;if(a===b){if(this.length){k=p.data(i);if(i.nodeType===1&&!p._data(i,\"parsedAttrs\")){f=i.attributes;for(h=f.length;j<h;j++)g=f[j].name,g.indexOf(\"data-\")||(g=p.camelCase(g.substring(5)),J(i,g,k[g]));p._data(i,\"parsedAttrs\",!0)}}return k}return typeof a==\"object\"?this.each(function(){p.data(this,a)}):(d=a.split(\".\",2),d[1]=d[1]?\".\"+d[1]:\"\",e=d[1]+\"!\",p.access(this,function(c){if(c===b)return k=this.triggerHandler(\"getData\"+e,[d[0]]),k===b&&i&&(k=p.data(i,a),k=J(i,a,k)),k===b&&d[1]?this.data(d[0]):k;d[1]=c,this.each(function(){var b=p(this);b.triggerHandler(\"setData\"+e,d),p.data(this,a,c),b.triggerHandler(\"changeData\"+e,d)})},null,c,arguments.length>1,null,!1))},removeData:function(a){return this.each(function(){p.removeData(this,a)})}}),p.extend({queue:function(a,b,c){var d;if(a)return b=(b||\"fx\")+\"queue\",d=p._data(a,b),c&&(!d||p.isArray(c)?d=p._data(a,b,p.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\"fx\";var c=p.queue(a,b),d=c.length,e=c.shift(),f=p._queueHooks(a,b),g=function(){p.dequeue(a,b)};e===\"inprogress\"&&(e=c.shift(),d--),e&&(b===\"fx\"&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return p._data(a,c)||p._data(a,c,{empty:p.Callbacks(\"once memory\").add(function(){p.removeData(a,b+\"queue\",!0),p.removeData(a,c,!0)})})}}),p.fn.extend({queue:function(a,c){var d=2;return typeof a!=\"string\"&&(c=a,a=\"fx\",d--),arguments.length<d?p.queue(this[0],a):c===b?this:this.each(function(){var b=p.queue(this,a,c);p._queueHooks(this,a),a===\"fx\"&&b[0]!==\"inprogress\"&&p.dequeue(this,a)})},dequeue:function(a){return this.each(function(){p.dequeue(this,a)})},delay:function(a,b){return a=p.fx?p.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,c){var d,e=1,f=p.Deferred(),g=this,h=this.length,i=function(){--e||f.resolveWith(g,[g])};typeof a!=\"string\"&&(c=a,a=b),a=a||\"fx\";while(h--)d=p._data(g[h],a+\"queueHooks\"),d&&d.empty&&(e++,d.empty.add(i));return i(),f.promise(c)}});var L,M,N,O=/[\\t\\r\\n]/g,P=/\\r/g,Q=/^(?:button|input)$/i,R=/^(?:button|input|object|select|textarea)$/i,S=/^a(?:rea|)$/i,T=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,U=p.support.getSetAttribute;p.fn.extend({attr:function(a,b){return p.access(this,p.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){p.removeAttr(this,a)})},prop:function(a,b){return p.access(this,p.prop,a,b,arguments.length>1)},removeProp:function(a){return a=p.propFix[a]||a,this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,f,g,h;if(p.isFunction(a))return this.each(function(b){p(this).addClass(a.call(this,b,this.className))});if(a&&typeof a==\"string\"){b=a.split(s);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{f=\" \"+e.className+\" \";for(g=0,h=b.length;g<h;g++)f.indexOf(\" \"+b[g]+\" \")<0&&(f+=b[g]+\" \");e.className=p.trim(f)}}}return this},removeClass:function(a){var c,d,e,f,g,h,i;if(p.isFunction(a))return this.each(function(b){p(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a==\"string\"||a===b){c=(a||\"\").split(s);for(h=0,i=this.length;h<i;h++){e=this[h];if(e.nodeType===1&&e.className){d=(\" \"+e.className+\" \").replace(O,\" \");for(f=0,g=c.length;f<g;f++)while(d.indexOf(\" \"+c[f]+\" \")>=0)d=d.replace(\" \"+c[f]+\" \",\" \");e.className=a?p.trim(d):\"\"}}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b==\"boolean\";return p.isFunction(a)?this.each(function(c){p(this).toggleClass(a.call(this,c,this.className,b),b)}):this.each(function(){if(c===\"string\"){var e,f=0,g=p(this),h=b,i=a.split(s);while(e=i[f++])h=d?h:!g.hasClass(e),g[h?\"addClass\":\"removeClass\"](e)}else if(c===\"undefined\"||c===\"boolean\")this.className&&p._data(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":p._data(this,\"__className__\")||\"\"})},hasClass:function(a){var b=\" \"+a+\" \",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(\" \"+this[c].className+\" \").replace(O,\" \").indexOf(b)>=0)return!0;return!1},val:function(a){var c,d,e,f=this[0];if(!arguments.length){if(f)return c=p.valHooks[f.type]||p.valHooks[f.nodeName.toLowerCase()],c&&\"get\"in c&&(d=c.get(f,\"value\"))!==b?d:(d=f.value,typeof d==\"string\"?d.replace(P,\"\"):d==null?\"\":d);return}return e=p.isFunction(a),this.each(function(d){var f,g=p(this);if(this.nodeType!==1)return;e?f=a.call(this,d,g.val()):f=a,f==null?f=\"\":typeof f==\"number\"?f+=\"\":p.isArray(f)&&(f=p.map(f,function(a){return a==null?\"\":a+\"\"})),c=p.valHooks[this.type]||p.valHooks[this.nodeName.toLowerCase()];if(!c||!(\"set\"in c)||c.set(this,f,\"value\")===b)this.value=f})}}),p.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,f=a.selectedIndex,g=[],h=a.options,i=a.type===\"select-one\";if(f<0)return null;c=i?f:0,d=i?f+1:h.length;for(;c<d;c++){e=h[c];if(e.selected&&(p.support.optDisabled?!e.disabled:e.getAttribute(\"disabled\")===null)&&(!e.parentNode.disabled||!p.nodeName(e.parentNode,\"optgroup\"))){b=p(e).val();if(i)return b;g.push(b)}}return i&&!g.length&&h.length?p(h[f]).val():g},set:function(a,b){var c=p.makeArray(b);return p(a).find(\"option\").each(function(){this.selected=p.inArray(p(this).val(),c)>=0}),c.length||(a.selectedIndex=-1),c}}},attrFn:{},attr:function(a,c,d,e){var f,g,h,i=a.nodeType;if(!a||i===3||i===8||i===2)return;if(e&&p.isFunction(p.fn[c]))return p(a)[c](d);if(typeof a.getAttribute==\"undefined\")return p.prop(a,c,d);h=i!==1||!p.isXMLDoc(a),h&&(c=c.toLowerCase(),g=p.attrHooks[c]||(T.test(c)?M:L));if(d!==b){if(d===null){p.removeAttr(a,c);return}return g&&\"set\"in g&&h&&(f=g.set(a,d,c))!==b?f:(a.setAttribute(c,d+\"\"),d)}return g&&\"get\"in g&&h&&(f=g.get(a,c))!==null?f:(f=a.getAttribute(c),f===null?b:f)},removeAttr:function(a,b){var c,d,e,f,g=0;if(b&&a.nodeType===1){d=b.split(s);for(;g<d.length;g++)e=d[g],e&&(c=p.propFix[e]||e,f=T.test(e),f||p.attr(a,e,\"\"),a.removeAttribute(U?e:c),f&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(Q.test(a.nodeName)&&a.parentNode)p.error(\"type property can't be changed\");else if(!p.support.radioValue&&b===\"radio\"&&p.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}},value:{get:function(a,b){return L&&p.nodeName(a,\"button\")?L.get(a,b):b in a?a.value:null},set:function(a,b,c){if(L&&p.nodeName(a,\"button\"))return L.set(a,b,c);a.value=b}}},propFix:{tabindex:\"tabIndex\",readonly:\"readOnly\",\"for\":\"htmlFor\",\"class\":\"className\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",cellpadding:\"cellPadding\",rowspan:\"rowSpan\",colspan:\"colSpan\",usemap:\"useMap\",frameborder:\"frameBorder\",contenteditable:\"contentEditable\"},prop:function(a,c,d){var e,f,g,h=a.nodeType;if(!a||h===3||h===8||h===2)return;return g=h!==1||!p.isXMLDoc(a),g&&(c=p.propFix[c]||c,f=p.propHooks[c]),d!==b?f&&\"set\"in f&&(e=f.set(a,d,c))!==b?e:a[c]=d:f&&\"get\"in f&&(e=f.get(a,c))!==null?e:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode(\"tabindex\");return c&&c.specified?parseInt(c.value,10):R.test(a.nodeName)||S.test(a.nodeName)&&a.href?0:b}}}}),M={get:function(a,c){var d,e=p.prop(a,c);return e===!0||typeof e!=\"boolean\"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;return b===!1?p.removeAttr(a,c):(d=p.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase())),c}},U||(N={name:!0,id:!0,coords:!0},L=p.valHooks.button={get:function(a,c){var d;return d=a.getAttributeNode(c),d&&(N[c]?d.value!==\"\":d.specified)?d.value:b},set:function(a,b,c){var d=a.getAttributeNode(c);return d||(d=e.createAttribute(c),a.setAttributeNode(d)),d.value=b+\"\"}},p.each([\"width\",\"height\"],function(a,b){p.attrHooks[b]=p.extend(p.attrHooks[b],{set:function(a,c){if(c===\"\")return a.setAttribute(b,\"auto\"),c}})}),p.attrHooks.contenteditable={get:L.get,set:function(a,b,c){b===\"\"&&(b=\"false\"),L.set(a,b,c)}}),p.support.hrefNormalized||p.each([\"href\",\"src\",\"width\",\"height\"],function(a,c){p.attrHooks[c]=p.extend(p.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),p.support.style||(p.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=b+\"\"}}),p.support.optSelected||(p.propHooks.selected=p.extend(p.propHooks.selected,{get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}})),p.support.enctype||(p.propFix.enctype=\"encoding\"),p.support.checkOn||p.each([\"radio\",\"checkbox\"],function(){p.valHooks[this]={get:function(a){return a.getAttribute(\"value\")===null?\"on\":a.value}}}),p.each([\"radio\",\"checkbox\"],function(){p.valHooks[this]=p.extend(p.valHooks[this],{set:function(a,b){if(p.isArray(b))return a.checked=p.inArray(p(a).val(),b)>=0}})});var V=/^(?:textarea|input|select)$/i,W=/^([^\\.]*|)(?:\\.(.+)|)$/,X=/(?:^|\\s)hover(\\.\\S+|)\\b/,Y=/^key/,Z=/^(?:mouse|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=function(a){return p.event.special.hover?a:a.replace(X,\"mouseenter$1 mouseleave$1\")};p.event={add:function(a,c,d,e,f){var g,h,i,j,k,l,m,n,o,q,r;if(a.nodeType===3||a.nodeType===8||!c||!d||!(g=p._data(a)))return;d.handler&&(o=d,d=o.handler,f=o.selector),d.guid||(d.guid=p.guid++),i=g.events,i||(g.events=i={}),h=g.handle,h||(g.handle=h=function(a){return typeof p!=\"undefined\"&&(!a||p.event.triggered!==a.type)?p.event.dispatch.apply(h.elem,arguments):b},h.elem=a),c=p.trim(_(c)).split(\" \");for(j=0;j<c.length;j++){k=W.exec(c[j])||[],l=k[1],m=(k[2]||\"\").split(\".\").sort(),r=p.event.special[l]||{},l=(f?r.delegateType:r.bindType)||l,r=p.event.special[l]||{},n=p.extend({type:l,origType:k[1],data:e,handler:d,guid:d.guid,selector:f,needsContext:f&&p.expr.match.needsContext.test(f),namespace:m.join(\".\")},o),q=i[l];if(!q){q=i[l]=[],q.delegateCount=0;if(!r.setup||r.setup.call(a,e,m,h)===!1)a.addEventListener?a.addEventListener(l,h,!1):a.attachEvent&&a.attachEvent(\"on\"+l,h)}r.add&&(r.add.call(a,n),n.handler.guid||(n.handler.guid=d.guid)),f?q.splice(q.delegateCount++,0,n):q.push(n),p.event.global[l]=!0}a=null},global:{},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,q,r=p.hasData(a)&&p._data(a);if(!r||!(m=r.events))return;b=p.trim(_(b||\"\")).split(\" \");for(f=0;f<b.length;f++){g=W.exec(b[f])||[],h=i=g[1],j=g[2];if(!h){for(h in m)p.event.remove(a,h+b[f],c,d,!0);continue}n=p.event.special[h]||{},h=(d?n.delegateType:n.bindType)||h,o=m[h]||[],k=o.length,j=j?new RegExp(\"(^|\\\\.)\"+j.split(\".\").sort().join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null;for(l=0;l<o.length;l++)q=o[l],(e||i===q.origType)&&(!c||c.guid===q.guid)&&(!j||j.test(q.namespace))&&(!d||d===q.selector||d===\"**\"&&q.selector)&&(o.splice(l--,1),q.selector&&o.delegateCount--,n.remove&&n.remove.call(a,q));o.length===0&&k!==o.length&&((!n.teardown||n.teardown.call(a,j,r.handle)===!1)&&p.removeEvent(a,h,r.handle),delete m[h])}p.isEmptyObject(m)&&(delete r.handle,p.removeData(a,\"events\",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,f,g){if(!f||f.nodeType!==3&&f.nodeType!==8){var h,i,j,k,l,m,n,o,q,r,s=c.type||c,t=[];if($.test(s+p.event.triggered))return;s.indexOf(\"!\")>=0&&(s=s.slice(0,-1),i=!0),s.indexOf(\".\")>=0&&(t=s.split(\".\"),s=t.shift(),t.sort());if((!f||p.event.customEvent[s])&&!p.event.global[s])return;c=typeof c==\"object\"?c[p.expando]?c:new p.Event(s,c):new p.Event(s),c.type=s,c.isTrigger=!0,c.exclusive=i,c.namespace=t.join(\".\"),c.namespace_re=c.namespace?new RegExp(\"(^|\\\\.)\"+t.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,m=s.indexOf(\":\")<0?\"on\"+s:\"\";if(!f){h=p.cache;for(j in h)h[j].events&&h[j].events[s]&&p.event.trigger(c,d,h[j].handle.elem,!0);return}c.result=b,c.target||(c.target=f),d=d!=null?p.makeArray(d):[],d.unshift(c),n=p.event.special[s]||{};if(n.trigger&&n.trigger.apply(f,d)===!1)return;q=[[f,n.bindType||s]];if(!g&&!n.noBubble&&!p.isWindow(f)){r=n.delegateType||s,k=$.test(r+s)?f:f.parentNode;for(l=f;k;k=k.parentNode)q.push([k,r]),l=k;l===(f.ownerDocument||e)&&q.push([l.defaultView||l.parentWindow||a,r])}for(j=0;j<q.length&&!c.isPropagationStopped();j++)k=q[j][0],c.type=q[j][1],o=(p._data(k,\"events\")||{})[c.type]&&p._data(k,\"handle\"),o&&o.apply(k,d),o=m&&k[m],o&&p.acceptData(k)&&o.apply&&o.apply(k,d)===!1&&c.preventDefault();return c.type=s,!g&&!c.isDefaultPrevented()&&(!n._default||n._default.apply(f.ownerDocument,d)===!1)&&(s!==\"click\"||!p.nodeName(f,\"a\"))&&p.acceptData(f)&&m&&f[s]&&(s!==\"focus\"&&s!==\"blur\"||c.target.offsetWidth!==0)&&!p.isWindow(f)&&(l=f[m],l&&(f[m]=null),p.event.triggered=s,f[s](),p.event.triggered=b,l&&(f[m]=l)),c.result}return},dispatch:function(c){c=p.event.fix(c||a.event);var d,e,f,g,h,i,j,l,m,n,o=(p._data(this,\"events\")||{})[c.type]||[],q=o.delegateCount,r=k.call(arguments),s=!c.exclusive&&!c.namespace,t=p.event.special[c.type]||{},u=[];r[0]=c,c.delegateTarget=this;if(t.preDispatch&&t.preDispatch.call(this,c)===!1)return;if(q&&(!c.button||c.type!==\"click\"))for(f=c.target;f!=this;f=f.parentNode||this)if(f.disabled!==!0||c.type!==\"click\"){h={},j=[];for(d=0;d<q;d++)l=o[d],m=l.selector,h[m]===b&&(h[m]=l.needsContext?p(m,this).index(f)>=0:p.find(m,this,null,[f]).length),h[m]&&j.push(l);j.length&&u.push({elem:f,matches:j})}o.length>q&&u.push({elem:this,matches:o.slice(q)});for(d=0;d<u.length&&!c.isPropagationStopped();d++){i=u[d],c.currentTarget=i.elem;for(e=0;e<i.matches.length&&!c.isImmediatePropagationStopped();e++){l=i.matches[e];if(s||!c.namespace&&!l.namespace||c.namespace_re&&c.namespace_re.test(l.namespace))c.data=l.data,c.handleObj=l,g=((p.event.special[l.origType]||{}).handle||l.handler).apply(i.elem,r),g!==b&&(c.result=g,g===!1&&(c.preventDefault(),c.stopPropagation()))}}return t.postDispatch&&t.postDispatch.call(this,c),c.result},props:\"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,c){var d,f,g,h=c.button,i=c.fromElement;return a.pageX==null&&c.clientX!=null&&(d=a.target.ownerDocument||e,f=d.documentElement,g=d.body,a.pageX=c.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=c.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?c.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0),a}},fix:function(a){if(a[p.expando])return a;var b,c,d=a,f=p.event.fixHooks[a.type]||{},g=f.props?this.props.concat(f.props):this.props;a=p.Event(d);for(b=g.length;b;)c=g[--b],a[c]=d[c];return a.target||(a.target=d.srcElement||e),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,f.filter?f.filter(a,d):a},special:{load:{noBubble:!0},focus:{delegateType:\"focusin\"},blur:{delegateType:\"focusout\"},beforeunload:{setup:function(a,b,c){p.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=p.extend(new p.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?p.event.trigger(e,null,b):p.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},p.event.handle=p.event.dispatch,p.removeEvent=e.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d=\"on\"+b;a.detachEvent&&(typeof a[d]==\"undefined\"&&(a[d]=null),a.detachEvent(d,c))},p.Event=function(a,b){if(this instanceof p.Event)a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?bb:ba):this.type=a,b&&p.extend(this,b),this.timeStamp=a&&a.timeStamp||p.now(),this[p.expando]=!0;else return new p.Event(a,b)},p.Event.prototype={preventDefault:function(){this.isDefaultPrevented=bb;var a=this.originalEvent;if(!a)return;a.preventDefault?a.preventDefault():a.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=bb;var a=this.originalEvent;if(!a)return;a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=bb,this.stopPropagation()},isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba},p.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(a,b){p.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj,g=f.selector;if(!e||e!==d&&!p.contains(d,e))a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b;return c}}}),p.support.submitBubbles||(p.event.special.submit={setup:function(){if(p.nodeName(this,\"form\"))return!1;p.event.add(this,\"click._submit keypress._submit\",function(a){var c=a.target,d=p.nodeName(c,\"input\")||p.nodeName(c,\"button\")?c.form:b;d&&!p._data(d,\"_submit_attached\")&&(p.event.add(d,\"submit._submit\",function(a){a._submit_bubble=!0}),p._data(d,\"_submit_attached\",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&p.event.simulate(\"submit\",this.parentNode,a,!0))},teardown:function(){if(p.nodeName(this,\"form\"))return!1;p.event.remove(this,\"._submit\")}}),p.support.changeBubbles||(p.event.special.change={setup:function(){if(V.test(this.nodeName)){if(this.type===\"checkbox\"||this.type===\"radio\")p.event.add(this,\"propertychange._change\",function(a){a.originalEvent.propertyName===\"checked\"&&(this._just_changed=!0)}),p.event.add(this,\"click._change\",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),p.event.simulate(\"change\",this,a,!0)});return!1}p.event.add(this,\"beforeactivate._change\",function(a){var b=a.target;V.test(b.nodeName)&&!p._data(b,\"_change_attached\")&&(p.event.add(b,\"change._change\",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&p.event.simulate(\"change\",this.parentNode,a,!0)}),p._data(b,\"_change_attached\",!0))})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!==\"radio\"&&b.type!==\"checkbox\")return a.handleObj.handler.apply(this,arguments)},teardown:function(){return p.event.remove(this,\"._change\"),!V.test(this.nodeName)}}),p.support.focusinBubbles||p.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=0,d=function(a){p.event.simulate(b,a.target,p.event.fix(a),!0)};p.event.special[b]={setup:function(){c++===0&&e.addEventListener(a,d,!0)},teardown:function(){--c===0&&e.removeEventListener(a,d,!0)}}}),p.fn.extend({on:function(a,c,d,e,f){var g,h;if(typeof a==\"object\"){typeof c!=\"string\"&&(d=d||c,c=b);for(h in a)this.on(h,c,d,a[h],f);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c==\"string\"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=ba;else if(!e)return this;return f===1&&(g=e,e=function(a){return p().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=p.guid++)),this.each(function(){p.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){var e,f;if(a&&a.preventDefault&&a.handleObj)return e=a.handleObj,p(a.delegateTarget).off(e.namespace?e.origType+\".\"+e.namespace:e.origType,e.selector,e.handler),this;if(typeof a==\"object\"){for(f in a)this.off(f,c,a[f]);return this}if(c===!1||typeof c==\"function\")d=c,c=b;return d===!1&&(d=ba),this.each(function(){p.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){return p(this.context).on(a,this.selector,b,c),this},die:function(a,b){return p(this.context).off(a,this.selector||\"**\",b),this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length===1?this.off(a,\"**\"):this.off(b,a||\"**\",c)},trigger:function(a,b){return this.each(function(){p.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return p.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||p.guid++,d=0,e=function(c){var e=(p._data(this,\"lastToggle\"+a.guid)||0)%d;return p._data(this,\"lastToggle\"+a.guid,e+1),c.preventDefault(),b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),p.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){p.fn[b]=function(a,c){return c==null&&(c=a,a=null),arguments.length>0?this.on(b,null,a,c):this.trigger(b)},Y.test(b)&&(p.event.fixHooks[b]=p.event.keyHooks),Z.test(b)&&(p.event.fixHooks[b]=p.event.mouseHooks)}),function(a,b){function bc(a,b,c,d){c=c||[],b=b||r;var e,f,i,j,k=b.nodeType;if(!a||typeof a!=\"string\")return c;if(k!==1&&k!==9)return[];i=g(b);if(!i&&!d)if(e=P.exec(a))if(j=e[1]){if(k===9){f=b.getElementById(j);if(!f||!f.parentNode)return c;if(f.id===j)return c.push(f),c}else if(b.ownerDocument&&(f=b.ownerDocument.getElementById(j))&&h(b,f)&&f.id===j)return c.push(f),c}else{if(e[2])return w.apply(c,x.call(b.getElementsByTagName(a),0)),c;if((j=e[3])&&_&&b.getElementsByClassName)return w.apply(c,x.call(b.getElementsByClassName(j),0)),c}return bp(a.replace(L,\"$1\"),b,c,d,i)}function bd(a){return function(b){var c=b.nodeName.toLowerCase();return c===\"input\"&&b.type===a}}function be(a){return function(b){var c=b.nodeName.toLowerCase();return(c===\"input\"||c===\"button\")&&b.type===a}}function bf(a){return z(function(b){return b=+b,z(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function bg(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}function bh(a,b){var c,d,f,g,h,i,j,k=C[o][a];if(k)return b?0:k.slice(0);h=a,i=[],j=e.preFilter;while(h){if(!c||(d=M.exec(h)))d&&(h=h.slice(d[0].length)),i.push(f=[]);c=!1;if(d=N.exec(h))f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=d[0].replace(L,\" \");for(g in e.filter)(d=W[g].exec(h))&&(!j[g]||(d=j[g](d,r,!0)))&&(f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=g,c.matches=d);if(!c)break}return b?h.length:h?bc.error(a):C(a,i).slice(0)}function bi(a,b,d){var e=b.dir,f=d&&b.dir===\"parentNode\",g=u++;return b.first?function(b,c,d){while(b=b[e])if(f||b.nodeType===1)return a(b,c,d)}:function(b,d,h){if(!h){var i,j=t+\" \"+g+\" \",k=j+c;while(b=b[e])if(f||b.nodeType===1){if((i=b[o])===k)return b.sizset;if(typeof i==\"string\"&&i.indexOf(j)===0){if(b.sizset)return b}else{b[o]=k;if(a(b,d,h))return b.sizset=!0,b;b.sizset=!1}}}else while(b=b[e])if(f||b.nodeType===1)if(a(b,d,h))return b}}function bj(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function bk(a,b,c,d,e){var f,g=[],h=0,i=a.length,j=b!=null;for(;h<i;h++)if(f=a[h])if(!c||c(f,d,e))g.push(f),j&&b.push(h);return g}function bl(a,b,c,d,e,f){return d&&!d[o]&&(d=bl(d)),e&&!e[o]&&(e=bl(e,f)),z(function(f,g,h,i){if(f&&e)return;var j,k,l,m=[],n=[],o=g.length,p=f||bo(b||\"*\",h.nodeType?[h]:h,[],f),q=a&&(f||!b)?bk(p,m,a,h,i):p,r=c?e||(f?a:o||d)?[]:g:q;c&&c(q,r,h,i);if(d){l=bk(r,n),d(l,[],h,i),j=l.length;while(j--)if(k=l[j])r[n[j]]=!(q[n[j]]=k)}if(f){j=a&&r.length;while(j--)if(k=r[j])f[m[j]]=!(g[m[j]]=k)}else r=bk(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):w.apply(g,r)})}function bm(a){var b,c,d,f=a.length,g=e.relative[a[0].type],h=g||e.relative[\" \"],i=g?1:0,j=bi(function(a){return a===b},h,!0),k=bi(function(a){return y.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==l)||((b=c).nodeType?j(a,c,d):k(a,c,d))}];for(;i<f;i++)if(c=e.relative[a[i].type])m=[bi(bj(m),c)];else{c=e.filter[a[i].type].apply(null,a[i].matches);if(c[o]){d=++i;for(;d<f;d++)if(e.relative[a[d].type])break;return bl(i>1&&bj(m),i>1&&a.slice(0,i-1).join(\"\").replace(L,\"$1\"),c,i<d&&bm(a.slice(i,d)),d<f&&bm(a=a.slice(d)),d<f&&a.join(\"\"))}m.push(c)}return bj(m)}function bn(a,b){var d=b.length>0,f=a.length>0,g=function(h,i,j,k,m){var n,o,p,q=[],s=0,u=\"0\",x=h&&[],y=m!=null,z=l,A=h||f&&e.find.TAG(\"*\",m&&i.parentNode||i),B=t+=z==null?1:Math.E;y&&(l=i!==r&&i,c=g.el);for(;(n=A[u])!=null;u++){if(f&&n){for(o=0;p=a[o];o++)if(p(n,i,j)){k.push(n);break}y&&(t=B,c=++g.el)}d&&((n=!p&&n)&&s--,h&&x.push(n))}s+=u;if(d&&u!==s){for(o=0;p=b[o];o++)p(x,q,i,j);if(h){if(s>0)while(u--)!x[u]&&!q[u]&&(q[u]=v.call(k));q=bk(q)}w.apply(k,q),y&&!h&&q.length>0&&s+b.length>1&&bc.uniqueSort(k)}return y&&(t=B,l=z),x};return g.el=0,d?z(g):g}function bo(a,b,c,d){var e=0,f=b.length;for(;e<f;e++)bc(a,b[e],c,d);return c}function bp(a,b,c,d,f){var g,h,j,k,l,m=bh(a),n=m.length;if(!d&&m.length===1){h=m[0]=m[0].slice(0);if(h.length>2&&(j=h[0]).type===\"ID\"&&b.nodeType===9&&!f&&e.relative[h[1].type]){b=e.find.ID(j.matches[0].replace(V,\"\"),b,f)[0];if(!b)return c;a=a.slice(h.shift().length)}for(g=W.POS.test(a)?-1:h.length-1;g>=0;g--){j=h[g];if(e.relative[k=j.type])break;if(l=e.find[k])if(d=l(j.matches[0].replace(V,\"\"),R.test(h[0].type)&&b.parentNode||b,f)){h.splice(g,1),a=d.length&&h.join(\"\");if(!a)return w.apply(c,x.call(d,0)),c;break}}}return i(a,m)(d,b,f,c,R.test(a)),c}function bq(){}var c,d,e,f,g,h,i,j,k,l,m=!0,n=\"undefined\",o=(\"sizcache\"+Math.random()).replace(\".\",\"\"),q=String,r=a.document,s=r.documentElement,t=0,u=0,v=[].pop,w=[].push,x=[].slice,y=[].indexOf||function(a){var b=0,c=this.length;for(;b<c;b++)if(this[b]===a)return b;return-1},z=function(a,b){return a[o]=b==null||b,a},A=function(){var a={},b=[];return z(function(c,d){return b.push(c)>e.cacheLength&&delete a[b.shift()],a[c]=d},a)},B=A(),C=A(),D=A(),E=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",F=\"(?:\\\\\\\\.|[-\\\\w]|[^\\\\x00-\\\\xa0])+\",G=F.replace(\"w\",\"w#\"),H=\"([*^$|!~]?=)\",I=\"\\\\[\"+E+\"*(\"+F+\")\"+E+\"*(?:\"+H+E+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+G+\")|)|)\"+E+\"*\\\\]\",J=\":(\"+F+\")(?:\\\\((?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\2|([^()[\\\\]]*|(?:(?:\"+I+\")|[^:]|\\\\\\\\.)*|.*))\\\\)|)\",K=\":(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+E+\"*((?:-\\\\d)?\\\\d*)\"+E+\"*\\\\)|)(?=[^-]|$)\",L=new RegExp(\"^\"+E+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+E+\"+$\",\"g\"),M=new RegExp(\"^\"+E+\"*,\"+E+\"*\"),N=new RegExp(\"^\"+E+\"*([\\\\x20\\\\t\\\\r\\\\n\\\\f>+~])\"+E+\"*\"),O=new RegExp(J),P=/^(?:#([\\w\\-]+)|(\\w+)|\\.([\\w\\-]+))$/,Q=/^:not/,R=/[\\x20\\t\\r\\n\\f]*[+~]/,S=/:not\\($/,T=/h\\d/i,U=/input|select|textarea|button/i,V=/\\\\(?!\\\\)/g,W={ID:new RegExp(\"^#(\"+F+\")\"),CLASS:new RegExp(\"^\\\\.(\"+F+\")\"),NAME:new RegExp(\"^\\\\[name=['\\\"]?(\"+F+\")['\\\"]?\\\\]\"),TAG:new RegExp(\"^(\"+F.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+I),PSEUDO:new RegExp(\"^\"+J),POS:new RegExp(K,\"i\"),CHILD:new RegExp(\"^:(only|nth|first|last)-child(?:\\\\(\"+E+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+E+\"*(?:([+-]|)\"+E+\"*(\\\\d+)|))\"+E+\"*\\\\)|)\",\"i\"),needsContext:new RegExp(\"^\"+E+\"*[>+~]|\"+K,\"i\")},X=function(a){var b=r.createElement(\"div\");try{return a(b)}catch(c){return!1}finally{b=null}},Y=X(function(a){return a.appendChild(r.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),Z=X(function(a){return a.innerHTML=\"<a href='#'></a>\",a.firstChild&&typeof a.firstChild.getAttribute!==n&&a.firstChild.getAttribute(\"href\")===\"#\"}),$=X(function(a){a.innerHTML=\"<select></select>\";var b=typeof a.lastChild.getAttribute(\"multiple\");return b!==\"boolean\"&&b!==\"string\"}),_=X(function(a){return a.innerHTML=\"<div class='hidden e'></div><div class='hidden'></div>\",!a.getElementsByClassName||!a.getElementsByClassName(\"e\").length?!1:(a.lastChild.className=\"e\",a.getElementsByClassName(\"e\").length===2)}),ba=X(function(a){a.id=o+0,a.innerHTML=\"<a name='\"+o+\"'></a><div name='\"+o+\"'></div>\",s.insertBefore(a,s.firstChild);var b=r.getElementsByName&&r.getElementsByName(o).length===2+r.getElementsByName(o+0).length;return d=!r.getElementById(o),s.removeChild(a),b});try{x.call(s.childNodes,0)[0].nodeType}catch(bb){x=function(a){var b,c=[];for(;b=this[a];a++)c.push(b);return c}}bc.matches=function(a,b){return bc(a,null,null,b)},bc.matchesSelector=function(a,b){return bc(b,null,null,[a]).length>0},f=bc.getText=function(a){var b,c=\"\",d=0,e=a.nodeType;if(e){if(e===1||e===9||e===11){if(typeof a.textContent==\"string\")return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=f(a)}else if(e===3||e===4)return a.nodeValue}else for(;b=a[d];d++)c+=f(b);return c},g=bc.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!==\"HTML\":!1},h=bc.contains=s.contains?function(a,b){var c=a.nodeType===9?a.documentElement:a,d=b&&b.parentNode;return a===d||!!(d&&d.nodeType===1&&c.contains&&c.contains(d))}:s.compareDocumentPosition?function(a,b){return b&&!!(a.compareDocumentPosition(b)&16)}:function(a,b){while(b=b.parentNode)if(b===a)return!0;return!1},bc.attr=function(a,b){var c,d=g(a);return d||(b=b.toLowerCase()),(c=e.attrHandle[b])?c(a):d||$?a.getAttribute(b):(c=a.getAttributeNode(b),c?typeof a[b]==\"boolean\"?a[b]?b:null:c.specified?c.value:null:null)},e=bc.selectors={cacheLength:50,createPseudo:z,match:W,attrHandle:Z?{}:{href:function(a){return a.getAttribute(\"href\",2)},type:function(a){return a.getAttribute(\"type\")}},find:{ID:d?function(a,b,c){if(typeof b.getElementById!==n&&!c){var d=b.getElementById(a);return d&&d.parentNode?[d]:[]}}:function(a,c,d){if(typeof c.getElementById!==n&&!d){var e=c.getElementById(a);return e?e.id===a||typeof e.getAttributeNode!==n&&e.getAttributeNode(\"id\").value===a?[e]:b:[]}},TAG:Y?function(a,b){if(typeof b.getElementsByTagName!==n)return b.getElementsByTagName(a)}:function(a,b){var c=b.getElementsByTagName(a);if(a===\"*\"){var d,e=[],f=0;for(;d=c[f];f++)d.nodeType===1&&e.push(d);return e}return c},NAME:ba&&function(a,b){if(typeof b.getElementsByName!==n)return b.getElementsByName(name)},CLASS:_&&function(a,b,c){if(typeof b.getElementsByClassName!==n&&!c)return b.getElementsByClassName(a)}},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(V,\"\"),a[3]=(a[4]||a[5]||\"\").replace(V,\"\"),a[2]===\"~=\"&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),a[1]===\"nth\"?(a[2]||bc.error(a[0]),a[3]=+(a[3]?a[4]+(a[5]||1):2*(a[2]===\"even\"||a[2]===\"odd\")),a[4]=+(a[6]+a[7]||a[2]===\"odd\")):a[2]&&bc.error(a[0]),a},PSEUDO:function(a){var b,c;if(W.CHILD.test(a[0]))return null;if(a[3])a[2]=a[3];else if(b=a[4])O.test(b)&&(c=bh(b,!0))&&(c=b.indexOf(\")\",b.length-c)-b.length)&&(b=b.slice(0,c),a[0]=a[0].slice(0,c)),a[2]=b;return a.slice(0,3)}},filter:{ID:d?function(a){return a=a.replace(V,\"\"),function(b){return b.getAttribute(\"id\")===a}}:function(a){return a=a.replace(V,\"\"),function(b){var c=typeof b.getAttributeNode!==n&&b.getAttributeNode(\"id\");return c&&c.value===a}},TAG:function(a){return a===\"*\"?function(){return!0}:(a=a.replace(V,\"\").toLowerCase(),function(b){return b.nodeName&&b.nodeName.toLowerCase()===a})},CLASS:function(a){var b=B[o][a];return b||(b=B(a,new RegExp(\"(^|\"+E+\")\"+a+\"(\"+E+\"|$)\"))),function(a){return b.test(a.className||typeof a.getAttribute!==n&&a.getAttribute(\"class\")||\"\")}},ATTR:function(a,b,c){return function(d,e){var f=bc.attr(d,a);return f==null?b===\"!=\":b?(f+=\"\",b===\"=\"?f===c:b===\"!=\"?f!==c:b===\"^=\"?c&&f.indexOf(c)===0:b===\"*=\"?c&&f.indexOf(c)>-1:b===\"$=\"?c&&f.substr(f.length-c.length)===c:b===\"~=\"?(\" \"+f+\" \").indexOf(c)>-1:b===\"|=\"?f===c||f.substr(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d){return a===\"nth\"?function(a){var b,e,f=a.parentNode;if(c===1&&d===0)return!0;if(f){e=0;for(b=f.firstChild;b;b=b.nextSibling)if(b.nodeType===1){e++;if(a===b)break}}return e-=d,e===c||e%c===0&&e/c>=0}:function(b){var c=b;switch(a){case\"only\":case\"first\":while(c=c.previousSibling)if(c.nodeType===1)return!1;if(a===\"first\")return!0;c=b;case\"last\":while(c=c.nextSibling)if(c.nodeType===1)return!1;return!0}}},PSEUDO:function(a,b){var c,d=e.pseudos[a]||e.setFilters[a.toLowerCase()]||bc.error(\"unsupported pseudo: \"+a);return d[o]?d(b):d.length>1?(c=[a,a,\"\",b],e.setFilters.hasOwnProperty(a.toLowerCase())?z(function(a,c){var e,f=d(a,b),g=f.length;while(g--)e=y.call(a,f[g]),a[e]=!(c[e]=f[g])}):function(a){return d(a,0,c)}):d}},pseudos:{not:z(function(a){var b=[],c=[],d=i(a.replace(L,\"$1\"));return d[o]?z(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)if(f=g[h])a[h]=!(b[h]=f)}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:z(function(a){return function(b){return bc(a,b).length>0}}),contains:z(function(a){return function(b){return(b.textContent||b.innerText||f(b)).indexOf(a)>-1}}),enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return b===\"input\"&&!!a.checked||b===\"option\"&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},parent:function(a){return!e.pseudos.empty(a)},empty:function(a){var b;a=a.firstChild;while(a){if(a.nodeName>\"@\"||(b=a.nodeType)===3||b===4)return!1;a=a.nextSibling}return!0},header:function(a){return T.test(a.nodeName)},text:function(a){var b,c;return a.nodeName.toLowerCase()===\"input\"&&(b=a.type)===\"text\"&&((c=a.getAttribute(\"type\"))==null||c.toLowerCase()===b)},radio:bd(\"radio\"),checkbox:bd(\"checkbox\"),file:bd(\"file\"),password:bd(\"password\"),image:bd(\"image\"),submit:be(\"submit\"),reset:be(\"reset\"),button:function(a){var b=a.nodeName.toLowerCase();return b===\"input\"&&a.type===\"button\"||b===\"button\"},input:function(a){return U.test(a.nodeName)},focus:function(a){var b=a.ownerDocument;return a===b.activeElement&&(!b.hasFocus||b.hasFocus())&&(!!a.type||!!a.href)},active:function(a){return a===a.ownerDocument.activeElement},first:bf(function(a,b,c){return[0]}),last:bf(function(a,b,c){return[b-1]}),eq:bf(function(a,b,c){return[c<0?c+b:c]}),even:bf(function(a,b,c){for(var d=0;d<b;d+=2)a.push(d);return a}),odd:bf(function(a,b,c){for(var d=1;d<b;d+=2)a.push(d);return a}),lt:bf(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:bf(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},j=s.compareDocumentPosition?function(a,b){return a===b?(k=!0,0):(!a.compareDocumentPosition||!b.compareDocumentPosition?a.compareDocumentPosition:a.compareDocumentPosition(b)&4)?-1:1}:function(a,b){if(a===b)return k=!0,0;if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,h=b.parentNode,i=g;if(g===h)return bg(a,b);if(!g)return-1;if(!h)return 1;while(i)e.unshift(i),i=i.parentNode;i=h;while(i)f.unshift(i),i=i.parentNode;c=e.length,d=f.length;for(var j=0;j<c&&j<d;j++)if(e[j]!==f[j])return bg(e[j],f[j]);return j===c?bg(a,f[j],-1):bg(e[j],b,1)},[0,0].sort(j),m=!k,bc.uniqueSort=function(a){var b,c=1;k=m,a.sort(j);if(k)for(;b=a[c];c++)b===a[c-1]&&a.splice(c--,1);return a},bc.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},i=bc.compile=function(a,b){var c,d=[],e=[],f=D[o][a];if(!f){b||(b=bh(a)),c=b.length;while(c--)f=bm(b[c]),f[o]?d.push(f):e.push(f);f=D(a,bn(e,d))}return f},r.querySelectorAll&&function(){var a,b=bp,c=/'|\\\\/g,d=/\\=[\\x20\\t\\r\\n\\f]*([^'\"\\]]*)[\\x20\\t\\r\\n\\f]*\\]/g,e=[\":focus\"],f=[\":active\",\":focus\"],h=s.matchesSelector||s.mozMatchesSelector||s.webkitMatchesSelector||s.oMatchesSelector||s.msMatchesSelector;X(function(a){a.innerHTML=\"<select><option selected=''></option></select>\",a.querySelectorAll(\"[selected]\").length||e.push(\"\\\\[\"+E+\"*(?:checked|disabled|ismap|multiple|readonly|selected|value)\"),a.querySelectorAll(\":checked\").length||e.push(\":checked\")}),X(function(a){a.innerHTML=\"<p test=''></p>\",a.querySelectorAll(\"[test^='']\").length&&e.push(\"[*^$]=\"+E+\"*(?:\\\"\\\"|'')\"),a.innerHTML=\"<input type='hidden'/>\",a.querySelectorAll(\":enabled\").length||e.push(\":enabled\",\":disabled\")}),e=new RegExp(e.join(\"|\")),bp=function(a,d,f,g,h){if(!g&&!h&&(!e||!e.test(a))){var i,j,k=!0,l=o,m=d,n=d.nodeType===9&&a;if(d.nodeType===1&&d.nodeName.toLowerCase()!==\"object\"){i=bh(a),(k=d.getAttribute(\"id\"))?l=k.replace(c,\"\\\\$&\"):d.setAttribute(\"id\",l),l=\"[id='\"+l+\"'] \",j=i.length;while(j--)i[j]=l+i[j].join(\"\");m=R.test(a)&&d.parentNode||d,n=i.join(\",\")}if(n)try{return w.apply(f,x.call(m.querySelectorAll(n),0)),f}catch(p){}finally{k||d.removeAttribute(\"id\")}}return b(a,d,f,g,h)},h&&(X(function(b){a=h.call(b,\"div\");try{h.call(b,\"[test!='']:sizzle\"),f.push(\"!=\",J)}catch(c){}}),f=new RegExp(f.join(\"|\")),bc.matchesSelector=function(b,c){c=c.replace(d,\"='$1']\");if(!g(b)&&!f.test(c)&&(!e||!e.test(c)))try{var i=h.call(b,c);if(i||a||b.document&&b.document.nodeType!==11)return i}catch(j){}return bc(c,null,null,[b]).length>0})}(),e.pseudos.nth=e.pseudos.eq,e.filters=bq.prototype=e.pseudos,e.setFilters=new bq,bc.attr=p.attr,p.find=bc,p.expr=bc.selectors,p.expr[\":\"]=p.expr.pseudos,p.unique=bc.uniqueSort,p.text=bc.getText,p.isXMLDoc=bc.isXML,p.contains=bc.contains}(a);var bc=/Until$/,bd=/^(?:parents|prev(?:Until|All))/,be=/^.[^:#\\[\\.,]*$/,bf=p.expr.match.needsContext,bg={children:!0,contents:!0,next:!0,prev:!0};p.fn.extend({find:function(a){var b,c,d,e,f,g,h=this;if(typeof a!=\"string\")return p(a).filter(function(){for(b=0,c=h.length;b<c;b++)if(p.contains(h[b],this))return!0});g=this.pushStack(\"\",\"find\",a);for(b=0,c=this.length;b<c;b++){d=g.length,p.find(a,this[b],g);if(b>0)for(e=d;e<g.length;e++)for(f=0;f<d;f++)if(g[f]===g[e]){g.splice(e--,1);break}}return g},has:function(a){var b,c=p(a,this),d=c.length;return this.filter(function(){for(b=0;b<d;b++)if(p.contains(this,c[b]))return!0})},not:function(a){return this.pushStack(bj(this,a,!1),\"not\",a)},filter:function(a){return this.pushStack(bj(this,a,!0),\"filter\",a)},is:function(a){return!!a&&(typeof a==\"string\"?bf.test(a)?p(a,this.context).index(this[0])>=0:p.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c,d=0,e=this.length,f=[],g=bf.test(a)||typeof a!=\"string\"?p(a,b||this.context):0;for(;d<e;d++){c=this[d];while(c&&c.ownerDocument&&c!==b&&c.nodeType!==11){if(g?g.index(c)>-1:p.find.matchesSelector(c,a)){f.push(c);break}c=c.parentNode}}return f=f.length>1?p.unique(f):f,this.pushStack(f,\"closest\",a)},index:function(a){return a?typeof a==\"string\"?p.inArray(this[0],p(a)):p.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(a,b){var c=typeof a==\"string\"?p(a,b):p.makeArray(a&&a.nodeType?[a]:a),d=p.merge(this.get(),c);return this.pushStack(bh(c[0])||bh(d[0])?d:p.unique(d))},addBack:function(a){return this.add(a==null?this.prevObject:this.prevObject.filter(a))}}),p.fn.andSelf=p.fn.addBack,p.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return p.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return p.dir(a,\"parentNode\",c)},next:function(a){return bi(a,\"nextSibling\")},prev:function(a){return bi(a,\"previousSibling\")},nextAll:function(a){return p.dir(a,\"nextSibling\")},prevAll:function(a){return p.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return p.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return p.dir(a,\"previousSibling\",c)},siblings:function(a){return p.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return p.sibling(a.firstChild)},contents:function(a){return p.nodeName(a,\"iframe\")?a.contentDocument||a.contentWindow.document:p.merge([],a.childNodes)}},function(a,b){p.fn[a]=function(c,d){var e=p.map(this,b,c);return bc.test(a)||(d=c),d&&typeof d==\"string\"&&(e=p.filter(d,e)),e=this.length>1&&!bg[a]?p.unique(e):e,this.length>1&&bd.test(a)&&(e=e.reverse()),this.pushStack(e,a,k.call(arguments).join(\",\"))}}),p.extend({filter:function(a,b,c){return c&&(a=\":not(\"+a+\")\"),b.length===1?p.find.matchesSelector(b[0],a)?[b[0]]:[]:p.find.matches(a,b)},dir:function(a,c,d){var e=[],f=a[c];while(f&&f.nodeType!==9&&(d===b||f.nodeType!==1||!p(f).is(d)))f.nodeType===1&&e.push(f),f=f[c];return e},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var bl=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",bm=/ jQuery\\d+=\"(?:null|\\d+)\"/g,bn=/^\\s+/,bo=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bp=/<([\\w:]+)/,bq=/<tbody/i,br=/<|&#?\\w+;/,bs=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,bu=new RegExp(\"<(?:\"+bl+\")[\\\\s/>]\",\"i\"),bv=/^(?:checkbox|radio)$/,bw=/checked\\s*(?:[^=]|=\\s*.checked.)/i,bx=/\\/(java|ecma)script/i,by=/^\\s*<!(?:\\[CDATA\\[|\\-\\-)|[\\]\\-]{2}>\\s*$/g,bz={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],area:[1,\"<map>\",\"</map>\"],_default:[0,\"\",\"\"]},bA=bk(e),bB=bA.appendChild(e.createElement(\"div\"));bz.optgroup=bz.option,bz.tbody=bz.tfoot=bz.colgroup=bz.caption=bz.thead,bz.th=bz.td,p.support.htmlSerialize||(bz._default=[1,\"X<div>\",\"</div>\"]),p.fn.extend({text:function(a){return p.access(this,function(a){return a===b?p.text(this):this.empty().append((this[0]&&this[0].ownerDocument||e).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(p.isFunction(a))return this.each(function(b){p(this).wrapAll(a.call(this,b))});if(this[0]){var b=p(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return p.isFunction(a)?this.each(function(b){p(this).wrapInner(a.call(this,b))}):this.each(function(){var b=p(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=p.isFunction(a);return this.each(function(c){p(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){p.nodeName(this,\"body\")||p(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(a,this.firstChild)})},before:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(a,this),\"before\",this.selector)}},after:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(this,a),\"after\",this.selector)}},remove:function(a,b){var c,d=0;for(;(c=this[d])!=null;d++)if(!a||p.filter(a,[c]).length)!b&&c.nodeType===1&&(p.cleanData(c.getElementsByTagName(\"*\")),p.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c);return this},empty:function(){var a,b=0;for(;(a=this[b])!=null;b++){a.nodeType===1&&p.cleanData(a.getElementsByTagName(\"*\"));while(a.firstChild)a.removeChild(a.firstChild)}return this},clone:function(a,b){return a=a==null?!1:a,b=b==null?a:b,this.map(function(){return p.clone(this,a,b)})},html:function(a){return p.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(bm,\"\"):b;if(typeof a==\"string\"&&!bs.test(a)&&(p.support.htmlSerialize||!bu.test(a))&&(p.support.leadingWhitespace||!bn.test(a))&&!bz[(bp.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(bo,\"<$1></$2>\");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(p.cleanData(c.getElementsByTagName(\"*\")),c.innerHTML=a);c=0}catch(f){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){return bh(this[0])?this.length?this.pushStack(p(p.isFunction(a)?a():a),\"replaceWith\",a):this:p.isFunction(a)?this.each(function(b){var c=p(this),d=c.html();c.replaceWith(a.call(this,b,d))}):(typeof a!=\"string\"&&(a=p(a).detach()),this.each(function(){var b=this.nextSibling,c=this.parentNode;p(this).remove(),b?p(b).before(a):p(c).append(a)}))},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){a=[].concat.apply([],a);var e,f,g,h,i=0,j=a[0],k=[],l=this.length;if(!p.support.checkClone&&l>1&&typeof j==\"string\"&&bw.test(j))return this.each(function(){p(this).domManip(a,c,d)});if(p.isFunction(j))return this.each(function(e){var f=p(this);a[0]=j.call(this,e,c?f.html():b),f.domManip(a,c,d)});if(this[0]){e=p.buildFragment(a,this,k),g=e.fragment,f=g.firstChild,g.childNodes.length===1&&(g=f);if(f){c=c&&p.nodeName(f,\"tr\");for(h=e.cacheable||l-1;i<l;i++)d.call(c&&p.nodeName(this[i],\"table\")?bC(this[i],\"tbody\"):this[i],i===h?g:p.clone(g,!0,!0))}g=f=null,k.length&&p.each(k,function(a,b){b.src?p.ajax?p.ajax({url:b.src,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0}):p.error(\"no ajax\"):p.globalEval((b.text||b.textContent||b.innerHTML||\"\").replace(by,\"\")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),p.buildFragment=function(a,c,d){var f,g,h,i=a[0];return c=c||e,c=!c.nodeType&&c[0]||c,c=c.ownerDocument||c,a.length===1&&typeof i==\"string\"&&i.length<512&&c===e&&i.charAt(0)===\"<\"&&!bt.test(i)&&(p.support.checkClone||!bw.test(i))&&(p.support.html5Clone||!bu.test(i))&&(g=!0,f=p.fragments[i],h=f!==b),f||(f=c.createDocumentFragment(),p.clean(a,c,f,d),g&&(p.fragments[i]=h&&f)),{fragment:f,cacheable:g}},p.fragments={},p.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){p.fn[a]=function(c){var d,e=0,f=[],g=p(c),h=g.length,i=this.length===1&&this[0].parentNode;if((i==null||i&&i.nodeType===11&&i.childNodes.length===1)&&h===1)return g[b](this[0]),this;for(;e<h;e++)d=(e>0?this.clone(!0):this).get(),p(g[e])[b](d),f=f.concat(d);return this.pushStack(f,a,g.selector)}}),p.extend({clone:function(a,b,c){var d,e,f,g;p.support.html5Clone||p.isXMLDoc(a)||!bu.test(\"<\"+a.nodeName+\">\")?g=a.cloneNode(!0):(bB.innerHTML=a.outerHTML,bB.removeChild(g=bB.firstChild));if((!p.support.noCloneEvent||!p.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!p.isXMLDoc(a)){bE(a,g),d=bF(a),e=bF(g);for(f=0;d[f];++f)e[f]&&bE(d[f],e[f])}if(b){bD(a,g);if(c){d=bF(a),e=bF(g);for(f=0;d[f];++f)bD(d[f],e[f])}}return d=e=null,g},clean:function(a,b,c,d){var f,g,h,i,j,k,l,m,n,o,q,r,s=b===e&&bA,t=[];if(!b||typeof b.createDocumentFragment==\"undefined\")b=e;for(f=0;(h=a[f])!=null;f++){typeof h==\"number\"&&(h+=\"\");if(!h)continue;if(typeof h==\"string\")if(!br.test(h))h=b.createTextNode(h);else{s=s||bk(b),l=b.createElement(\"div\"),s.appendChild(l),h=h.replace(bo,\"<$1></$2>\"),i=(bp.exec(h)||[\"\",\"\"])[1].toLowerCase(),j=bz[i]||bz._default,k=j[0],l.innerHTML=j[1]+h+j[2];while(k--)l=l.lastChild;if(!p.support.tbody){m=bq.test(h),n=i===\"table\"&&!m?l.firstChild&&l.firstChild.childNodes:j[1]===\"<table>\"&&!m?l.childNodes:[];for(g=n.length-1;g>=0;--g)p.nodeName(n[g],\"tbody\")&&!n[g].childNodes.length&&n[g].parentNode.removeChild(n[g])}!p.support.leadingWhitespace&&bn.test(h)&&l.insertBefore(b.createTextNode(bn.exec(h)[0]),l.firstChild),h=l.childNodes,l.parentNode.removeChild(l)}h.nodeType?t.push(h):p.merge(t,h)}l&&(h=l=s=null);if(!p.support.appendChecked)for(f=0;(h=t[f])!=null;f++)p.nodeName(h,\"input\")?bG(h):typeof h.getElementsByTagName!=\"undefined\"&&p.grep(h.getElementsByTagName(\"input\"),bG);if(c){q=function(a){if(!a.type||bx.test(a.type))return d?d.push(a.parentNode?a.parentNode.removeChild(a):a):c.appendChild(a)};for(f=0;(h=t[f])!=null;f++)if(!p.nodeName(h,\"script\")||!q(h))c.appendChild(h),typeof h.getElementsByTagName!=\"undefined\"&&(r=p.grep(p.merge([],h.getElementsByTagName(\"script\")),q),t.splice.apply(t,[f+1,0].concat(r)),f+=r.length)}return t},cleanData:function(a,b){var c,d,e,f,g=0,h=p.expando,i=p.cache,j=p.support.deleteExpando,k=p.event.special;for(;(e=a[g])!=null;g++)if(b||p.acceptData(e)){d=e[h],c=d&&i[d];if(c){if(c.events)for(f in c.events)k[f]?p.event.remove(e,f):p.removeEvent(e,f,c.handle);i[d]&&(delete i[d],j?delete e[h]:e.removeAttribute?e.removeAttribute(h):e[h]=null,p.deletedIds.push(d))}}}}),function(){var a,b;p.uaMatch=function(a){a=a.toLowerCase();var b=/(chrome)[ \\/]([\\w.]+)/.exec(a)||/(webkit)[ \\/]([\\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(a)||/(msie) ([\\w.]+)/.exec(a)||a.indexOf(\"compatible\")<0&&/(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(a)||[];return{browser:b[1]||\"\",version:b[2]||\"0\"}},a=p.uaMatch(g.userAgent),b={},a.browser&&(b[a.browser]=!0,b.version=a.version),b.chrome?b.webkit=!0:b.webkit&&(b.safari=!0),p.browser=b,p.sub=function(){function a(b,c){return new a.fn.init(b,c)}p.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function c(c,d){return d&&d instanceof p&&!(d instanceof a)&&(d=a(d)),p.fn.init.call(this,c,d,b)},a.fn.init.prototype=a.fn;var b=a(e);return a}}();var bH,bI,bJ,bK=/alpha\\([^)]*\\)/i,bL=/opacity=([^)]*)/,bM=/^(top|right|bottom|left)$/,bN=/^(none|table(?!-c[ea]).+)/,bO=/^margin/,bP=new RegExp(\"^(\"+q+\")(.*)$\",\"i\"),bQ=new RegExp(\"^(\"+q+\")(?!px)[a-z%]+$\",\"i\"),bR=new RegExp(\"^([-+])=(\"+q+\")\",\"i\"),bS={},bT={position:\"absolute\",visibility:\"hidden\",display:\"block\"},bU={letterSpacing:0,fontWeight:400},bV=[\"Top\",\"Right\",\"Bottom\",\"Left\"],bW=[\"Webkit\",\"O\",\"Moz\",\"ms\"],bX=p.fn.toggle;p.fn.extend({css:function(a,c){return p.access(this,function(a,c,d){return d!==b?p.style(a,c,d):p.css(a,c)},a,c,arguments.length>1)},show:function(){return b$(this,!0)},hide:function(){return b$(this)},toggle:function(a,b){var c=typeof a==\"boolean\";return p.isFunction(a)&&p.isFunction(b)?bX.apply(this,arguments):this.each(function(){(c?a:bZ(this))?p(this).show():p(this).hide()})}}),p.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bH(a,\"opacity\");return c===\"\"?\"1\":c}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":p.support.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(a,c,d,e){if(!a||a.nodeType===3||a.nodeType===8||!a.style)return;var f,g,h,i=p.camelCase(c),j=a.style;c=p.cssProps[i]||(p.cssProps[i]=bY(j,i)),h=p.cssHooks[c]||p.cssHooks[i];if(d===b)return h&&\"get\"in h&&(f=h.get(a,!1,e))!==b?f:j[c];g=typeof d,g===\"string\"&&(f=bR.exec(d))&&(d=(f[1]+1)*f[2]+parseFloat(p.css(a,c)),g=\"number\");if(d==null||g===\"number\"&&isNaN(d))return;g===\"number\"&&!p.cssNumber[i]&&(d+=\"px\");if(!h||!(\"set\"in h)||(d=h.set(a,d,e))!==b)try{j[c]=d}catch(k){}},css:function(a,c,d,e){var f,g,h,i=p.camelCase(c);return c=p.cssProps[i]||(p.cssProps[i]=bY(a.style,i)),h=p.cssHooks[c]||p.cssHooks[i],h&&\"get\"in h&&(f=h.get(a,!0,e)),f===b&&(f=bH(a,c)),f===\"normal\"&&c in bU&&(f=bU[c]),d||e!==b?(g=parseFloat(f),d||p.isNumeric(g)?g||0:f):f},swap:function(a,b,c){var d,e,f={};for(e in b)f[e]=a.style[e],a.style[e]=b[e];d=c.call(a);for(e in b)a.style[e]=f[e];return d}}),a.getComputedStyle?bH=function(b,c){var d,e,f,g,h=a.getComputedStyle(b,null),i=b.style;return h&&(d=h[c],d===\"\"&&!p.contains(b.ownerDocument,b)&&(d=p.style(b,c)),bQ.test(d)&&bO.test(c)&&(e=i.width,f=i.minWidth,g=i.maxWidth,i.minWidth=i.maxWidth=i.width=d,d=h.width,i.width=e,i.minWidth=f,i.maxWidth=g)),d}:e.documentElement.currentStyle&&(bH=function(a,b){var c,d,e=a.currentStyle&&a.currentStyle[b],f=a.style;return e==null&&f&&f[b]&&(e=f[b]),bQ.test(e)&&!bM.test(b)&&(c=f.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b===\"fontSize\"?\"1em\":e,e=f.pixelLeft+\"px\",f.left=c,d&&(a.runtimeStyle.left=d)),e===\"\"?\"auto\":e}),p.each([\"height\",\"width\"],function(a,b){p.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth===0&&bN.test(bH(a,\"display\"))?p.swap(a,bT,function(){return cb(a,b,d)}):cb(a,b,d)},set:function(a,c,d){return b_(a,c,d?ca(a,b,d,p.support.boxSizing&&p.css(a,\"boxSizing\")===\"border-box\"):0)}}}),p.support.opacity||(p.cssHooks.opacity={get:function(a,b){return bL.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":b?\"1\":\"\"},set:function(a,b){var c=a.style,d=a.currentStyle,e=p.isNumeric(b)?\"alpha(opacity=\"+b*100+\")\":\"\",f=d&&d.filter||c.filter||\"\";c.zoom=1;if(b>=1&&p.trim(f.replace(bK,\"\"))===\"\"&&c.removeAttribute){c.removeAttribute(\"filter\");if(d&&!d.filter)return}c.filter=bK.test(f)?f.replace(bK,e):f+\" \"+e}}),p(function(){p.support.reliableMarginRight||(p.cssHooks.marginRight={get:function(a,b){return p.swap(a,{display:\"inline-block\"},function(){if(b)return bH(a,\"marginRight\")})}}),!p.support.pixelPosition&&p.fn.position&&p.each([\"top\",\"left\"],function(a,b){p.cssHooks[b]={get:function(a,c){if(c){var d=bH(a,b);return bQ.test(d)?p(a).position()[b]+\"px\":d}}}})}),p.expr&&p.expr.filters&&(p.expr.filters.hidden=function(a){return a.offsetWidth===0&&a.offsetHeight===0||!p.support.reliableHiddenOffsets&&(a.style&&a.style.display||bH(a,\"display\"))===\"none\"},p.expr.filters.visible=function(a){return!p.expr.filters.hidden(a)}),p.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){p.cssHooks[a+b]={expand:function(c){var d,e=typeof c==\"string\"?c.split(\" \"):[c],f={};for(d=0;d<4;d++)f[a+bV[d]+b]=e[d]||e[d-2]||e[0];return f}},bO.test(a)||(p.cssHooks[a+b].set=b_)});var cd=/%20/g,ce=/\\[\\]$/,cf=/\\r?\\n/g,cg=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,ch=/^(?:select|textarea)/i;p.fn.extend({serialize:function(){return p.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?p.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ch.test(this.nodeName)||cg.test(this.type))}).map(function(a,b){var c=p(this).val();return c==null?null:p.isArray(c)?p.map(c,function(a,c){return{name:b.name,value:a.replace(cf,\"\\r\\n\")}}):{name:b.name,value:c.replace(cf,\"\\r\\n\")}}).get()}}),p.param=function(a,c){var d,e=[],f=function(a,b){b=p.isFunction(b)?b():b==null?\"\":b,e[e.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};c===b&&(c=p.ajaxSettings&&p.ajaxSettings.traditional);if(p.isArray(a)||a.jquery&&!p.isPlainObject(a))p.each(a,function(){f(this.name,this.value)});else for(d in a)ci(d,a[d],c,f);return e.join(\"&\").replace(cd,\"+\")};var cj,ck,cl=/#.*$/,cm=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg,cn=/^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/,co=/^(?:GET|HEAD)$/,cp=/^\\/\\//,cq=/\\?/,cr=/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,cs=/([?&])_=[^&]*/,ct=/^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,cu=p.fn.load,cv={},cw={},cx=[\"*/\"]+[\"*\"];try{ck=f.href}catch(cy){ck=e.createElement(\"a\"),ck.href=\"\",ck=ck.href}cj=ct.exec(ck.toLowerCase())||[],p.fn.load=function(a,c,d){if(typeof a!=\"string\"&&cu)return cu.apply(this,arguments);if(!this.length)return this;var e,f,g,h=this,i=a.indexOf(\" \");return i>=0&&(e=a.slice(i,a.length),a=a.slice(0,i)),p.isFunction(c)?(d=c,c=b):c&&typeof c==\"object\"&&(f=\"POST\"),p.ajax({url:a,type:f,dataType:\"html\",data:c,complete:function(a,b){d&&h.each(d,g||[a.responseText,b,a])}}).done(function(a){g=arguments,h.html(e?p(\"<div>\").append(a.replace(cr,\"\")).find(e):a)}),this},p.each(\"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split(\" \"),function(a,b){p.fn[b]=function(a){return this.on(b,a)}}),p.each([\"get\",\"post\"],function(a,c){p[c]=function(a,d,e,f){return p.isFunction(d)&&(f=f||e,e=d,d=b),p.ajax({type:c,url:a,data:d,success:e,dataType:f})}}),p.extend({getScript:function(a,c){return p.get(a,b,c,\"script\")},getJSON:function(a,b,c){return p.get(a,b,c,\"json\")},ajaxSetup:function(a,b){return b?cB(a,p.ajaxSettings):(b=a,a=p.ajaxSettings),cB(a,b),a},ajaxSettings:{url:ck,isLocal:cn.test(cj[1]),global:!0,type:\"GET\",contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",processData:!0,async:!0,accepts:{xml:\"application/xml, text/xml\",html:\"text/html\",text:\"text/plain\",json:\"application/json, text/javascript\",\"*\":cx},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\"},converters:{\"* text\":a.String,\"text html\":!0,\"text json\":p.parseJSON,\"text xml\":p.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:cz(cv),ajaxTransport:cz(cw),ajax:function(a,c){function y(a,c,f,i){var k,s,t,u,w,y=c;if(v===2)return;v=2,h&&clearTimeout(h),g=b,e=i||\"\",x.readyState=a>0?4:0,f&&(u=cC(l,x,f));if(a>=200&&a<300||a===304)l.ifModified&&(w=x.getResponseHeader(\"Last-Modified\"),w&&(p.lastModified[d]=w),w=x.getResponseHeader(\"Etag\"),w&&(p.etag[d]=w)),a===304?(y=\"notmodified\",k=!0):(k=cD(l,u),y=k.state,s=k.data,t=k.error,k=!t);else{t=y;if(!y||a)y=\"error\",a<0&&(a=0)}x.status=a,x.statusText=(c||y)+\"\",k?o.resolveWith(m,[s,y,x]):o.rejectWith(m,[x,y,t]),x.statusCode(r),r=b,j&&n.trigger(\"ajax\"+(k?\"Success\":\"Error\"),[x,l,k?s:t]),q.fireWith(m,[x,y]),j&&(n.trigger(\"ajaxComplete\",[x,l]),--p.active||p.event.trigger(\"ajaxStop\"))}typeof a==\"object\"&&(c=a,a=b),c=c||{};var d,e,f,g,h,i,j,k,l=p.ajaxSetup({},c),m=l.context||l,n=m!==l&&(m.nodeType||m instanceof p)?p(m):p.event,o=p.Deferred(),q=p.Callbacks(\"once memory\"),r=l.statusCode||{},t={},u={},v=0,w=\"canceled\",x={readyState:0,setRequestHeader:function(a,b){if(!v){var c=a.toLowerCase();a=u[c]=u[c]||a,t[a]=b}return this},getAllResponseHeaders:function(){return v===2?e:null},getResponseHeader:function(a){var c;if(v===2){if(!f){f={};while(c=cm.exec(e))f[c[1].toLowerCase()]=c[2]}c=f[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){return v||(l.mimeType=a),this},abort:function(a){return a=a||w,g&&g.abort(a),y(0,a),this}};o.promise(x),x.success=x.done,x.error=x.fail,x.complete=q.add,x.statusCode=function(a){if(a){var b;if(v<2)for(b in a)r[b]=[r[b],a[b]];else b=a[x.status],x.always(b)}return this},l.url=((a||l.url)+\"\").replace(cl,\"\").replace(cp,cj[1]+\"//\"),l.dataTypes=p.trim(l.dataType||\"*\").toLowerCase().split(s),l.crossDomain==null&&(i=ct.exec(l.url.toLowerCase())||!1,l.crossDomain=i&&i.join(\":\")+(i[3]?\"\":i[1]===\"http:\"?80:443)!==cj.join(\":\")+(cj[3]?\"\":cj[1]===\"http:\"?80:443)),l.data&&l.processData&&typeof l.data!=\"string\"&&(l.data=p.param(l.data,l.traditional)),cA(cv,l,c,x);if(v===2)return x;j=l.global,l.type=l.type.toUpperCase(),l.hasContent=!co.test(l.type),j&&p.active++===0&&p.event.trigger(\"ajaxStart\");if(!l.hasContent){l.data&&(l.url+=(cq.test(l.url)?\"&\":\"?\")+l.data,delete l.data),d=l.url;if(l.cache===!1){var z=p.now(),A=l.url.replace(cs,\"$1_=\"+z);l.url=A+(A===l.url?(cq.test(l.url)?\"&\":\"?\")+\"_=\"+z:\"\")}}(l.data&&l.hasContent&&l.contentType!==!1||c.contentType)&&x.setRequestHeader(\"Content-Type\",l.contentType),l.ifModified&&(d=d||l.url,p.lastModified[d]&&x.setRequestHeader(\"If-Modified-Since\",p.lastModified[d]),p.etag[d]&&x.setRequestHeader(\"If-None-Match\",p.etag[d])),x.setRequestHeader(\"Accept\",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+(l.dataTypes[0]!==\"*\"?\", \"+cx+\"; q=0.01\":\"\"):l.accepts[\"*\"]);for(k in l.headers)x.setRequestHeader(k,l.headers[k]);if(!l.beforeSend||l.beforeSend.call(m,x,l)!==!1&&v!==2){w=\"abort\";for(k in{success:1,error:1,complete:1})x[k](l[k]);g=cA(cw,l,c,x);if(!g)y(-1,\"No Transport\");else{x.readyState=1,j&&n.trigger(\"ajaxSend\",[x,l]),l.async&&l.timeout>0&&(h=setTimeout(function(){x.abort(\"timeout\")},l.timeout));try{v=1,g.send(t,y)}catch(B){if(v<2)y(-1,B);else throw B}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var cE=[],cF=/\\?/,cG=/(=)\\?(?=&|$)|\\?\\?/,cH=p.now();p.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=cE.pop()||p.expando+\"_\"+cH++;return this[a]=!0,a}}),p.ajaxPrefilter(\"json jsonp\",function(c,d,e){var f,g,h,i=c.data,j=c.url,k=c.jsonp!==!1,l=k&&cG.test(j),m=k&&!l&&typeof i==\"string\"&&!(c.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&cG.test(i);if(c.dataTypes[0]===\"jsonp\"||l||m)return f=c.jsonpCallback=p.isFunction(c.jsonpCallback)?c.jsonpCallback():c.jsonpCallback,g=a[f],l?c.url=j.replace(cG,\"$1\"+f):m?c.data=i.replace(cG,\"$1\"+f):k&&(c.url+=(cF.test(j)?\"&\":\"?\")+c.jsonp+\"=\"+f),c.converters[\"script json\"]=function(){return h||p.error(f+\" was not called\"),h[0]},c.dataTypes[0]=\"json\",a[f]=function(){h=arguments},e.always(function(){a[f]=g,c[f]&&(c.jsonpCallback=d.jsonpCallback,cE.push(f)),h&&p.isFunction(g)&&g(h[0]),h=g=b}),\"script\"}),p.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/javascript|ecmascript/},converters:{\"text script\":function(a){return p.globalEval(a),a}}}),p.ajaxPrefilter(\"script\",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\",a.global=!1)}),p.ajaxTransport(\"script\",function(a){if(a.crossDomain){var c,d=e.head||e.getElementsByTagName(\"head\")[0]||e.documentElement;return{send:function(f,g){c=e.createElement(\"script\"),c.async=\"async\",a.scriptCharset&&(c.charset=a.scriptCharset),c.src=a.url,c.onload=c.onreadystatechange=function(a,e){if(e||!c.readyState||/loaded|complete/.test(c.readyState))c.onload=c.onreadystatechange=null,d&&c.parentNode&&d.removeChild(c),c=b,e||g(200,\"success\")},d.insertBefore(c,d.firstChild)},abort:function(){c&&c.onload(0,1)}}}});var cI,cJ=a.ActiveXObject?function(){for(var a in cI)cI[a](0,1)}:!1,cK=0;p.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&cL()||cM()}:cL,function(a){p.extend(p.support,{ajax:!!a,cors:!!a&&\"withCredentials\"in a})}(p.ajaxSettings.xhr()),p.support.ajax&&p.ajaxTransport(function(c){if(!c.crossDomain||p.support.cors){var d;return{send:function(e,f){var g,h,i=c.xhr();c.username?i.open(c.type,c.url,c.async,c.username,c.password):i.open(c.type,c.url,c.async);if(c.xhrFields)for(h in c.xhrFields)i[h]=c.xhrFields[h];c.mimeType&&i.overrideMimeType&&i.overrideMimeType(c.mimeType),!c.crossDomain&&!e[\"X-Requested-With\"]&&(e[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(h in e)i.setRequestHeader(h,e[h])}catch(j){}i.send(c.hasContent&&c.data||null),d=function(a,e){var h,j,k,l,m;try{if(d&&(e||i.readyState===4)){d=b,g&&(i.onreadystatechange=p.noop,cJ&&delete cI[g]);if(e)i.readyState!==4&&i.abort();else{h=i.status,k=i.getAllResponseHeaders(),l={},m=i.responseXML,m&&m.documentElement&&(l.xml=m);try{l.text=i.responseText}catch(a){}try{j=i.statusText}catch(n){j=\"\"}!h&&c.isLocal&&!c.crossDomain?h=l.text?200:404:h===1223&&(h=204)}}}catch(o){e||f(-1,o)}l&&f(h,j,l,k)},c.async?i.readyState===4?setTimeout(d,0):(g=++cK,cJ&&(cI||(cI={},p(a).unload(cJ)),cI[g]=d),i.onreadystatechange=d):d()},abort:function(){d&&d(0,1)}}}});var cN,cO,cP=/^(?:toggle|show|hide)$/,cQ=new RegExp(\"^(?:([-+])=|)(\"+q+\")([a-z%]*)$\",\"i\"),cR=/queueHooks$/,cS=[cY],cT={\"*\":[function(a,b){var c,d,e=this.createTween(a,b),f=cQ.exec(b),g=e.cur(),h=+g||0,i=1,j=20;if(f){c=+f[2],d=f[3]||(p.cssNumber[a]?\"\":\"px\");if(d!==\"px\"&&h){h=p.css(e.elem,a,!0)||c||1;do i=i||\".5\",h=h/i,p.style(e.elem,a,h+d);while(i!==(i=e.cur()/g)&&i!==1&&--j)}e.unit=d,e.start=h,e.end=f[1]?h+(f[1]+1)*c:c}return e}]};p.Animation=p.extend(cW,{tweener:function(a,b){p.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");var c,d=0,e=a.length;for(;d<e;d++)c=a[d],cT[c]=cT[c]||[],cT[c].unshift(b)},prefilter:function(a,b){b?cS.unshift(a):cS.push(a)}}),p.Tween=cZ,cZ.prototype={constructor:cZ,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(p.cssNumber[c]?\"\":\"px\")},cur:function(){var a=cZ.propHooks[this.prop];return a&&a.get?a.get(this):cZ.propHooks._default.get(this)},run:function(a){var b,c=cZ.propHooks[this.prop];return this.options.duration?this.pos=b=p.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):cZ.propHooks._default.set(this),this}},cZ.prototype.init.prototype=cZ.prototype,cZ.propHooks={_default:{get:function(a){var b;return a.elem[a.prop]==null||!!a.elem.style&&a.elem.style[a.prop]!=null?(b=p.css(a.elem,a.prop,!1,\"\"),!b||b===\"auto\"?0:b):a.elem[a.prop]},set:function(a){p.fx.step[a.prop]?p.fx.step[a.prop](a):a.elem.style&&(a.elem.style[p.cssProps[a.prop]]!=null||p.cssHooks[a.prop])?p.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},cZ.propHooks.scrollTop=cZ.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},p.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=p.fn[b];p.fn[b]=function(d,e,f){return d==null||typeof d==\"boolean\"||!a&&p.isFunction(d)&&p.isFunction(e)?c.apply(this,arguments):this.animate(c$(b,!0),d,e,f)}}),p.fn.extend({fadeTo:function(a,b,c,d){return this.filter(bZ).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=p.isEmptyObject(a),f=p.speed(b,c,d),g=function(){var b=cW(this,p.extend({},a),f);e&&b.stop(!0)};return e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,c,d){var e=function(a){var b=a.stop;delete a.stop,b(d)};return typeof a!=\"string\"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,c=a!=null&&a+\"queueHooks\",f=p.timers,g=p._data(this);if(c)g[c]&&g[c].stop&&e(g[c]);else for(c in g)g[c]&&g[c].stop&&cR.test(c)&&e(g[c]);for(c=f.length;c--;)f[c].elem===this&&(a==null||f[c].queue===a)&&(f[c].anim.stop(d),b=!1,f.splice(c,1));(b||!d)&&p.dequeue(this,a)})}}),p.each({slideDown:c$(\"show\"),slideUp:c$(\"hide\"),slideToggle:c$(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){p.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),p.speed=function(a,b,c){var d=a&&typeof a==\"object\"?p.extend({},a):{complete:c||!c&&b||p.isFunction(a)&&a,duration:a,easing:c&&b||b&&!p.isFunction(b)&&b};d.duration=p.fx.off?0:typeof d.duration==\"number\"?d.duration:d.duration in p.fx.speeds?p.fx.speeds[d.duration]:p.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue=\"fx\";return d.old=d.complete,d.complete=function(){p.isFunction(d.old)&&d.old.call(this),d.queue&&p.dequeue(this,d.queue)},d},p.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},p.timers=[],p.fx=cZ.prototype.init,p.fx.tick=function(){var a,b=p.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||p.fx.stop()},p.fx.timer=function(a){a()&&p.timers.push(a)&&!cO&&(cO=setInterval(p.fx.tick,p.fx.interval))},p.fx.interval=13,p.fx.stop=function(){clearInterval(cO),cO=null},p.fx.speeds={slow:600,fast:200,_default:400},p.fx.step={},p.expr&&p.expr.filters&&(p.expr.filters.animated=function(a){return p.grep(p.timers,function(b){return a===b.elem}).length});var c_=/^(?:body|html)$/i;p.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){p.offset.setOffset(this,a,b)});var c,d,e,f,g,h,i,j={top:0,left:0},k=this[0],l=k&&k.ownerDocument;if(!l)return;return(d=l.body)===k?p.offset.bodyOffset(k):(c=l.documentElement,p.contains(c,k)?(typeof k.getBoundingClientRect!=\"undefined\"&&(j=k.getBoundingClientRect()),e=da(l),f=c.clientTop||d.clientTop||0,g=c.clientLeft||d.clientLeft||0,h=e.pageYOffset||c.scrollTop,i=e.pageXOffset||c.scrollLeft,{top:j.top+h-f,left:j.left+i-g}):j)},p.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;return p.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(p.css(a,\"marginTop\"))||0,c+=parseFloat(p.css(a,\"marginLeft\"))||0),{top:b,left:c}},setOffset:function(a,b,c){var d=p.css(a,\"position\");d===\"static\"&&(a.style.position=\"relative\");var e=p(a),f=e.offset(),g=p.css(a,\"top\"),h=p.css(a,\"left\"),i=(d===\"absolute\"||d===\"fixed\")&&p.inArray(\"auto\",[g,h])>-1,j={},k={},l,m;i?(k=e.position(),l=k.top,m=k.left):(l=parseFloat(g)||0,m=parseFloat(h)||0),p.isFunction(b)&&(b=b.call(a,c,f)),b.top!=null&&(j.top=b.top-f.top+l),b.left!=null&&(j.left=b.left-f.left+m),\"using\"in b?b.using.call(a,j):e.css(j)}},p.fn.extend({position:function(){if(!this[0])return;var a=this[0],b=this.offsetParent(),c=this.offset(),d=c_.test(b[0].nodeName)?{top:0,left:0}:b.offset();return c.top-=parseFloat(p.css(a,\"marginTop\"))||0,c.left-=parseFloat(p.css(a,\"marginLeft\"))||0,d.top+=parseFloat(p.css(b[0],\"borderTopWidth\"))||0,d.left+=parseFloat(p.css(b[0],\"borderLeftWidth\"))||0,{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||e.body;while(a&&!c_.test(a.nodeName)&&p.css(a,\"position\")===\"static\")a=a.offsetParent;return a||e.body})}}),p.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(a,c){var d=/Y/.test(c);p.fn[a]=function(e){return p.access(this,function(a,e,f){var g=da(a);if(f===b)return g?c in g?g[c]:g.document.documentElement[e]:a[e];g?g.scrollTo(d?p(g).scrollLeft():f,d?f:p(g).scrollTop()):a[e]=f},a,e,arguments.length,null)}}),p.each({Height:\"height\",Width:\"width\"},function(a,c){p.each({padding:\"inner\"+a,content:c,\"\":\"outer\"+a},function(d,e){p.fn[e]=function(e,f){var g=arguments.length&&(d||typeof e!=\"boolean\"),h=d||(e===!0||f===!0?\"margin\":\"border\");return p.access(this,function(c,d,e){var f;return p.isWindow(c)?c.document.documentElement[\"client\"+a]:c.nodeType===9?(f=c.documentElement,Math.max(c.body[\"scroll\"+a],f[\"scroll\"+a],c.body[\"offset\"+a],f[\"offset\"+a],f[\"client\"+a])):e===b?p.css(c,d,e,h):p.style(c,d,e,h)},c,g?e:b,g,null)}})}),a.jQuery=a.$=p,typeof define==\"function\"&&define.amd&&define.amd.jQuery&&define(\"jquery\",[],function(){return p})})(window);"]],"start1":0,"start2":0,"length1":335811,"length2":93433}]],"length":93433,"saved":false}
